<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="5094" onload="init(evt)" viewBox="0 0 1200 5094" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="5094.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="5077" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="5077" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/swap! (24 samples, 0.29%)</title><rect x="291.5" y="4549" width="3.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="294.47" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="837.0" y="3893" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="839.98" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="994.9" y="2597" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/node-get (5 samples, 0.06%)</title><rect x="208.0" y="4549" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="210.96" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Compiler.eval (2,321 samples, 28.32%)</title><rect x="700.2" y="4709" width="334.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="703.20" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.lang.Compiler.eval</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (26 samples, 0.32%)</title><rect x="889.8" y="4117" width="3.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="892.82" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="892.8" y="3797" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="895.84" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (12 samples, 0.15%)</title><rect x="1004.1" y="2901" width="1.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.13" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (70 samples, 0.85%)</title><rect x="857.4" y="4053" width="10.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="860.42" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$7.isSatisfiedBy (11 samples, 0.13%)</title><rect x="730.3" y="4133" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="733.30" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="929.7" y="3285" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="932.70" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="754.3" y="3189" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="880.5" y="3573" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (37 samples, 0.45%)</title><rect x="862.2" y="4021" width="5.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="865.17" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="903.8" y="3333" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="906.78" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand-int (2 samples, 0.02%)</title><rect x="930.0" y="3525" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="932.99" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="760.4" y="3205" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.39" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (5 samples, 0.06%)</title><rect x="754.3" y="3269" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (47 samples, 0.57%)</title><rect x="838.0" y="4085" width="6.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="840.99" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="938.5" y="3637" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (24 samples, 0.29%)</title><rect x="840.9" y="4005" width="3.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="843.87" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="872.7" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (5 samples, 0.06%)</title><rect x="990.3" y="3013" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="993.31" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="67.7" y="5029" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="70.73" y="5039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="1015.5" y="2133" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.51" y="2143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="837.3" y="3765" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="840.27" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="947.7" y="3301" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.get (26 samples, 0.32%)</title><rect x="355.8" y="4549" width="3.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="358.82" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand-int (3 samples, 0.04%)</title><rect x="796.8" y="4597" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="799.81" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (9 samples, 0.11%)</title><rect x="932.6" y="3573" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="935.58" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="749.3" y="501" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="776.8" y="3861" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="779.80" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (14 samples, 0.17%)</title><rect x="1029.5" y="4453" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1032.47" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (15 samples, 0.18%)</title><rect x="810.9" y="4149" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="813.92" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (2 samples, 0.02%)</title><rect x="209.1" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="212.11" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (8 samples, 0.10%)</title><rect x="1000.0" y="2949" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.96" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="930.4" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="933.42" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="968.7" y="3349" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="971.71" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="836.5" y="3749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="839.55" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (80 samples, 0.98%)</title><rect x="911.4" y="3909" width="11.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="914.41" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (2 samples, 0.02%)</title><rect x="182.5" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="185.48" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.AsciiString$1.hashCode (2 samples, 0.02%)</title><rect x="377.4" y="4645" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="380.42" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/subscribe--11925/fn--11926 (42 samples, 0.51%)</title><rect x="362.0" y="4869" width="6.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="365.01" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="939.5" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.49" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (25 samples, 0.31%)</title><rect x="845.8" y="4389" width="3.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="848.76" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (33 samples, 0.40%)</title><rect x="1015.1" y="2261" width="4.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.07" y="2271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.pcequiv (2 samples, 0.02%)</title><rect x="208.8" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.83" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="988.9" y="3077" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="998.7" y="2821" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1001.66" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="954.5" y="3413" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="957.46" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="905.8" y="3445" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="908.80" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1017.4" y="1349" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (55 samples, 0.67%)</title><rect x="941.5" y="3925" width="7.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="944.50" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="1019.2" y="1173" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.25" y="1183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (7 samples, 0.09%)</title><rect x="839.6" y="3733" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="842.57" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (115 samples, 1.40%)</title><rect x="1004.1" y="3029" width="16.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.13" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (4 samples, 0.05%)</title><rect x="297.4" y="4485" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="300.37" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (18 samples, 0.22%)</title><rect x="964.7" y="3461" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ConnectionGraph::add_java_object_edges(JavaObjectNode*, bool) (293 samples, 3.57%)</title><rect x="1123.1" y="4821" width="42.1" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text text-anchor="" x="1126.05" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Con..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="984.0" y="2949" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (4 samples, 0.05%)</title><rect x="762.7" y="3557" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.69" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.default.Stream.close (4 samples, 0.05%)</title><rect x="510.9" y="4517" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="513.88" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (7 samples, 0.09%)</title><rect x="953.5" y="3317" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.45" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="929.7" y="3269" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="932.70" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="832.8" y="3701" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="835.80" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (8 samples, 0.10%)</title><rect x="830.5" y="3685" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="833.50" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="781.1" y="3989" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="784.12" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RestFn.invoke (18 samples, 0.22%)</title><rect x="495.0" y="4613" width="2.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="498.04" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="974.8" y="3621" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$ArrayNode.find (3 samples, 0.04%)</title><rect x="33.0" y="5013" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="36.04" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="903.6" y="3669" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="906.64" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (8 samples, 0.10%)</title><rect x="956.9" y="3381" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="959.91" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PoolThreadCache$MemoryRegionCache.allocate (3 samples, 0.04%)</title><rect x="514.2" y="4709" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="517.19" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="984.3" y="2917" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="987.26" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="984.0" y="2885" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (28 samples, 0.34%)</title><rect x="783.3" y="4341" width="4.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.28" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractReferenceCountedByteBuf.release (6 samples, 0.07%)</title><rect x="509.9" y="4469" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="512.87" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (10 samples, 0.12%)</title><rect x="758.7" y="3573" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (7 samples, 0.09%)</title><rect x="481.4" y="4453" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="484.37" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (1,248 samples, 15.23%)</title><rect x="849.4" y="4405" width="179.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="852.36" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.client/rand-jso..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="933.3" y="3397" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="936.30" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="933.9" y="3573" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="936.87" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.java.io/fn--11562 (8 samples, 0.10%)</title><rect x="745.6" y="4549" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="748.56" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hasheq (15 samples, 0.18%)</title><rect x="292.0" y="4389" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="295.04" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="872.7" y="3845" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="1009.3" y="2597" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1012.31" y="2607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="1006.9" y="2773" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1009.87" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="822.7" y="4245" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$BmpCharProperty.match (9 samples, 0.11%)</title><rect x="309.6" y="4485" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="312.61" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (2 samples, 0.02%)</title><rect x="755.1" y="3317" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.06" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="842.4" y="3781" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="845.45" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (3 samples, 0.04%)</title><rect x="775.1" y="3893" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.07" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="297.1" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="300.08" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (10 samples, 0.12%)</title><rect x="785.7" y="4245" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.72" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="863.0" y="3685" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="866.04" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="978.1" y="2981" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.server/hash-total/fn--21782 (430 samples, 5.25%)</title><rect x="140.2" y="4677" width="61.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="143.15" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >exampl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1017.4" y="1493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="752.2" y="2741" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.18" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="807.0" y="3797" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="810.03" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_testcancel (2 samples, 0.02%)</title><rect x="469.1" y="4837" width="0.3" height="15.0" fill="rgb(252,125,125)" rx="2" ry="2" />
<text text-anchor="" x="472.13" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatterBuilder$NumberPrinterParser.format (2 samples, 0.02%)</title><rect x="853.7" y="3461" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="856.68" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (12 samples, 0.15%)</title><rect x="914.9" y="3557" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="917.87" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client-middleware/wrap-exceptions/fn--17751/fn--17768 (36 samples, 0.44%)</title><rect x="719.5" y="4437" width="5.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="722.50" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (43 samples, 0.52%)</title><rect x="1013.8" y="2421" width="6.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1016.78" y="2431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (6 samples, 0.07%)</title><rect x="933.9" y="3605" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="936.87" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="899.9" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="902.90" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (16 samples, 0.20%)</title><rect x="783.3" y="4229" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.28" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="815.4" y="3653" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="818.38" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (7 samples, 0.09%)</title><rect x="951.9" y="3429" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="954.87" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="1003.7" y="2885" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1006.70" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.KeywordLookupSite$1.get (2 samples, 0.02%)</title><rect x="76.8" y="4741" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="79.80" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (34 samples, 0.41%)</title><rect x="851.5" y="3989" width="4.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="854.52" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="904.9" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.93" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="1010.2" y="2485" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.18" y="2495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (17 samples, 0.21%)</title><rect x="996.8" y="3205" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.79" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$7.isSatisfiedBy (15 samples, 0.18%)</title><rect x="729.7" y="4245" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="732.72" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (21 samples, 0.26%)</title><rect x="858.6" y="3829" width="3.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="861.57" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1013.2" y="2021" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="2031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/conj--5407 (2 samples, 0.02%)</title><rect x="312.5" y="4501" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="315.49" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (3 samples, 0.04%)</title><rect x="88.5" y="4229" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="91.47" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1010.3" y="2277" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.32" y="2287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="984.6" y="2949" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="987.55" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (2 samples, 0.02%)</title><rect x="178.0" y="4325" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="181.02" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="855.3" y="3717" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="858.26" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (6 samples, 0.07%)</title><rect x="978.1" y="3125" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/assoc--5433 (20 samples, 0.24%)</title><rect x="338.5" y="4517" width="2.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="341.55" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="952.2" y="3173" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="955.16" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (5 samples, 0.06%)</title><rect x="867.9" y="3989" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="870.93" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (287 samples, 3.50%)</title><rect x="85.2" y="4677" width="41.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="88.15" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >che..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="975.8" y="3045" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.77" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="916.6" y="3701" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="919.60" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="998.9" y="2677" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1001.95" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (3 samples, 0.04%)</title><rect x="775.1" y="3861" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.07" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (6 samples, 0.07%)</title><rect x="890.4" y="3765" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="893.39" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (75 samples, 0.92%)</title><rect x="927.7" y="3813" width="10.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="930.68" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (4 samples, 0.05%)</title><rect x="771.5" y="3749" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="774.47" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="919.6" y="3365" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (7 samples, 0.09%)</title><rect x="780.5" y="4085" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="783.54" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util$4.equiv (3 samples, 0.04%)</title><rect x="208.3" y="4453" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.25" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="1016.7" y="1493" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.66" y="1503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.DelegatingMethodAccessorImpl (2 samples, 0.02%)</title><rect x="878.9" y="3381" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="881.88" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.access$400 (2 samples, 0.02%)</title><rect x="499.9" y="4309" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="502.94" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.SelectorImpl.select (404 samples, 4.93%)</title><rect x="613.1" y="4885" width="58.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="616.10" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.ni..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="1008.9" y="2405" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (10 samples, 0.12%)</title><rect x="180.0" y="4485" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="183.03" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1173.6" y="4453" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text text-anchor="" x="1176.59" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1004.6" y="2485" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.56" y="2495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (3 samples, 0.04%)</title><rect x="777.4" y="3989" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="780.37" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="892.8" y="3717" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="895.84" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="872.0" y="3781" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="874.96" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="955.8" y="3205" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="958.76" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="813.8" y="3573" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.80" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (3 samples, 0.04%)</title><rect x="829.2" y="3941" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="832.20" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (5 samples, 0.06%)</title><rect x="754.3" y="3205" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="968.7" y="3173" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.71" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PooledSlicedByteBuf.newInstance (2 samples, 0.02%)</title><rect x="474.6" y="4629" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.60" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (24 samples, 0.29%)</title><rect x="1016.4" y="2069" width="3.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.37" y="2079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="977.6" y="3061" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="980.64" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="949.4" y="3701" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (15 samples, 0.18%)</title><rect x="911.7" y="3637" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="914.70" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="915.9" y="3477" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="918.88" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="1008.9" y="2485" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (11 samples, 0.13%)</title><rect x="758.7" y="3589" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="843.6" y="3397" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.60" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.reduction/apply-reduction (9 samples, 0.11%)</title><rect x="331.2" y="4565" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="334.20" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="860.2" y="3669" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="863.16" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="1003.0" y="2629" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1005.98" y="2639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="890.7" y="3557" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="893.68" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName (2 samples, 0.02%)</title><rect x="116.7" y="4565" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="119.68" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="869.4" y="3829" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.37" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="749.3" y="373" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter$FormatSpecifier.print (8 samples, 0.10%)</title><rect x="790.3" y="4501" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="793.33" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (44 samples, 0.54%)</title><rect x="749.0" y="3397" width="6.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="1004.3" y="2597" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.28" y="2607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="936.0" y="3365" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="939.03" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.IOUtil.drain (9 samples, 0.11%)</title><rect x="611.7" y="4837" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="614.66" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (6 samples, 0.07%)</title><rect x="756.8" y="3333" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeMatchingMethod (2 samples, 0.02%)</title><rect x="963.8" y="2933" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="966.82" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="823.6" y="3861" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="826.59" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="966.7" y="3045" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="969.70" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (1,617 samples, 19.73%)</title><rect x="800.3" y="4597" width="232.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="803.27" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.core/reduce</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand (2 samples, 0.02%)</title><rect x="1021.4" y="3557" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1024.41" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (12 samples, 0.15%)</title><rect x="970.2" y="3349" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="973.15" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="996.2" y="2885" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.21" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="983.0" y="3029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="985.97" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="775.5" y="3749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.50" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (54 samples, 0.66%)</title><rect x="941.6" y="3749" width="7.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="944.65" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.ChannelInboundHandlerAdapter.channelRead (91 samples, 1.11%)</title><rect x="498.8" y="4629" width="13.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="501.79" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureCapacityInternal (2 samples, 0.02%)</title><rect x="874.3" y="4229" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="877.27" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.auto_flatten_seq.AutoFlattenSeq.conj_flat (3 samples, 0.04%)</title><rect x="1057.0" y="4949" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1059.97" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="967.7" y="3269" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="970.71" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/map/fn--5884 (11 samples, 0.13%)</title><rect x="495.0" y="4501" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="498.04" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="1013.8" y="2277" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1016.78" y="2287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="997.4" y="2869" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.36" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__psynch_cvwait (4 samples, 0.05%)</title><rect x="1058.8" y="4885" width="0.6" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text text-anchor="" x="1061.84" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (19 samples, 0.23%)</title><rect x="766.9" y="4021" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="769.86" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_List&amp;) (2 samples, 0.02%)</title><rect x="1112.0" y="4837" width="0.3" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text text-anchor="" x="1114.97" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractByteBuf.writeBytes (94 samples, 1.15%)</title><rect x="515.1" y="4853" width="13.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="518.06" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (2 samples, 0.02%)</title><rect x="181.9" y="4357" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="184.90" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (11 samples, 0.13%)</title><rect x="172.7" y="4069" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="983.3" y="3013" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.26" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigInteger.add (2 samples, 0.02%)</title><rect x="200.0" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="203.04" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="968.1" y="3333" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.14" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="837.0" y="4069" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="839.98" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (6 samples, 0.07%)</title><rect x="908.8" y="3765" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (13 samples, 0.16%)</title><rect x="920.1" y="3605" width="1.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="923.05" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="879.5" y="3669" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="882.45" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (9 samples, 0.11%)</title><rect x="1011.5" y="2501" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.ASeq.toArray (2 samples, 0.02%)</title><rect x="789.8" y="4549" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="792.76" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="871.5" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.53" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="992.8" y="3157" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.76" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="757.7" y="3317" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.65" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers$DoubleOps.multiply (3 samples, 0.04%)</title><rect x="1029.0" y="4405" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1032.04" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="999.2" y="3077" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1002.24" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1006.9" y="2693" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.87" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (9 samples, 0.11%)</title><rect x="298.8" y="4469" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="301.81" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.get (3 samples, 0.04%)</title><rect x="492.6" y="3957" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="495.60" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="976.9" y="3269" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.92" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap$TransientArrayMap.doAssoc (2 samples, 0.02%)</title><rect x="117.1" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="120.12" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (7 samples, 0.09%)</title><rect x="903.6" y="3701" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="906.64" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="923.7" y="3589" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="926.65" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="886.5" y="3413" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="889.51" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (5 samples, 0.06%)</title><rect x="1010.0" y="2693" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.03" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (7 samples, 0.09%)</title><rect x="822.0" y="4293" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (4 samples, 0.05%)</title><rect x="765.0" y="3829" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="974.8" y="3557" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/node-get (31 samples, 0.38%)</title><rect x="284.0" y="4549" width="4.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="286.98" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="939.8" y="3493" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream/connect (4 samples, 0.05%)</title><rect x="479.2" y="4325" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="482.21" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="861.3" y="3701" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="864.31" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="1010.2" y="2405" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1013.18" y="2415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1015.2" y="2101" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.22" y="2111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/success-deferred (2 samples, 0.02%)</title><rect x="719.1" y="4421" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="722.07" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="749.3" y="1205" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="903.8" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="906.78" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__psynch_cvsignal (26 samples, 0.32%)</title><rect x="500.8" y="4357" width="3.7" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text text-anchor="" x="503.80" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="1011.5" y="2261" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (3 samples, 0.04%)</title><rect x="287.0" y="4405" width="0.4" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text text-anchor="" x="290.00" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="995.6" y="2245" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (60 samples, 0.73%)</title><rect x="914.3" y="3877" width="8.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="917.29" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (4 samples, 0.05%)</title><rect x="172.7" y="3797" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/run (4 samples, 0.05%)</title><rect x="49.7" y="5013" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="52.74" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util$4.equiv (3 samples, 0.04%)</title><rect x="279.1" y="4453" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="282.08" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="104.3" y="4469" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="107.30" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (7 samples, 0.09%)</title><rect x="930.3" y="3493" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="933.27" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (2 samples, 0.02%)</title><rect x="757.7" y="3285" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.65" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="818.0" y="3781" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="820.97" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (37 samples, 0.45%)</title><rect x="172.7" y="4373" width="5.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>compojure.core/assoc-route-params (11 samples, 0.13%)</title><rect x="74.5" y="4789" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="77.50" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (2 samples, 0.02%)</title><rect x="906.7" y="3701" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="909.66" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (5 samples, 0.06%)</title><rect x="356.0" y="4533" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="358.97" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="783.3" y="4085" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.28" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.create (7 samples, 0.09%)</title><rect x="338.8" y="4421" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="341.83" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (5 samples, 0.06%)</title><rect x="813.5" y="3733" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="838.6" y="3669" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="841.56" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="863.9" y="3845" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="866.90" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="885.1" y="3413" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="888.07" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="763.6" y="3477" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.55" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="950.1" y="3525" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="953.14" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="879.5" y="3605" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="882.45" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Matcher.&lt;init&gt; (2 samples, 0.02%)</title><rect x="77.1" y="4709" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="80.09" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (11 samples, 0.13%)</title><rect x="860.0" y="3749" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="863.01" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (17 samples, 0.21%)</title><rect x="924.5" y="3845" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="927.51" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.07%)</title><rect x="1173.2" y="4645" width="0.8" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text text-anchor="" x="1176.16" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Long.getChars (2 samples, 0.02%)</title><rect x="127.8" y="4629" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="130.77" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (41 samples, 0.50%)</title><rect x="172.7" y="4405" width="5.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http/eval18308/request--18312 (161 samples, 1.96%)</title><rect x="713.6" y="4597" width="23.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="716.59" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >a..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (3 samples, 0.04%)</title><rect x="277.9" y="4485" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="280.93" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.SocketDispatcher.writev (20 samples, 0.24%)</title><rect x="673.4" y="4405" width="2.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="676.43" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (6 samples, 0.07%)</title><rect x="991.7" y="3061" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.75" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (25 samples, 0.31%)</title><rect x="845.8" y="4309" width="3.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="848.76" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>VM_ParallelGCFailedAllocation::doit() (10 samples, 0.12%)</title><rect x="1182.2" y="4917" width="1.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text text-anchor="" x="1185.23" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (2 samples, 0.02%)</title><rect x="819.1" y="3941" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="822.13" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/success! (33 samples, 0.40%)</title><rect x="719.5" y="4341" width="4.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="722.50" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (3 samples, 0.04%)</title><rect x="67.3" y="5013" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="70.30" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.get (2 samples, 0.02%)</title><rect x="377.9" y="4837" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="380.85" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeNoArgInstanceMember (326 samples, 3.98%)</title><rect x="140.2" y="4661" width="46.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="143.15" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >cloj..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="998.8" y="2709" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1001.80" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="975.0" y="3445" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.05" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="931.6" y="3525" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="934.57" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.swap (20 samples, 0.24%)</title><rect x="338.5" y="4533" width="2.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="341.55" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="817.4" y="3477" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.40" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/regexp-full-parse (468 samples, 5.71%)</title><rect x="210.0" y="4581" width="67.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="212.98" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >instapa..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="901.3" y="3525" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="904.33" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="863.0" y="3637" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="866.04" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.equiv (2 samples, 0.02%)</title><rect x="208.8" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.83" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="1008.2" y="2501" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.16" y="2511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="753.9" y="3109" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="756.91" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="987.7" y="2789" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="979.8" y="3205" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (7 samples, 0.09%)</title><rect x="953.5" y="3333" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.45" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="904.2" y="3397" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="907.21" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeMatchingMethod (2 samples, 0.02%)</title><rect x="875.9" y="4005" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="878.85" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl.lastBytesRead (2 samples, 0.02%)</title><rect x="474.0" y="4869" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.02" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (16 samples, 0.20%)</title><rect x="896.0" y="3717" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="899.01" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="1000.7" y="2693" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1003.68" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (15 samples, 0.18%)</title><rect x="983.0" y="3285" width="2.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="985.97" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (54 samples, 0.66%)</title><rect x="749.0" y="3557" width="7.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="763.6" y="3461" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.55" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="905.4" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="908.37" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="978.1" y="2885" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="991.2" y="2901" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="994.17" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (9 samples, 0.11%)</title><rect x="1007.6" y="2629" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.59" y="2639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="986.7" y="3077" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="989.71" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="883.9" y="3813" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="886.91" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="964.7" y="3253" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.getMethods (5 samples, 0.06%)</title><rect x="131.7" y="4645" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="134.66" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.swap (104 samples, 1.27%)</title><rect x="187.1" y="4629" width="15.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="190.09" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hasheq (16 samples, 0.20%)</title><rect x="356.8" y="4469" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="359.83" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="815.4" y="3797" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="818.38" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="908.5" y="3813" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="911.53" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.conj (22 samples, 0.27%)</title><rect x="291.5" y="4501" width="3.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="294.47" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.ThreadLocal.set (2 samples, 0.02%)</title><rect x="736.5" y="4581" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="739.49" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (11 samples, 0.13%)</title><rect x="892.0" y="3941" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="894.98" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Agent_OnAttach (2 samples, 0.02%)</title><rect x="1181.6" y="4917" width="0.3" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text text-anchor="" x="1184.65" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="929.6" y="3397" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="932.55" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="885.8" y="3685" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="888.79" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (6 samples, 0.07%)</title><rect x="867.8" y="4005" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="870.79" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand-int (3 samples, 0.04%)</title><rect x="1023.3" y="3973" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1026.28" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="872.7" y="3893" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>byte_streams$eval15443$f__15332__auto____15444$this__12089__auto____15447.invoke (4 samples, 0.05%)</title><rect x="478.1" y="4341" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="481.06" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.assoc (2 samples, 0.02%)</title><rect x="208.0" y="4485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="210.96" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentVector.cons (3 samples, 0.04%)</title><rect x="300.2" y="4453" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="303.25" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="968.1" y="3445" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.14" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (2 samples, 0.02%)</title><rect x="185.6" y="4485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="188.65" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="921.1" y="3173" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="924.06" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="1004.9" y="2469" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.85" y="2479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.aleph.dirigiste.Executor$1.run (98 samples, 1.20%)</title><rect x="1034.4" y="5013" width="14.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1037.37" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="822.7" y="3797" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="965.4" y="3173" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="968.40" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="887.2" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="890.23" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="977.6" y="3029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="980.64" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOfRange (2 samples, 0.02%)</title><rect x="123.6" y="4565" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="126.59" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (8 samples, 0.10%)</title><rect x="382.2" y="4789" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="385.17" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.weakCompareAndSet (2 samples, 0.02%)</title><rect x="498.4" y="4501" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="501.36" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="939.5" y="3589" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="942.49" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter$FormatSpecifier.print (4 samples, 0.05%)</title><rect x="739.2" y="4549" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="742.22" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="812.4" y="3829" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="815.36" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (13 samples, 0.16%)</title><rect x="935.7" y="3573" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="938.74" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="891.4" y="3925" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.40" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1001.3" y="2645" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1004.25" y="2655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.grow (2 samples, 0.02%)</title><rect x="874.3" y="4197" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="877.27" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (15 samples, 0.18%)</title><rect x="958.9" y="3701" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="961.92" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.assoc (5 samples, 0.06%)</title><rect x="481.4" y="4405" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="484.37" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1017.4" y="1253" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.KQueueSelectorImpl.updateSelectedKeys (11 samples, 0.13%)</title><rect x="611.4" y="4853" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="614.37" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.java.io/fn--11508 (3 samples, 0.04%)</title><rect x="79.4" y="4581" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="82.39" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="946.3" y="3141" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="1006.3" y="2469" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.29" y="2479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (267 samples, 3.26%)</title><rect x="85.4" y="4645" width="38.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="88.44" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >che..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="753.0" y="2677" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="756.04" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (4 samples, 0.05%)</title><rect x="767.7" y="3749" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.73" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (10 samples, 0.12%)</title><rect x="807.3" y="4005" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="810.32" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="1015.9" y="1957" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.94" y="1967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="937.2" y="3253" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="940.18" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (11 samples, 0.13%)</title><rect x="852.5" y="3621" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="855.53" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="968.1" y="3365" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.14" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="905.8" y="3493" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="908.80" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (10 samples, 0.12%)</title><rect x="981.2" y="3093" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="984.24" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="989.4" y="3029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.45" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="885.1" y="3429" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="888.07" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (12 samples, 0.15%)</title><rect x="967.6" y="3701" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="916.7" y="3541" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="919.74" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1005.6" y="2373" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1008.57" y="2383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (7 samples, 0.09%)</title><rect x="783.7" y="4101" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.71" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="767.7" y="3717" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.73" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="846.3" y="3941" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.34" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.equiv (2 samples, 0.02%)</title><rect x="297.1" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="300.08" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.assoc (6 samples, 0.07%)</title><rect x="499.4" y="4469" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="502.36" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (35 samples, 0.43%)</title><rect x="749.2" y="3205" width="5.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="919.6" y="3173" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="833.8" y="3637" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="836.81" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (6 samples, 0.07%)</title><rect x="859.2" y="3765" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="862.15" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Curly.match0 (6 samples, 0.07%)</title><rect x="309.9" y="4453" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="312.90" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (57 samples, 0.70%)</title><rect x="899.3" y="3909" width="8.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="902.32" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (22 samples, 0.27%)</title><rect x="986.6" y="3461" width="3.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.57" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DIR_Chunk::find_match(GrowableArray&lt;DIR_Chunk*&gt;*, int, DebugInformationRecorder*) (2 samples, 0.02%)</title><rect x="1108.8" y="4789" width="0.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text text-anchor="" x="1111.80" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-full-listener (6 samples, 0.07%)</title><rect x="360.7" y="4645" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="363.72" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (60 samples, 0.73%)</title><rect x="914.3" y="3829" width="8.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="917.29" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="847.1" y="4085" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="850.06" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="836.5" y="3685" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="839.55" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="842.4" y="3717" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="845.45" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="783.9" y="3941" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.85" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush (31 samples, 0.38%)</title><rect x="673.0" y="4725" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (50 samples, 0.61%)</title><rect x="1012.8" y="2501" width="7.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1015.77" y="2511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="1019.0" y="1349" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.96" y="1359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="772.3" y="3781" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="775.34" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (2 samples, 0.02%)</title><rect x="181.9" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="184.90" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Unsafe_Unpark (56 samples, 0.68%)</title><rect x="484.1" y="3765" width="8.1" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text text-anchor="" x="487.10" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="975.8" y="3029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.77" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="892.8" y="3813" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="895.84" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="933.9" y="3621" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="936.87" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="937.2" y="3237" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="940.18" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="892.0" y="3733" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="894.98" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="872.3" y="3701" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.25" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="1001.1" y="2805" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.MessageToMessageEncoder.write (7 samples, 0.09%)</title><rect x="676.4" y="4581" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="679.45" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/conj--5407 (3 samples, 0.04%)</title><rect x="481.7" y="4341" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="484.65" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand-int (2 samples, 0.02%)</title><rect x="1021.4" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1024.41" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1014.2" y="1941" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1017.21" y="1951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="956.5" y="3333" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="959.48" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="869.2" y="4021" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.23" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (3 samples, 0.04%)</title><rect x="208.3" y="4517" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.25" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (33 samples, 0.40%)</title><rect x="902.3" y="3861" width="4.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="905.34" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::WXWriteFromExecSetter::~WXWriteFromExecSetter() (2 samples, 0.02%)</title><rect x="712.9" y="4469" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text text-anchor="" x="715.87" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="896.9" y="3669" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="899.87" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::WXWriteFromExecSetter::~WXWriteFromExecSetter() (2 samples, 0.02%)</title><rect x="491.9" y="3733" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text text-anchor="" x="494.88" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter$FormatSpecifier.flags (2 samples, 0.02%)</title><rect x="792.2" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="795.20" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureExplicitCapacity (2 samples, 0.02%)</title><rect x="806.2" y="3685" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="809.17" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.success (35 samples, 0.43%)</title><rect x="378.3" y="4853" width="5.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="381.28" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseLive::compute(unsigned int) (10 samples, 0.12%)</title><rect x="1120.5" y="4853" width="1.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text text-anchor="" x="1123.46" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (7 samples, 0.09%)</title><rect x="773.1" y="3989" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="776.06" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="913.3" y="3621" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="916.28" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="954.6" y="3173" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="957.60" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter.parse (17 samples, 0.21%)</title><rect x="739.8" y="4549" width="2.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="742.80" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="843.3" y="3477" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.31" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="995.2" y="2741" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="998.20" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hasheq (5 samples, 0.06%)</title><rect x="323.1" y="4453" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="326.14" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="946.8" y="3557" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.83" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (22 samples, 0.27%)</title><rect x="858.4" y="3989" width="3.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="861.43" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (6 samples, 0.07%)</title><rect x="908.8" y="3781" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (34 samples, 0.41%)</title><rect x="851.5" y="4005" width="4.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="854.52" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="976.9" y="3221" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="979.92" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (12 samples, 0.15%)</title><rect x="852.4" y="3749" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="855.38" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="937.0" y="3477" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="940.04" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (11 samples, 0.13%)</title><rect x="951.9" y="3605" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="954.87" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$7.isSatisfiedBy (18 samples, 0.22%)</title><rect x="729.3" y="4293" width="2.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="732.29" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Object.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1021.4" y="3461" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1024.41" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (7 samples, 0.09%)</title><rect x="1002.5" y="2725" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1005.55" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="970.4" y="3205" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="973.44" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="1003.7" y="2965" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1006.70" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="995.6" y="2549" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.copyMethods (2 samples, 0.02%)</title><rect x="945.5" y="3061" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="948.53" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (47 samples, 0.57%)</title><rect x="803.3" y="4261" width="6.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="806.29" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (4 samples, 0.05%)</title><rect x="877.7" y="3509" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="880.72" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOfObject (2 samples, 0.02%)</title><rect x="207.7" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="210.67" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (6 samples, 0.07%)</title><rect x="991.7" y="3045" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="994.75" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="210.1" y="4309" width="0.3" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text text-anchor="" x="213.12" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/conj--5407 (7 samples, 0.09%)</title><rect x="328.0" y="4533" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="331.04" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/assoc! (2 samples, 0.02%)</title><rect x="102.9" y="4517" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="105.86" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (126 samples, 1.54%)</title><rect x="827.6" y="4405" width="18.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="830.62" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (7 samples, 0.09%)</title><rect x="760.2" y="3493" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="751.3" y="2501" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="754.32" y="2511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="841.4" y="3477" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="844.44" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="818.8" y="3733" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="821.84" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="1000.5" y="2789" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1003.53" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="987.1" y="3157" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="990.14" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="994.2" y="2965" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.20" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/apply (17 samples, 0.21%)</title><rect x="742.2" y="4597" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="745.24" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (4 samples, 0.05%)</title><rect x="770.5" y="3653" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="898.6" y="3797" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="901.60" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="861.6" y="3669" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="864.60" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="351.9" y="4453" width="0.3" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text text-anchor="" x="354.94" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (24 samples, 0.29%)</title><rect x="989.9" y="3397" width="3.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.88" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (8 samples, 0.10%)</title><rect x="956.9" y="3397" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="959.91" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="840.0" y="3365" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="843.00" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.swap (7 samples, 0.09%)</title><rect x="65.6" y="5013" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="68.57" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="72.6" y="5013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="75.63" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format (5 samples, 0.06%)</title><rect x="798.7" y="4485" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="801.68" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="954.6" y="3125" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="957.60" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="863.9" y="3781" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="866.90" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (7 samples, 0.09%)</title><rect x="953.5" y="3429" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.45" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.formatTo (3 samples, 0.04%)</title><rect x="801.7" y="4421" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="804.71" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (4 samples, 0.05%)</title><rect x="84.6" y="4597" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="87.58" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (33 samples, 0.40%)</title><rect x="868.8" y="4293" width="4.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="871.80" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Branch.match (5 samples, 0.06%)</title><rect x="795.2" y="4325" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="798.23" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="982.7" y="3269" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="985.68" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="964.4" y="3157" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="967.39" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="837.6" y="3813" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="840.55" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (581 samples, 7.09%)</title><rect x="940.8" y="4005" width="83.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="943.78" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (5 samples, 0.06%)</title><rect x="920.8" y="3461" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.77" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (16 samples, 0.20%)</title><rect x="932.6" y="3717" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="935.58" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>compojure.core/wrap-route-info/fn--20608 (3 samples, 0.04%)</title><rect x="1057.5" y="5013" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1060.55" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="890.7" y="3685" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="893.68" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (3 samples, 0.04%)</title><rect x="1022.7" y="3845" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1025.70" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.assoc (4 samples, 0.05%)</title><rect x="299.1" y="4437" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="302.10" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="1016.7" y="1509" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.66" y="1519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (9 samples, 0.11%)</title><rect x="805.6" y="3877" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="808.59" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpObjectEncoder.encodeHeaders (4 samples, 0.05%)</title><rect x="676.7" y="4533" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="679.74" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (14 samples, 0.17%)</title><rect x="999.8" y="3141" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.81" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="749.3" y="1301" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (10 samples, 0.12%)</title><rect x="776.7" y="4101" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="779.65" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="984.6" y="3029" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="987.55" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (88 samples, 1.07%)</title><rect x="894.9" y="4037" width="12.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="897.86" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Listener.onSuccess (75 samples, 0.92%)</title><rect x="482.7" y="4405" width="10.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="485.66" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="872.0" y="3829" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.96" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (29 samples, 0.35%)</title><rect x="963.1" y="3493" width="4.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="966.10" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="823.7" y="3749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="826.73" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="848.5" y="4005" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.50" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="760.4" y="3189" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.39" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="869.9" y="3861" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.95" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.createHT (19 samples, 0.23%)</title><rect x="317.1" y="4437" width="2.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="320.09" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="783.9" y="3973" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.85" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="956.5" y="3301" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="959.48" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (16 samples, 0.20%)</title><rect x="896.0" y="3765" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="899.01" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="865.2" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (10 samples, 0.12%)</title><rect x="817.7" y="3973" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.69" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers$LongOps.combine (2 samples, 0.02%)</title><rect x="810.1" y="4165" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="813.06" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="926.5" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="929.53" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (20 samples, 0.24%)</title><rect x="1016.9" y="1989" width="2.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="1999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (12 samples, 0.15%)</title><rect x="981.2" y="3285" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="984.24" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="892.8" y="3733" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="895.84" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.equal (3 samples, 0.04%)</title><rect x="900.3" y="3349" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="903.33" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>IndexSetIterator::advance_and_next() (3 samples, 0.04%)</title><rect x="1117.3" y="4837" width="0.4" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text text-anchor="" x="1120.29" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyRequest.get_STAR_ (2 samples, 0.02%)</title><rect x="73.6" y="4741" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="76.64" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="953.7" y="3093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (11 samples, 0.13%)</title><rect x="997.7" y="2997" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.65" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="949.4" y="3637" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (2 samples, 0.02%)</title><rect x="204.1" y="4629" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="207.08" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (5 samples, 0.06%)</title><rect x="811.4" y="3941" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="814.35" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (4 samples, 0.05%)</title><rect x="767.2" y="3749" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.15" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="207.7" y="4389" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="210.67" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="869.8" y="3925" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.80" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="817.4" y="3765" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="820.40" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="898.7" y="3685" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="901.74" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (220 samples, 2.68%)</title><rect x="989.7" y="3445" width="31.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.73" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ex..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="847.1" y="4133" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="850.06" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__psynch_cvwait (2 samples, 0.02%)</title><rect x="10.0" y="4901" width="0.3" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (17 samples, 0.21%)</title><rect x="996.8" y="3077" width="2.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.79" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="848.1" y="3989" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="851.06" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="913.0" y="3477" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="916.00" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="832.2" y="3685" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="835.23" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.ZonedDateTime.create (2 samples, 0.02%)</title><rect x="799.5" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="802.55" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (9 samples, 0.11%)</title><rect x="949.4" y="3861" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="966.6" y="3125" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="969.55" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="843.3" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="846.31" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="1011.5" y="2181" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="817.0" y="3781" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="819.97" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (11 samples, 0.13%)</title><rect x="908.4" y="3877" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="911.39" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="779.1" y="3845" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (6 samples, 0.07%)</title><rect x="865.9" y="3717" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="985.4" y="3189" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="988.41" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="1003.7" y="2821" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1006.70" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="992.0" y="2901" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.04" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (6 samples, 0.07%)</title><rect x="756.8" y="3285" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="869.4" y="3797" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.37" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (7 samples, 0.09%)</title><rect x="1007.9" y="2565" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1010.87" y="2575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder.decode (10 samples, 0.12%)</title><rect x="476.2" y="4693" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="479.18" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (5 samples, 0.06%)</title><rect x="838.6" y="3653" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="841.56" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="995.6" y="2357" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (134 samples, 1.63%)</title><rect x="802.1" y="4485" width="19.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="805.14" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (16 samples, 0.20%)</title><rect x="907.7" y="4085" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="910.67" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.createNode (2 samples, 0.02%)</title><rect x="284.7" y="4389" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="287.70" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/concat/fn--5508 (2 samples, 0.02%)</title><rect x="506.4" y="4421" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="509.42" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gettimeofday (6 samples, 0.07%)</title><rect x="1039.7" y="4901" width="0.9" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text text-anchor="" x="1042.69" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="994.2" y="2757" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.20" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (5 samples, 0.06%)</title><rect x="1013.8" y="2309" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1016.78" y="2319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="900.2" y="3381" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="903.18" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::WXWriteFromExecSetter::WXWriteFromExecSetter() (2 samples, 0.02%)</title><rect x="504.5" y="4373" width="0.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text text-anchor="" x="507.55" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Object.hashCode (10 samples, 0.12%)</title><rect x="303.1" y="4421" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="306.13" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.copyMethods (2 samples, 0.02%)</title><rect x="797.5" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="800.53" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="981.8" y="2901" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="984.82" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (5 samples, 0.06%)</title><rect x="782.0" y="4149" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="784.98" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (9 samples, 0.11%)</title><rect x="805.6" y="3781" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="808.59" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.server/parse-log-and-hash (1,920 samples, 23.43%)</title><rect x="85.2" y="4741" width="276.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="88.15" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.server/parse-log-and-hash</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;) (3 samples, 0.04%)</title><rect x="1169.7" y="4837" width="0.4" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text text-anchor="" x="1172.70" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="767.9" y="3669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.87" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="1004.3" y="2613" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.28" y="2623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="814.2" y="3733" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="817.23" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (38 samples, 0.46%)</title><rect x="828.1" y="4133" width="5.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="831.05" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.&lt;init&gt; (2 samples, 0.02%)</title><rect x="78.4" y="4693" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="81.39" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (7 samples, 0.09%)</title><rect x="323.0" y="4501" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="326.00" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (17 samples, 0.21%)</title><rect x="886.2" y="3861" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="889.22" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.DefaultChannelPipeline.touch (2 samples, 0.02%)</title><rect x="512.0" y="4773" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="515.03" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (6 samples, 0.07%)</title><rect x="835.3" y="3829" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="838.25" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.access$700 (2 samples, 0.02%)</title><rect x="68.9" y="5013" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="71.88" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="781.1" y="3973" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="784.12" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (2 samples, 0.02%)</title><rect x="509.6" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="512.59" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (3 samples, 0.04%)</title><rect x="840.9" y="3941" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="843.87" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (178 samples, 2.17%)</title><rect x="748.6" y="4229" width="25.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.58" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (5 samples, 0.06%)</title><rect x="955.6" y="3269" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="958.61" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractReferenceCountedByteBuf.release (6 samples, 0.07%)</title><rect x="509.9" y="4517" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="512.87" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="967.6" y="3381" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.cons (22 samples, 0.27%)</title><rect x="291.5" y="4469" width="3.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="294.47" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (5 samples, 0.06%)</title><rect x="896.9" y="3573" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="899.87" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (8 samples, 0.10%)</title><rect x="767.2" y="3877" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.15" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (2 samples, 0.02%)</title><rect x="176.3" y="4245" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="179.29" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="811.4" y="3861" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="814.35" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (30 samples, 0.37%)</title><rect x="884.5" y="3893" width="4.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="887.49" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (3 samples, 0.04%)</title><rect x="758.1" y="3317" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.08" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="290.9" y="4533" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="293.89" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="749.3" y="789" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.KeywordLookupSite$1.get (2 samples, 0.02%)</title><rect x="778.5" y="4277" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="781.53" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="988.3" y="3077" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.29" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.CombinedChannelDuplexHandler.write (7 samples, 0.09%)</title><rect x="676.4" y="4597" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="679.45" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="984.6" y="3061" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="987.55" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.compareAndSet (3 samples, 0.04%)</title><rect x="680.5" y="4437" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.48" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="869.9" y="3637" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.95" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.multiply (2 samples, 0.02%)</title><rect x="788.9" y="4581" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="791.89" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Relocation::pd_set_call_destination(unsigned char*) (3 samples, 0.04%)</title><rect x="1177.0" y="4757" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text text-anchor="" x="1180.04" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (5 samples, 0.06%)</title><rect x="770.5" y="3749" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="884.1" y="3669" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="887.06" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="818.7" y="3877" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="821.69" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="860.2" y="3653" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="863.16" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="822.3" y="3973" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.29" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="905.8" y="3477" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="908.80" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (19 samples, 0.23%)</title><rect x="749.2" y="2805" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (16 samples, 0.20%)</title><rect x="911.7" y="3813" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="914.70" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.gt (2 samples, 0.02%)</title><rect x="880.9" y="3957" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="883.89" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.ReflectionFactory.copyMethod (4 samples, 0.05%)</title><rect x="131.8" y="4613" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="134.80" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.alloc (2 samples, 0.02%)</title><rect x="678.9" y="4789" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="681.90" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (76 samples, 0.93%)</title><rect x="927.5" y="3957" width="11.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="930.54" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (8 samples, 0.10%)</title><rect x="862.8" y="3781" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="865.75" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="1001.1" y="2709" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="1006.9" y="2725" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.87" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken (4 samples, 0.05%)</title><rect x="106.9" y="4533" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="109.89" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="981.8" y="2965" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="984.82" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (20 samples, 0.24%)</title><rect x="291.8" y="4437" width="2.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="294.75" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (6 samples, 0.07%)</title><rect x="864.3" y="3877" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="867.33" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="983.0" y="3045" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="985.97" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (9 samples, 0.11%)</title><rect x="1007.6" y="2613" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.59" y="2623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.java.io/reader (9 samples, 0.11%)</title><rect x="79.3" y="4645" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="82.25" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__psynch_cvsignal (52 samples, 0.63%)</title><rect x="484.1" y="3733" width="7.5" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text text-anchor="" x="487.10" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PoolArena.allocate (6 samples, 0.07%)</title><rect x="513.8" y="4789" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="516.76" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (65 samples, 0.79%)</title><rect x="1010.8" y="2693" width="9.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.default.Stream.markDrained (2 samples, 0.02%)</title><rect x="510.9" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="513.88" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (54 samples, 0.66%)</title><rect x="941.6" y="3733" width="7.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="944.65" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (41 samples, 0.50%)</title><rect x="172.7" y="4421" width="5.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (8 samples, 0.10%)</title><rect x="88.5" y="4277" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="91.47" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="948.8" y="3557" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="951.85" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="914.0" y="3653" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="917.00" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="842.0" y="3781" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="845.02" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="983.3" y="3189" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.26" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util$4.equiv (2 samples, 0.02%)</title><rect x="319.8" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="322.83" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="863.0" y="3525" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="866.04" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="882.9" y="3653" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="885.91" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.&lt;init&gt; (5 samples, 0.06%)</title><rect x="1056.7" y="4981" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1059.68" y="4991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1007.6" y="2405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1010.59" y="2415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="814.2" y="3717" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="817.23" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (3 samples, 0.04%)</title><rect x="755.9" y="3189" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.92" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="939.2" y="3733" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.20" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="892.0" y="3829" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="894.98" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (36 samples, 0.44%)</title><rect x="1014.6" y="2341" width="5.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1017.64" y="2351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="843.6" y="3653" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.60" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seqFrom (2 samples, 0.02%)</title><rect x="342.7" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="345.72" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (4 samples, 0.05%)</title><rect x="749.3" y="1557" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="938.5" y="3797" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (13 samples, 0.16%)</title><rect x="760.2" y="3749" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="989.4" y="3045" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.45" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="1017.4" y="1797" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (7 samples, 0.09%)</title><rect x="994.9" y="2853" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="902.1" y="3749" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="905.05" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="975.0" y="3461" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="978.05" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="120.7" y="4581" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="123.71" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (170 samples, 2.07%)</title><rect x="996.8" y="3333" width="24.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.79" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >e..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (6 samples, 0.07%)</title><rect x="959.9" y="3525" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.93" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="822.7" y="4133" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (10 samples, 0.12%)</title><rect x="172.7" y="3957" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="974.8" y="3445" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand-int (4 samples, 0.05%)</title><rect x="788.9" y="4613" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="791.89" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyRequest.assoc_STAR_ (5 samples, 0.06%)</title><rect x="74.5" y="4613" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="77.50" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="1008.2" y="2437" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.16" y="2447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="981.8" y="2853" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="984.82" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (3 samples, 0.04%)</title><rect x="289.0" y="4549" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="292.02" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="1003.7" y="2869" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1006.70" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="869.2" y="3925" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.23" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.java.io/reader (8 samples, 0.10%)</title><rect x="743.1" y="4533" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="746.11" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.SocketChannelImpl.write (22 samples, 0.27%)</title><rect x="673.3" y="4437" width="3.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="676.28" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="859.3" y="3637" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="862.29" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="848.1" y="4037" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.06" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="915.2" y="3381" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="918.16" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="822.3" y="3893" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.29" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="869.4" y="3781" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.37" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="869.9" y="3845" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.95" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (29 samples, 0.35%)</title><rect x="876.1" y="3813" width="4.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="879.14" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (2 samples, 0.02%)</title><rect x="180.9" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="183.90" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (5 samples, 0.06%)</title><rect x="185.5" y="4533" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="188.50" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="886.5" y="3541" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="889.51" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/persistent! (2 samples, 0.02%)</title><rect x="98.7" y="4469" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="101.69" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="1016.9" y="1813" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="1823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (8 samples, 0.10%)</title><rect x="978.1" y="3221" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead (215 samples, 2.62%)</title><rect x="481.1" y="4677" width="30.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="484.08" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.concurrent.FastThreadLocal.get (2 samples, 0.02%)</title><rect x="513.9" y="4709" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="516.90" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1004.6" y="2437" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.56" y="2447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue$TransferStack.transfer (26 samples, 0.32%)</title><rect x="378.4" y="4789" width="3.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="381.43" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.format (2 samples, 0.02%)</title><rect x="973.0" y="3221" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="976.03" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="890.0" y="3573" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.nio.charset.CharsetDecoder.decode (2 samples, 0.02%)</title><rect x="746.0" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="748.99" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="908.0" y="3893" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="910.96" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="929.6" y="3429" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="932.55" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimePrintContext.&lt;init&gt; (2 samples, 0.02%)</title><rect x="876.6" y="3653" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="879.57" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (25 samples, 0.31%)</title><rect x="749.2" y="2965" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (11 samples, 0.13%)</title><rect x="1018.2" y="1669" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.24" y="1679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (14 samples, 0.17%)</title><rect x="977.5" y="3301" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="980.50" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="1015.2" y="2053" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.22" y="2063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="842.4" y="3685" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="845.45" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="756.8" y="3125" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="970.7" y="3157" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="973.73" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.copyMethods (5 samples, 0.06%)</title><rect x="131.7" y="4629" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="134.66" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (9 samples, 0.11%)</title><rect x="1018.4" y="1653" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.38" y="1663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (7 samples, 0.09%)</title><rect x="953.5" y="3349" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.45" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (45 samples, 0.55%)</title><rect x="749.0" y="3477" width="6.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (41 samples, 0.50%)</title><rect x="362.2" y="4853" width="5.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="365.16" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (5 samples, 0.06%)</title><rect x="1001.1" y="2981" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="949.4" y="3557" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (2 samples, 0.02%)</title><rect x="359.1" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="362.13" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken (5 samples, 0.06%)</title><rect x="124.6" y="4645" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="127.60" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="842.0" y="3733" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.02" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Listener.onSuccess (39 samples, 0.48%)</title><rect x="362.3" y="4789" width="5.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="365.30" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Collection.stream (2 samples, 0.02%)</title><rect x="200.6" y="4581" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="203.62" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::current_thread_enable_wx(WXMode) (3 samples, 0.04%)</title><rect x="469.8" y="4821" width="0.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text text-anchor="" x="472.85" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="833.5" y="4037" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="836.52" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="886.5" y="3509" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="889.51" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (4 samples, 0.05%)</title><rect x="752.2" y="2885" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.18" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="750.0" y="1845" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="753.02" y="1855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (6 samples, 0.07%)</title><rect x="959.9" y="3573" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.93" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (8 samples, 0.10%)</title><rect x="756.8" y="3413" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PooledByteBufAllocator.newDirectBuffer (2 samples, 0.02%)</title><rect x="473.7" y="4853" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="476.74" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="885.8" y="3797" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="888.79" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="995.6" y="2533" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred/fn--11768 (60 samples, 0.73%)</title><rect x="483.7" y="3957" width="8.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="486.67" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="756.8" y="3093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="923.4" y="3477" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="926.36" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="842.0" y="3685" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="845.02" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (4 samples, 0.05%)</title><rect x="981.2" y="3061" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="984.24" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1012.2" y="2085" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1015.19" y="2095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="966.1" y="3173" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="969.12" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.access$400 (3 samples, 0.04%)</title><rect x="320.7" y="4421" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="323.69" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="955.8" y="3109" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="958.76" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="757.7" y="3205" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.65" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>compojure.core/route-matches (2 samples, 0.02%)</title><rect x="74.2" y="4741" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="77.21" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (7 samples, 0.09%)</title><rect x="809.0" y="4213" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="812.05" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="966.3" y="3045" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="969.27" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="869.2" y="3957" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.23" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="841.4" y="3541" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="844.44" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (67 samples, 0.82%)</title><rect x="749.0" y="3669" width="9.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOfObject (2 samples, 0.02%)</title><rect x="296.1" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="299.07" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.ReflectionFactory.copyMethod (3 samples, 0.04%)</title><rect x="803.9" y="3941" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="806.87" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="758.7" y="3269" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand (2 samples, 0.02%)</title><rect x="821.1" y="4229" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="824.14" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.nio.channels.spi.AbstractInterruptibleChannel.begin (2 samples, 0.02%)</title><rect x="515.2" y="4805" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="518.20" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.net.URI$Parser.parse (7 samples, 0.09%)</title><rect x="714.7" y="4533" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="717.75" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (9 samples, 0.11%)</title><rect x="776.7" y="4053" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="779.65" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.internal.ObjectPool$RecyclerObjectPool.get (2 samples, 0.02%)</title><rect x="513.9" y="4741" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="516.90" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dissoc (3 samples, 0.04%)</title><rect x="374.5" y="4805" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="377.54" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="832.2" y="3813" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="835.23" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="887.2" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="890.23" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (16 samples, 0.20%)</title><rect x="899.8" y="3765" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="902.75" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="1016.4" y="1861" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.37" y="1871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.default.Stream.put (33 samples, 0.40%)</title><rect x="719.5" y="4373" width="4.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="722.50" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="1006.3" y="2485" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1009.29" y="2495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (5 samples, 0.06%)</title><rect x="177.2" y="4325" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="180.15" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="879.5" y="3637" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="882.45" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (71 samples, 0.87%)</title><rect x="1010.0" y="2725" width="10.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.03" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (16 samples, 0.20%)</title><rect x="911.7" y="3685" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="914.70" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (5 samples, 0.06%)</title><rect x="926.1" y="3605" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="929.10" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="848.1" y="3925" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.06" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (16 samples, 0.20%)</title><rect x="993.6" y="3189" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.62" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyResponse.valAt (2 samples, 0.02%)</title><rect x="482.1" y="4389" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="485.09" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.ReflectionFactory.copyMethod (2 samples, 0.02%)</title><rect x="942.2" y="3381" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="945.22" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="813.7" y="3653" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.66" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/swap! (11 samples, 0.13%)</title><rect x="313.1" y="4549" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="316.06" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="995.2" y="2725" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.20" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.swap (4 samples, 0.05%)</title><rect x="278.5" y="4517" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="281.51" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (9 samples, 0.11%)</title><rect x="785.7" y="4197" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.72" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="1000.5" y="2837" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1003.53" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.cons (2 samples, 0.02%)</title><rect x="78.0" y="4645" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="80.96" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (6 samples, 0.07%)</title><rect x="177.2" y="4357" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="180.15" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (3 samples, 0.04%)</title><rect x="284.3" y="4437" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="287.27" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="902.1" y="3685" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="905.05" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="861.7" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="864.74" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="871.4" y="3701" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="874.39" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="1010.2" y="2533" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1013.18" y="2543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (11 samples, 0.13%)</title><rect x="296.4" y="4501" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="299.36" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.without (3 samples, 0.04%)</title><rect x="376.3" y="4741" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="379.27" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (24 samples, 0.29%)</title><rect x="816.0" y="4117" width="3.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="818.96" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (5 samples, 0.06%)</title><rect x="752.8" y="2789" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.76" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="360.1" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="363.14" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (27 samples, 0.33%)</title><rect x="770.2" y="4101" width="3.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.18" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (9 samples, 0.11%)</title><rect x="932.6" y="3509" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="935.58" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="814.2" y="3701" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="817.23" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Curly.match (23 samples, 0.28%)</title><rect x="308.6" y="4517" width="3.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="311.60" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="997.8" y="2645" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (6 samples, 0.07%)</title><rect x="846.0" y="4085" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.05" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (3 samples, 0.04%)</title><rect x="849.8" y="4341" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="852.79" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (5 samples, 0.06%)</title><rect x="784.9" y="4165" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="787.86" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="929.0" y="3397" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="931.98" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (21 samples, 0.26%)</title><rect x="172.7" y="4213" width="3.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="758.7" y="3349" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="920.8" y="3269" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.77" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (80 samples, 0.98%)</title><rect x="834.1" y="4181" width="11.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="837.10" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="885.8" y="3813" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="888.79" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (4 samples, 0.05%)</title><rect x="756.8" y="3253" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="1011.5" y="2277" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="887.2" y="3477" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="890.23" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="929.6" y="3461" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="932.55" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="929.0" y="3365" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="931.98" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-message/f--19461 (251 samples, 3.06%)</title><rect x="324.6" y="4613" width="36.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="327.58" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ins..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="970.7" y="2981" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="973.73" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (5 samples, 0.06%)</title><rect x="185.5" y="4517" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="188.50" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (6 samples, 0.07%)</title><rect x="901.2" y="3605" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="904.19" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="839.3" y="3637" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="842.28" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="904.1" y="3541" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="907.07" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="951.6" y="3621" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="954.58" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="817.8" y="3829" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.83" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="873.0" y="3877" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.97" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (3 samples, 0.04%)</title><rect x="210.0" y="4437" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="212.98" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="1016.7" y="1541" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.66" y="1551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (38 samples, 0.46%)</title><rect x="969.9" y="3701" width="5.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="494.6" y="4549" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="497.61" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="749.3" y="981" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="816.4" y="3893" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="819.39" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="331.3" y="4485" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="334.35" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="763.6" y="3493" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.55" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="905.4" y="3541" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="908.37" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="864.3" y="3765" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="867.33" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (17 samples, 0.21%)</title><rect x="924.5" y="3877" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="927.51" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="937.2" y="3205" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="940.18" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (9 samples, 0.11%)</title><rect x="999.8" y="3093" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1002.81" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="979.8" y="3013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.Callback.put (28 samples, 0.34%)</title><rect x="719.6" y="4197" width="4.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="722.64" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="1015.2" y="2133" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.22" y="2143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (14 samples, 0.17%)</title><rect x="829.8" y="3909" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="832.78" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (7 samples, 0.09%)</title><rect x="348.2" y="4453" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="351.19" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1009.6" y="2389" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.60" y="2399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="809.2" y="3925" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="812.19" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_pthread_mutex_firstfit_lock_slow (4 samples, 0.05%)</title><rect x="381.0" y="4693" width="0.6" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text text-anchor="" x="384.02" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (2 samples, 0.02%)</title><rect x="319.8" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="322.83" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="978.1" y="2869" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="843.3" y="3637" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="846.31" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>CompileBroker::compiler_thread_loop() (521 samples, 6.36%)</title><rect x="1106.6" y="4949" width="75.0" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text text-anchor="" x="1109.64" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >CompileB..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (12 samples, 0.15%)</title><rect x="1004.1" y="2821" width="1.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.13" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="956.5" y="3221" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="959.48" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="837.3" y="3829" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="840.27" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="1010.8" y="2357" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue$TransferStack.transfer (15 samples, 0.18%)</title><rect x="696.9" y="4789" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="699.89" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (6 samples, 0.07%)</title><rect x="835.3" y="3845" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="838.25" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="817.8" y="3861" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="820.83" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="957.3" y="3221" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="960.34" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (36 samples, 0.44%)</title><rect x="828.3" y="4021" width="5.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="831.34" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$CharProperty.match (3 samples, 0.04%)</title><rect x="309.2" y="4501" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="312.18" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="871.1" y="3957" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="874.10" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="929.6" y="3349" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="932.55" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (31 samples, 0.38%)</title><rect x="749.2" y="3061" width="4.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (30 samples, 0.37%)</title><rect x="821.6" y="4373" width="4.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="824.57" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="919.6" y="3317" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (7 samples, 0.09%)</title><rect x="755.5" y="3461" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.49" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="846.3" y="3813" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.34" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (60 samples, 0.73%)</title><rect x="1011.5" y="2613" width="8.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (132 samples, 1.61%)</title><rect x="802.4" y="4309" width="19.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="805.43" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="964.3" y="3189" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="967.25" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="1007.6" y="2373" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.59" y="2383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.core/parse (1,108 samples, 13.52%)</title><rect x="202.1" y="4693" width="159.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="205.06" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >instaparse.core/parse</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (6 samples, 0.07%)</title><rect x="755.5" y="3285" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.49" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="979.8" y="3141" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (11 samples, 0.13%)</title><rect x="172.7" y="4101" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$TransientHashMap.&lt;init&gt; (2 samples, 0.02%)</title><rect x="339.6" y="4389" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="342.55" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (581 samples, 7.09%)</title><rect x="940.8" y="4053" width="83.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="943.78" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (3 samples, 0.04%)</title><rect x="827.6" y="4197" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="830.62" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="981.8" y="2933" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="984.82" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (6 samples, 0.07%)</title><rect x="878.6" y="3669" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="881.59" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="1012.0" y="2229" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.05" y="2239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="872.0" y="3877" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="874.96" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="765.0" y="3669" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="954.6" y="3077" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="957.60" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="754.3" y="2773" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (24 samples, 0.29%)</title><rect x="840.9" y="4037" width="3.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="843.87" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="775.5" y="3733" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.50" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.swap (7 samples, 0.09%)</title><rect x="328.0" y="4549" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="331.04" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (9 samples, 0.11%)</title><rect x="1011.5" y="2533" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (4 samples, 0.05%)</title><rect x="749.3" y="1285" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="856.4" y="4053" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="859.42" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="983.7" y="3141" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.69" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/slurp (42 samples, 0.51%)</title><rect x="79.1" y="4725" width="6.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="82.11" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (12 samples, 0.15%)</title><rect x="942.1" y="3557" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="945.08" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="908.0" y="3813" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="910.96" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/assoc--5433 (4 samples, 0.05%)</title><rect x="278.5" y="4501" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="281.51" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand (3 samples, 0.04%)</title><rect x="788.9" y="4597" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="791.89" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="749.3" y="901" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (5 samples, 0.06%)</title><rect x="822.0" y="4165" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RestFn.invoke (8 samples, 0.10%)</title><rect x="743.1" y="4549" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="746.11" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (13 samples, 0.16%)</title><rect x="842.3" y="3925" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="845.31" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="988.9" y="3349" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="959.9" y="3253" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.93" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ciTypeFlow::do_flow() (2 samples, 0.02%)</title><rect x="1106.6" y="4837" width="0.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text text-anchor="" x="1109.64" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="817.3" y="3909" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.25" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.GeneratedMethodAccessor49 (2 samples, 0.02%)</title><rect x="853.7" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="856.68" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="1006.1" y="2693" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PSPromotionManager::drain_stacks_depth(bool) (9 samples, 0.11%)</title><rect x="1067.2" y="4949" width="1.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text text-anchor="" x="1070.19" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="990.3" y="3061" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="993.31" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.text.DecimalFormatSymbols.initialize (2 samples, 0.02%)</title><rect x="790.0" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="793.04" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (4 samples, 0.05%)</title><rect x="356.1" y="4517" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="359.11" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Listener.onSuccess (38 samples, 0.46%)</title><rect x="362.3" y="4709" width="5.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="365.30" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (8 samples, 0.10%)</title><rect x="749.2" y="2069" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (5 samples, 0.06%)</title><rect x="819.6" y="4133" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="822.56" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.gt (2 samples, 0.02%)</title><rect x="810.1" y="4197" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="813.06" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (132 samples, 1.61%)</title><rect x="802.4" y="4325" width="19.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="805.43" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="750.0" y="1829" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="753.02" y="1839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/first--5401 (4 samples, 0.05%)</title><rect x="737.1" y="4549" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="740.06" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (10 samples, 0.12%)</title><rect x="823.2" y="4101" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="826.16" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="1016.4" y="2037" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.37" y="2047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.equiv (3 samples, 0.04%)</title><rect x="66.0" y="4933" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="69.01" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="982.7" y="3205" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="985.68" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="813.1" y="4101" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.08" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="755.9" y="3109" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.92" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpHeadersEncoder.encoderHeader (4 samples, 0.05%)</title><rect x="676.7" y="4517" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="679.74" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="856.6" y="3845" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="859.56" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="937.0" y="3397" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="940.04" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="933.0" y="3381" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="936.01" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="1015.5" y="2021" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.51" y="2031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="920.1" y="3493" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="923.05" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.DelegatingMethodAccessorImpl (2 samples, 0.02%)</title><rect x="895.4" y="3893" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="898.43" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1007.6" y="2485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1010.59" y="2495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="1003.7" y="2933" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1006.70" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="811.4" y="3797" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="814.35" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/subscribe--11925/fn--11930 (38 samples, 0.46%)</title><rect x="362.3" y="4693" width="5.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="365.30" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (32 samples, 0.39%)</title><rect x="980.7" y="3509" width="4.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="983.66" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="871.5" y="3541" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.53" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="763.8" y="3541" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.84" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="1009.3" y="2581" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1012.31" y="2591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="939.8" y="3333" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.copyMethods (2 samples, 0.02%)</title><rect x="821.7" y="4229" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="824.72" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (45 samples, 0.55%)</title><rect x="749.0" y="3445" width="6.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (4 samples, 0.05%)</title><rect x="819.7" y="4069" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="822.70" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (4 samples, 0.05%)</title><rect x="767.7" y="3829" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.73" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1010.3" y="2213" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.32" y="2223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (926 samples, 11.30%)</title><rect x="893.6" y="4277" width="133.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="896.56" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.core/red..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.nth (3 samples, 0.04%)</title><rect x="128.3" y="4725" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="131.35" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="817.4" y="3669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.40" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="908.0" y="3717" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="910.96" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="933.9" y="3541" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="936.87" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="973.8" y="3205" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="976.75" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>read (83 samples, 1.01%)</title><rect x="515.9" y="4741" width="12.0" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text text-anchor="" x="518.92" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="861.7" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="864.74" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="122.4" y="4565" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="125.44" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (12 samples, 0.15%)</title><rect x="756.8" y="3477" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="964.7" y="3205" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.server/eval16578/send-response--16583/f--15883--auto----16589 (132 samples, 1.61%)</title><rect x="677.7" y="4869" width="19.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="680.75" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (15 samples, 0.18%)</title><rect x="891.4" y="4021" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="894.40" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="946.3" y="3461" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (11 samples, 0.13%)</title><rect x="758.7" y="3669" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="953.2" y="3429" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.16" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="901.3" y="3397" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="904.33" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead (216 samples, 2.64%)</title><rect x="480.9" y="4709" width="31.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="483.93" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (35 samples, 0.43%)</title><rect x="917.2" y="3749" width="5.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="920.17" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (5 samples, 0.06%)</title><rect x="920.8" y="3429" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.77" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="924.2" y="3589" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="927.23" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="837.3" y="3845" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="840.27" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="950.1" y="3701" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="953.14" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (16 samples, 0.20%)</title><rect x="770.5" y="3941" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/cat-full-parse (13 samples, 0.16%)</title><rect x="206.8" y="4581" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="209.81" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="782.0" y="4069" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="784.98" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ParkCommon(ParkEvent*, long) (2 samples, 0.02%)</title><rect x="10.0" y="4933" width="0.3" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="1003.7" y="3029" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1006.70" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (7 samples, 0.09%)</title><rect x="755.5" y="3429" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.49" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="838.9" y="3541" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="841.85" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.get (3 samples, 0.04%)</title><rect x="211.1" y="4533" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="214.13" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="1002.5" y="2597" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1005.55" y="2607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (18 samples, 0.22%)</title><rect x="766.9" y="3941" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="769.86" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="880.5" y="3701" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.success (33 samples, 0.40%)</title><rect x="719.5" y="4325" width="4.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="722.50" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="965.4" y="3141" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="968.40" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="950.1" y="3653" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="953.14" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (112 samples, 1.37%)</title><rect x="748.9" y="3941" width="16.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.87" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="901.3" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="904.33" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.concurrent.DefaultPromise.setSuccess0 (3 samples, 0.04%)</title><rect x="680.5" y="4469" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.48" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.equal (2 samples, 0.02%)</title><rect x="858.6" y="3765" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="861.57" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="759.2" y="3397" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.23" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (14 samples, 0.17%)</title><rect x="172.7" y="4149" width="2.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="916.6" y="3717" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="919.60" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="983.7" y="3061" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="986.69" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.copyMethods (71 samples, 0.87%)</title><rect x="143.0" y="4613" width="10.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="146.03" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="999.4" y="2965" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.38" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="887.2" y="3557" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="890.23" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2 (2 samples, 0.02%)</title><rect x="108.5" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="111.48" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="901.3" y="3317" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="904.33" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="954.5" y="3429" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="957.46" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.more (2 samples, 0.02%)</title><rect x="497.3" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="500.35" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (102 samples, 1.24%)</title><rect x="875.0" y="4133" width="14.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="877.99" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (18 samples, 0.22%)</title><rect x="928.7" y="3733" width="2.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="931.69" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (7 samples, 0.09%)</title><rect x="760.2" y="3477" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (5 samples, 0.06%)</title><rect x="181.8" y="4501" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="184.76" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="903.1" y="3477" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="906.06" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (3 samples, 0.04%)</title><rect x="784.1" y="3973" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="787.14" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Curly.match0 (2 samples, 0.02%)</title><rect x="310.5" y="4309" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="313.47" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method.copy (3 samples, 0.04%)</title><rect x="135.8" y="4565" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="138.83" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (9 samples, 0.11%)</title><rect x="890.0" y="3877" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="773.1" y="3925" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="776.06" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractByteBuf.forEachByteAsc0 (2 samples, 0.02%)</title><rect x="474.9" y="4613" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.89" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="884.9" y="3589" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="887.92" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (8 samples, 0.10%)</title><rect x="282.7" y="4485" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="285.68" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (3 samples, 0.04%)</title><rect x="1024.0" y="3925" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1027.00" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (12 samples, 0.15%)</title><rect x="1002.0" y="2853" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.97" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="989.4" y="3093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.45" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.gt (2 samples, 0.02%)</title><rect x="970.7" y="2949" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="973.73" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="940.1" y="3557" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="943.06" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (5 samples, 0.06%)</title><rect x="180.2" y="4453" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="183.18" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.equiv (2 samples, 0.02%)</title><rect x="278.8" y="4373" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="281.80" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (4 samples, 0.05%)</title><rect x="1026.2" y="4229" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1029.16" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="872.7" y="3717" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="997.4" y="2805" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.36" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="872.7" y="3909" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="970.7" y="3077" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="973.73" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="1016.5" y="1717" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.51" y="1727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="1008.9" y="2549" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeMatchingMethod (106 samples, 1.29%)</title><rect x="171.8" y="4645" width="15.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="174.83" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="994.2" y="2773" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.20" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.cons (7 samples, 0.09%)</title><rect x="313.5" y="4469" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="316.49" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (2 samples, 0.02%)</title><rect x="779.4" y="3861" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.39" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.java.io/fn--11548/fn--11549 (5 samples, 0.06%)</title><rect x="744.8" y="4549" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="747.84" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.default.Stream/fn--12532 (2 samples, 0.02%)</title><rect x="724.0" y="4197" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="726.96" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (422 samples, 5.15%)</title><rect x="961.4" y="3829" width="60.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="964.37" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >exampl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="863.9" y="3909" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="866.90" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="892.8" y="3765" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="895.84" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="997.8" y="2581" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.nio.SelectedSelectionKeySetSelector.wakeup (16 samples, 0.20%)</title><rect x="721.2" y="4117" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="724.22" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (36 samples, 0.44%)</title><rect x="1014.6" y="2373" width="5.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1017.64" y="2383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter$FormatSpecifier.localizedMagnitude (2 samples, 0.02%)</title><rect x="791.2" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="794.20" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (7 samples, 0.09%)</title><rect x="925.8" y="3765" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="928.81" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="968.1" y="3461" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.14" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (12 samples, 0.15%)</title><rect x="852.4" y="3781" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="855.38" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (3 samples, 0.04%)</title><rect x="855.8" y="3749" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="858.84" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (19 samples, 0.23%)</title><rect x="989.9" y="3285" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.88" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="776.2" y="3925" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="779.22" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="909.4" y="3621" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="912.40" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="976.1" y="3029" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="979.06" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="818.6" y="3957" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="821.55" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="995.6" y="2677" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="815.4" y="3717" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="818.38" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1004.9" y="2437" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.85" y="2447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::WXWriteFromExecSetter::WXWriteFromExecSetter() (2 samples, 0.02%)</title><rect x="491.6" y="3749" width="0.3" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text text-anchor="" x="494.59" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="983.7" y="2949" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.69" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (2 samples, 0.02%)</title><rect x="278.8" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="281.80" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (7 samples, 0.09%)</title><rect x="871.0" y="3973" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="873.96" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="976.9" y="3253" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="979.92" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="979.8" y="3077" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (128 samples, 1.56%)</title><rect x="86.6" y="4533" width="18.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="89.59" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="821.7" y="4261" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="824.72" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (5 samples, 0.06%)</title><rect x="1006.1" y="2725" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seqFrom (2 samples, 0.02%)</title><rect x="495.5" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="498.48" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="939.5" y="3653" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="942.49" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RestFn.invoke (13 samples, 0.16%)</title><rect x="507.0" y="4517" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="509.99" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="842.4" y="3829" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.45" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (3 samples, 0.04%)</title><rect x="958.5" y="3509" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="961.49" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (89 samples, 1.09%)</title><rect x="894.7" y="4149" width="12.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="897.71" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (10 samples, 0.12%)</title><rect x="963.2" y="3445" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="966.24" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="890.7" y="3653" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="893.68" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (7 samples, 0.09%)</title><rect x="755.5" y="3365" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.49" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (3 samples, 0.04%)</title><rect x="178.0" y="4389" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="181.02" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="756.8" y="3141" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (8 samples, 0.10%)</title><rect x="920.5" y="3541" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.48" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (11 samples, 0.13%)</title><rect x="939.2" y="3813" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.20" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.concurrent.SingleThreadEventExecutor$4.run (1,587 samples, 19.36%)</title><rect x="471.6" y="4965" width="228.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="474.58" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io.netty.util.concurrent.Singl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (3 samples, 0.04%)</title><rect x="751.3" y="2613" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="754.32" y="2623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="1012.9" y="2165" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.91" y="2175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="872.3" y="3717" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.25" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (6 samples, 0.07%)</title><rect x="1012.8" y="2229" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.77" y="2239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (4 samples, 0.05%)</title><rect x="752.8" y="2725" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.76" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="822.3" y="3909" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.29" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (25 samples, 0.31%)</title><rect x="834.4" y="4117" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="837.39" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (15 samples, 0.18%)</title><rect x="958.9" y="3733" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="961.92" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PoolThreadCache.add (2 samples, 0.02%)</title><rect x="510.2" y="4405" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="513.16" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="838.7" y="3573" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="841.71" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand-int (2 samples, 0.02%)</title><rect x="917.3" y="3717" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="920.32" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (6 samples, 0.07%)</title><rect x="774.6" y="3989" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="869.8" y="4053" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.80" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (3 samples, 0.04%)</title><rect x="172.7" y="3509" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="972.5" y="3189" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="975.46" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (2 samples, 0.02%)</title><rect x="780.7" y="3829" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="783.69" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (16 samples, 0.20%)</title><rect x="993.6" y="3237" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="996.62" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="924.2" y="3557" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="927.23" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (15 samples, 0.18%)</title><rect x="891.4" y="4037" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.40" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (40 samples, 0.49%)</title><rect x="961.8" y="3765" width="5.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="964.80" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="908.8" y="3733" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (17 samples, 0.21%)</title><rect x="1017.4" y="1877" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="878.6" y="3589" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="881.59" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="939.8" y="3477" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="990.3" y="2981" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="993.31" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="890.4" y="3733" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="893.39" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hasheq (2 samples, 0.02%)</title><rect x="210.1" y="4325" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="213.12" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="1007.9" y="2501" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.87" y="2511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="815.2" y="3877" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="818.24" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (7 samples, 0.09%)</title><rect x="1007.9" y="2597" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.87" y="2607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred/f--11646--auto----11803 (2 samples, 0.02%)</title><rect x="383.3" y="4949" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="386.32" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (18 samples, 0.22%)</title><rect x="749.2" y="2661" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="749.3" y="309" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/last--5445 (2 samples, 0.02%)</title><rect x="478.6" y="4357" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="481.63" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (7 samples, 0.09%)</title><rect x="959.8" y="3589" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.79" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="818.8" y="3781" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="821.84" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="984.0" y="2901" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="770.5" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (34 samples, 0.41%)</title><rect x="969.9" y="3589" width="4.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="840.0" y="3445" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="843.00" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="76.5" y="4677" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="79.52" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Compile::Output() (10 samples, 0.12%)</title><rect x="1107.1" y="4869" width="1.4" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text text-anchor="" x="1110.07" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.dissoc (4 samples, 0.05%)</title><rect x="376.1" y="4837" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="379.12" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.&lt;init&gt; (2 samples, 0.02%)</title><rect x="911.8" y="3573" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="914.84" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (111 samples, 1.35%)</title><rect x="911.0" y="4101" width="16.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="913.98" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="979.7" y="3557" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="982.66" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="993.8" y="2997" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="996.77" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.ReflectAccess.copyMethod (29 samples, 0.35%)</title><rect x="148.9" y="4581" width="4.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="151.93" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="995.6" y="2501" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Matcher.find (21 samples, 0.26%)</title><rect x="728.9" y="4357" width="3.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="731.86" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_jit_write_protect_np (3 samples, 0.04%)</title><rect x="469.8" y="4789" width="0.5" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text text-anchor="" x="472.85" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="931.3" y="3637" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="934.28" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="984.6" y="2997" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="987.55" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.nio.charset.CharsetDecoder.decode (9 samples, 0.11%)</title><rect x="81.3" y="4533" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="84.27" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (165 samples, 2.01%)</title><rect x="802.1" y="4533" width="23.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="805.14" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >e..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="988.9" y="3317" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="779.7" y="3861" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.68" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (17 samples, 0.21%)</title><rect x="996.8" y="3173" width="2.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.79" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::current_thread_enable_wx(WXMode) (2 samples, 0.02%)</title><rect x="470.4" y="4821" width="0.3" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text text-anchor="" x="473.42" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.locks.LockSupport.unpark (6 samples, 0.07%)</title><rect x="382.5" y="4661" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="385.46" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.ChannelOutboundHandlerAdapter.read (3 samples, 0.04%)</title><rect x="513.0" y="4709" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="516.04" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (2 samples, 0.02%)</title><rect x="747.7" y="4485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="750.72" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="833.7" y="3765" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="836.67" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (2 samples, 0.02%)</title><rect x="898.0" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="901.02" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (13 samples, 0.16%)</title><rect x="935.7" y="3589" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="938.74" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1006.4" y="2293" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.43" y="2303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.gt (2 samples, 0.02%)</title><rect x="801.0" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="803.99" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (28 samples, 0.34%)</title><rect x="922.9" y="4053" width="4.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="765.0" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="953.2" y="3445" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.16" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="995.6" y="2341" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (17 samples, 0.21%)</title><rect x="941.8" y="3701" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="944.79" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.format (3 samples, 0.04%)</title><rect x="929.1" y="3189" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="932.12" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (3 samples, 0.04%)</title><rect x="941.1" y="3973" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="944.07" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="967.6" y="3413" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$7.isSatisfiedBy (15 samples, 0.18%)</title><rect x="729.7" y="4229" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="732.72" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (21 samples, 0.26%)</title><rect x="996.8" y="3253" width="3.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.79" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.gt (2 samples, 0.02%)</title><rect x="815.4" y="3621" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="818.38" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannel.writeAndFlush (31 samples, 0.38%)</title><rect x="673.0" y="4805" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="903.6" y="3573" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="906.64" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (6 samples, 0.07%)</title><rect x="756.8" y="3317" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="978.6" y="3061" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.65" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (6 samples, 0.07%)</title><rect x="947.7" y="3397" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="886.5" y="3333" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="889.51" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="959.1" y="3605" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.07" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="946.8" y="3525" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.83" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (3 samples, 0.04%)</title><rect x="279.1" y="4485" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="282.08" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_utmpxname.cold.2 (2 samples, 0.02%)</title><rect x="469.4" y="4853" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="472.42" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (682 samples, 8.32%)</title><rect x="927.0" y="4133" width="98.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="929.96" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.cli..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (11 samples, 0.13%)</title><rect x="1018.2" y="1733" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.24" y="1743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.ReflectionFactory.copyMethod (22 samples, 0.27%)</title><rect x="188.7" y="4533" width="3.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="191.67" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.net.URL.&lt;init&gt; (6 samples, 0.07%)</title><rect x="715.9" y="4549" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="718.90" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="984.6" y="2965" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="987.55" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (13 samples, 0.16%)</title><rect x="878.4" y="3749" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="881.44" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (32 samples, 0.39%)</title><rect x="868.9" y="4245" width="4.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="871.94" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (20 samples, 0.24%)</title><rect x="1016.9" y="2053" width="2.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="2063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="759.2" y="3365" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.23" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="995.9" y="3109" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.92" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="855.3" y="3765" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="858.26" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="973.9" y="3045" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="976.90" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="1005.1" y="2613" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1008.14" y="2623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="987.7" y="3061" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.GeneratedMethodAccessor58 (12 samples, 0.15%)</title><rect x="185.4" y="4597" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="188.36" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="1019.2" y="1189" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.25" y="1199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="986.9" y="2949" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="989.85" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="1010.8" y="2437" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="753.9" y="3093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="756.91" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="901.3" y="3365" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="904.33" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="923.4" y="3397" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="926.36" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="913.0" y="3397" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="916.00" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="995.2" y="2629" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.20" y="2639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="1020.7" y="3109" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1023.69" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="915.2" y="3349" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="918.16" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (82 samples, 1.00%)</title><rect x="482.4" y="4469" width="11.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="485.37" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (3 samples, 0.04%)</title><rect x="895.0" y="3925" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="898.00" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="765.0" y="3477" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="774.6" y="3781" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="976.9" y="3157" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="979.92" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (7 samples, 0.09%)</title><rect x="871.0" y="4005" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="873.96" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="817.3" y="3989" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.25" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (6 samples, 0.07%)</title><rect x="323.1" y="4469" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="326.14" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="954.6" y="3205" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="957.60" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="974.8" y="3669" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode.tryMatch (6 samples, 0.07%)</title><rect x="382.5" y="4677" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="385.46" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (4 samples, 0.05%)</title><rect x="351.4" y="4421" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="354.36" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (6 samples, 0.07%)</title><rect x="846.0" y="4165" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.05" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/persistent! (2 samples, 0.02%)</title><rect x="114.1" y="4581" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="117.09" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (16 samples, 0.20%)</title><rect x="911.7" y="3829" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="914.70" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="818.8" y="3669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="821.84" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Object.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1023.3" y="3861" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1026.28" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (35 samples, 0.43%)</title><rect x="917.2" y="3781" width="5.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="920.17" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.swap (2 samples, 0.02%)</title><rect x="209.5" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="212.55" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (6 samples, 0.07%)</title><rect x="749.2" y="1845" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="1855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (29 samples, 0.35%)</title><rect x="975.5" y="3445" width="4.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.48" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="765.0" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="861.7" y="3653" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="864.74" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (6 samples, 0.07%)</title><rect x="939.8" y="3685" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (3 samples, 0.04%)</title><rect x="172.7" y="3605" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (7 samples, 0.09%)</title><rect x="953.5" y="3397" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.45" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.append (2 samples, 0.02%)</title><rect x="790.9" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="793.91" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="975.0" y="3285" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.05" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__psynch_cvsignal (10 samples, 0.12%)</title><rect x="369.6" y="4757" width="1.5" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text text-anchor="" x="372.64" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="976.3" y="3173" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.34" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.doEquiv (2 samples, 0.02%)</title><rect x="747.3" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="750.28" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (2 samples, 0.02%)</title><rect x="833.2" y="3845" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="836.24" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="842.0" y="3717" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.02" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpObjectDecoder.readHeaders (9 samples, 0.11%)</title><rect x="476.3" y="4661" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="479.33" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="936.0" y="3509" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="939.03" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.SingleThreadEventLoop.hasTasks (2 samples, 0.02%)</title><rect x="472.9" y="4933" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="475.87" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (7 samples, 0.09%)</title><rect x="998.2" y="2885" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1001.23" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/node-get (2 samples, 0.02%)</title><rect x="344.2" y="4565" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="347.16" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="854.1" y="3749" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="857.11" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="987.7" y="2725" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="872.7" y="3941" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="750.3" y="2101" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="753.31" y="2111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (7 samples, 0.09%)</title><rect x="994.9" y="2997" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol (2 samples, 0.02%)</title><rect x="119.6" y="4565" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="122.56" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="811.4" y="3877" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="814.35" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (4 samples, 0.05%)</title><rect x="779.1" y="4005" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="755.1" y="3285" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.06" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="977.2" y="3173" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="980.21" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="1013.9" y="2053" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.92" y="2063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (11 samples, 0.13%)</title><rect x="944.7" y="3477" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="947.67" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (15 samples, 0.18%)</title><rect x="983.0" y="3269" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="985.97" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="976.9" y="3301" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.92" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (4 samples, 0.05%)</title><rect x="749.3" y="1717" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (21 samples, 0.26%)</title><rect x="858.6" y="3797" width="3.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="861.57" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PoolChunk.collapseNext (2 samples, 0.02%)</title><rect x="509.9" y="4341" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="512.87" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (11 samples, 0.13%)</title><rect x="970.3" y="3237" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="973.30" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="973.9" y="3061" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="976.90" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (30 samples, 0.37%)</title><rect x="876.1" y="3829" width="4.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="879.14" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (5 samples, 0.06%)</title><rect x="293.2" y="4341" width="0.7" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text text-anchor="" x="296.19" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (1,069 samples, 13.04%)</title><rect x="873.7" y="4325" width="153.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="876.69" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.client/rand..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (4 samples, 0.05%)</title><rect x="878.7" y="3445" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="881.73" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="832.2" y="3749" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="835.23" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (5 samples, 0.06%)</title><rect x="822.0" y="4213" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (6 samples, 0.07%)</title><rect x="892.6" y="3877" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="895.55" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="905.4" y="3573" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="908.37" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (8 samples, 0.10%)</title><rect x="762.7" y="3717" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.69" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="814.2" y="3557" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="817.23" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (6 samples, 0.07%)</title><rect x="890.4" y="3797" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="893.39" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (14 samples, 0.17%)</title><rect x="904.6" y="3669" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.65" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.concurrent.DefaultPromise.setValue0 (3 samples, 0.04%)</title><rect x="680.5" y="4453" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.48" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractReferenceCountedByteBuf.handleRelease (6 samples, 0.07%)</title><rect x="509.9" y="4501" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="512.87" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method (2 samples, 0.02%)</title><rect x="969.6" y="3685" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.58" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue.offer (26 samples, 0.32%)</title><rect x="378.4" y="4805" width="3.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="381.43" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.graph/connect (3 samples, 0.04%)</title><rect x="479.2" y="4309" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="482.21" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.KQueueSelectorImpl.doSelect (404 samples, 4.93%)</title><rect x="613.1" y="4853" width="58.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="616.10" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.ni..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="964.7" y="3221" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (18 samples, 0.22%)</title><rect x="935.0" y="3653" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="938.02" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (12 samples, 0.15%)</title><rect x="1004.1" y="2805" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.13" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.gt (2 samples, 0.02%)</title><rect x="880.9" y="3941" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="883.89" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (7 samples, 0.09%)</title><rect x="172.7" y="3893" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.KeywordLookupSite$1.get (5 samples, 0.06%)</title><rect x="349.3" y="4565" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="352.34" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="754.3" y="3109" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1004.6" y="2469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.56" y="2479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (5 samples, 0.06%)</title><rect x="783.9" y="4005" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.85" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred/fn--11768 (38 samples, 0.46%)</title><rect x="362.3" y="4725" width="5.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="365.30" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (16 samples, 0.20%)</title><rect x="986.6" y="3397" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="989.57" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.pcequiv (2 samples, 0.02%)</title><rect x="279.1" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="282.08" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (4 samples, 0.05%)</title><rect x="845.0" y="4101" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="848.04" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="975.0" y="3397" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.05" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (27 samples, 0.33%)</title><rect x="770.2" y="4117" width="3.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.18" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (2 samples, 0.02%)</title><rect x="209.1" y="4485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="212.11" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="818.8" y="3717" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="821.84" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="1013.9" y="2085" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1016.92" y="2095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (6 samples, 0.07%)</title><rect x="865.9" y="3685" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="982.4" y="3045" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="985.39" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (4 samples, 0.05%)</title><rect x="757.9" y="3429" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.94" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.internal.ReferenceCountUpdater.nonVolatileRawCnt (2 samples, 0.02%)</title><rect x="498.4" y="4533" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="501.36" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="841.4" y="3493" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="844.44" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.DefaultChannelPipeline.fireChannelReadComplete (10 samples, 0.12%)</title><rect x="512.3" y="4869" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="515.32" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="811.4" y="3749" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="814.35" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeFlush0 (85 samples, 1.04%)</title><rect x="680.2" y="4741" width="12.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.19" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.assoc (4 samples, 0.05%)</title><rect x="68.3" y="5029" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="71.31" y="5039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (8 samples, 0.10%)</title><rect x="343.0" y="4437" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="346.01" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="872.7" y="3621" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.get (5 samples, 0.06%)</title><rect x="329.9" y="4549" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="332.91" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/success! (75 samples, 0.92%)</title><rect x="482.7" y="4357" width="10.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="485.66" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="497.1" y="4533" width="0.2" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text text-anchor="" x="500.06" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1009.6" y="2421" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.60" y="2431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="749.3" y="1269" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="986.9" y="2981" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.85" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.zone.ZoneRules.getOffset (2 samples, 0.02%)</title><rect x="799.5" y="4389" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="802.55" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="758.7" y="3285" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.getMethods (2 samples, 0.02%)</title><rect x="858.9" y="3733" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="861.86" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.ReflectionFactory.langReflectAccess (2 samples, 0.02%)</title><rect x="136.3" y="4581" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="139.26" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (20 samples, 0.24%)</title><rect x="955.2" y="3493" width="2.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="958.18" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="898.7" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="901.74" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="935.2" y="3397" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="938.17" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1017.4" y="1509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.DefaultChannelPipeline$HeadContext.flush (84 samples, 1.02%)</title><rect x="680.2" y="4629" width="12.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.19" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="967.6" y="3509" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="929.6" y="3477" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="932.55" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.append (2 samples, 0.02%)</title><rect x="738.9" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="741.93" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="999.4" y="2997" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.38" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="783.9" y="3989" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.85" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="995.6" y="2565" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="988.9" y="3205" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (2 samples, 0.02%)</title><rect x="901.8" y="3509" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="904.77" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (6 samples, 0.07%)</title><rect x="779.7" y="4021" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.68" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete (3 samples, 0.04%)</title><rect x="512.3" y="4789" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="515.32" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="974.2" y="3221" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="977.18" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.locks.LockSupport.unpark (25 samples, 0.31%)</title><rect x="378.4" y="4757" width="3.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="381.43" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (2 samples, 0.02%)</title><rect x="861.3" y="3685" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="864.31" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (83 samples, 1.01%)</title><rect x="87.3" y="4485" width="12.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="90.31" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (70 samples, 0.85%)</title><rect x="1010.0" y="2709" width="10.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.03" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="847.2" y="3861" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="850.20" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="833.7" y="3909" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="836.67" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="980.2" y="3301" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="983.23" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1005.6" y="2469" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1008.57" y="2479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol (3 samples, 0.04%)</title><rect x="123.5" y="4597" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="126.45" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (17 samples, 0.21%)</title><rect x="928.8" y="3605" width="2.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="931.83" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="904.2" y="3461" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.21" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (10 samples, 0.12%)</title><rect x="813.5" y="4053" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core/send-contiguous-body (128 samples, 1.56%)</title><rect x="678.0" y="4837" width="18.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="681.03" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="904.2" y="3285" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="907.21" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1012.2" y="2053" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.19" y="2063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="991.2" y="2965" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="994.17" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.success (75 samples, 0.92%)</title><rect x="482.7" y="4245" width="10.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="485.66" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.cons (8 samples, 0.10%)</title><rect x="343.0" y="4485" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="346.01" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seqToArray (2 samples, 0.02%)</title><rect x="789.8" y="4533" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="792.76" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (2 samples, 0.02%)</title><rect x="208.8" y="4485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.83" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (8 samples, 0.10%)</title><rect x="762.7" y="3733" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.69" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1018.7" y="1317" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="755.9" y="3173" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.92" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="969.9" y="3477" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="760.4" y="3077" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.39" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="839.3" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="842.28" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (15 samples, 0.18%)</title><rect x="810.9" y="4085" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="813.92" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="903.8" y="3461" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="906.78" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.GeneratedMethodAccessor49 (2 samples, 0.02%)</title><rect x="875.9" y="3957" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="878.85" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.find (4 samples, 0.05%)</title><rect x="747.0" y="4469" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="750.00" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.grow (2 samples, 0.02%)</title><rect x="853.4" y="3509" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="856.39" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (6 samples, 0.07%)</title><rect x="931.3" y="3605" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="934.28" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (35 samples, 0.43%)</title><rect x="917.2" y="3797" width="5.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="920.17" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="767.3" y="3637" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.30" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (16 samples, 0.20%)</title><rect x="896.0" y="3813" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="899.01" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (17 samples, 0.21%)</title><rect x="838.4" y="4005" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="841.42" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="818.8" y="3653" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="821.84" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken (5 samples, 0.06%)</title><rect x="94.4" y="4421" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="97.37" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (22 samples, 0.27%)</title><rect x="993.6" y="3333" width="3.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.62" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="982.7" y="3109" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="985.68" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (151 samples, 1.84%)</title><rect x="827.6" y="4453" width="21.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="830.62" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >e..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="891.4" y="3829" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.40" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (24 samples, 0.29%)</title><rect x="903.5" y="3749" width="3.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="906.49" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/make-tramp (2 samples, 0.02%)</title><rect x="202.9" y="4645" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="205.92" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1006.9" y="2677" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.87" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (35 samples, 0.43%)</title><rect x="917.2" y="3765" width="5.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="920.17" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JVM_CurrentTimeMillis (4 samples, 0.05%)</title><rect x="1033.8" y="4629" width="0.6" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text text-anchor="" x="1036.79" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.createNode (2 samples, 0.02%)</title><rect x="317.4" y="4325" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="320.38" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (5 samples, 0.06%)</title><rect x="822.0" y="4133" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="774.6" y="3861" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (16 samples, 0.20%)</title><rect x="993.6" y="3125" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.62" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (11 samples, 0.13%)</title><rect x="944.7" y="3525" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="947.67" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.text.DecimalFormatSymbols.getInstance (5 samples, 0.06%)</title><rect x="738.2" y="4533" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="741.21" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText (4 samples, 0.05%)</title><rect x="101.0" y="4501" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="103.99" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="879.5" y="3573" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="882.45" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="861.7" y="3621" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="864.74" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="995.6" y="2629" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="872.7" y="3637" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="956.5" y="3173" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="959.48" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (69 samples, 0.84%)</title><rect x="951.1" y="3893" width="10.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="954.15" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="753.0" y="2661" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="756.04" y="2671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="1016.9" y="1861" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="1871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/assoc--5433 (5 samples, 0.06%)</title><rect x="74.5" y="4677" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="77.50" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.add (2 samples, 0.02%)</title><rect x="835.7" y="3557" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="838.68" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="913.0" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="916.00" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="978.4" y="2853" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.36" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (10 samples, 0.12%)</title><rect x="813.5" y="3877" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (5 samples, 0.06%)</title><rect x="1009.3" y="2773" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.31" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="1015.5" y="2149" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.51" y="2159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (15 samples, 0.18%)</title><rect x="993.8" y="3093" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.77" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (33 samples, 0.40%)</title><rect x="783.1" y="4405" width="4.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.13" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (5 samples, 0.06%)</title><rect x="849.6" y="4357" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="852.65" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (5 samples, 0.06%)</title><rect x="1025.3" y="4117" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1028.30" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="962.1" y="3445" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (16 samples, 0.20%)</title><rect x="938.5" y="3893" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="865.6" y="3477" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="957.3" y="3061" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="960.34" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.AFn.applyToHelper (4 samples, 0.05%)</title><rect x="368.2" y="4869" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="371.20" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="1015.5" y="2085" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.51" y="2095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>compojure.core/form-method (4 samples, 0.05%)</title><rect x="73.9" y="4789" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="76.92" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (42 samples, 0.51%)</title><rect x="932.3" y="3797" width="6.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="935.29" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureCapacityInternal (13 samples, 0.16%)</title><rect x="195.3" y="4549" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="198.29" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="903.1" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="906.06" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (2 samples, 0.02%)</title><rect x="88.5" y="4197" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="91.47" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.&lt;init&gt; (2 samples, 0.02%)</title><rect x="101.3" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="104.28" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.KeywordLookupSite$1.get (2 samples, 0.02%)</title><rect x="301.0" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="303.97" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="846.0" y="3957" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.05" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method (3 samples, 0.04%)</title><rect x="200.0" y="4565" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="203.04" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (30 samples, 0.37%)</title><rect x="876.1" y="3925" width="4.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="879.14" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.create (5 samples, 0.06%)</title><rect x="733.9" y="4277" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="736.89" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (19 samples, 0.23%)</title><rect x="749.2" y="2773" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="813.1" y="4005" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.08" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/re-match-at-front (395 samples, 4.82%)</title><rect x="220.1" y="4565" width="56.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="223.06" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >instap..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1017.4" y="1621" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (128 samples, 1.56%)</title><rect x="850.4" y="4309" width="18.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="853.37" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="933.0" y="3285" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="936.01" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (80 samples, 0.98%)</title><rect x="834.1" y="4197" width="11.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="837.10" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (5 samples, 0.06%)</title><rect x="876.1" y="3765" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="879.14" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="959.2" y="3381" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.21" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (2 samples, 0.02%)</title><rect x="176.3" y="4277" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="179.29" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="871.5" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="874.53" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="843.6" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.60" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JVM_GetCallerClass (24 samples, 0.29%)</title><rect x="136.6" y="4597" width="3.4" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text text-anchor="" x="139.55" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (30 samples, 0.37%)</title><rect x="821.6" y="4325" width="4.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="824.57" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="925.1" y="3797" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="928.09" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (5 samples, 0.06%)</title><rect x="760.2" y="3349" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="923.9" y="3813" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="926.94" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="848.1" y="3893" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="851.06" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (40 samples, 0.49%)</title><rect x="961.8" y="3685" width="5.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="964.80" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (2 samples, 0.02%)</title><rect x="181.9" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="184.90" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="765.3" y="3637" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="768.28" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="822.7" y="4101" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="966.6" y="3157" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="969.55" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="854.3" y="3653" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="857.26" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (5 samples, 0.06%)</title><rect x="775.5" y="3877" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.50" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="997.4" y="2837" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1000.36" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="1000.5" y="2805" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1003.53" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="959.9" y="3317" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="962.93" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="843.6" y="3685" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="846.60" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken (3 samples, 0.04%)</title><rect x="98.1" y="4453" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="101.11" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (3 samples, 0.04%)</title><rect x="341.0" y="4437" width="0.4" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text text-anchor="" x="343.99" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="1013.2" y="2149" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="2159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (4 samples, 0.05%)</title><rect x="323.3" y="4437" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="326.28" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RestFn.applyTo (2,001 samples, 24.41%)</title><rect x="73.6" y="4885" width="288.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="76.64" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.lang.RestFn.applyTo</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Long.valueOf (2 samples, 0.02%)</title><rect x="951.3" y="3557" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="954.29" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (3 samples, 0.04%)</title><rect x="929.1" y="3269" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="932.12" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureCapacityInternal (2 samples, 0.02%)</title><rect x="858.1" y="3973" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="861.14" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (40 samples, 0.49%)</title><rect x="961.8" y="3669" width="5.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="964.80" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="980.2" y="3285" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="983.23" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="991.2" y="2853" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.17" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (3 samples, 0.04%)</title><rect x="211.1" y="4501" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="214.13" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="782.3" y="4085" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="785.27" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parker::unpark() (20 samples, 0.24%)</title><rect x="378.7" y="4709" width="2.9" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text text-anchor="" x="381.71" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="1015.9" y="2069" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.94" y="2079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="772.3" y="3845" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="775.34" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="774.6" y="3685" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (7 samples, 0.09%)</title><rect x="953.5" y="3365" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.45" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (2 samples, 0.02%)</title><rect x="176.9" y="4309" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="179.86" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$ArrayNode.find (2 samples, 0.02%)</title><rect x="322.7" y="4485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="325.71" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format (2 samples, 0.02%)</title><rect x="878.0" y="3397" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="881.01" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (2 samples, 0.02%)</title><rect x="753.6" y="3029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="756.62" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="843.3" y="3669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.31" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="997.8" y="2789" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="70.5" y="5029" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="73.47" y="5039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (89 samples, 1.09%)</title><rect x="894.7" y="4133" width="12.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="897.71" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Relocation::pd_set_call_destination(unsigned char*) (3 samples, 0.04%)</title><rect x="1175.0" y="4789" width="0.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text text-anchor="" x="1178.03" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>VMThread::evaluate_operation(VM_Operation*) (10 samples, 0.12%)</title><rect x="1182.2" y="4949" width="1.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text text-anchor="" x="1185.23" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (12 samples, 0.15%)</title><rect x="854.5" y="3813" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="857.54" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="760.4" y="2885" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.39" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Number.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1021.4" y="3477" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1024.41" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (11 samples, 0.13%)</title><rect x="749.2" y="2389" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Curly.match (2 samples, 0.02%)</title><rect x="310.5" y="4277" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="313.47" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="926.1" y="3509" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="929.10" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="1016.9" y="1909" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="1919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="1016.4" y="2021" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.37" y="2031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (2 samples, 0.02%)</title><rect x="180.6" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="183.61" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="912.3" y="3381" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="915.28" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="903.6" y="3589" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="906.64" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (2 samples, 0.02%)</title><rect x="765.3" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="768.28" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (12 samples, 0.15%)</title><rect x="831.8" y="3941" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="834.80" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (7 samples, 0.09%)</title><rect x="966.0" y="3317" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="968.98" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="931.3" y="3669" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="934.28" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Matcher.search (10 samples, 0.12%)</title><rect x="740.7" y="4517" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="743.66" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="76.5" y="4645" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="79.52" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="998.7" y="2805" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1001.66" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="962.1" y="3253" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parker::unpark() (5 samples, 0.06%)</title><rect x="382.5" y="4613" width="0.7" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text text-anchor="" x="385.46" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (3 samples, 0.04%)</title><rect x="844.3" y="3989" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="847.32" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.SelectorImpl.lockAndDoSelect (404 samples, 4.93%)</title><rect x="613.1" y="4869" width="58.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="616.10" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.ni..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="909.7" y="3813" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="912.69" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOfObject (2 samples, 0.02%)</title><rect x="319.8" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="322.83" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (54 samples, 0.66%)</title><rect x="951.1" y="3717" width="7.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="954.15" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="782.3" y="4069" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="785.27" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/swap! (31 samples, 0.38%)</title><rect x="316.9" y="4533" width="4.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="319.95" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (18 samples, 0.22%)</title><rect x="779.1" y="4165" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.hashCode (57 samples, 0.70%)</title><rect x="211.8" y="4485" width="8.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="214.85" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/swap! (4 samples, 0.05%)</title><rect x="335.5" y="4565" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="338.52" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.addAll (4 samples, 0.05%)</title><rect x="130.4" y="4661" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="133.36" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (10 samples, 0.12%)</title><rect x="172.7" y="4021" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="1013.2" y="2053" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="2063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="848.5" y="3781" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="851.50" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="968.4" y="3301" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="971.43" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="822.7" y="4197" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (11 samples, 0.13%)</title><rect x="977.6" y="3253" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="980.64" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (11 samples, 0.13%)</title><rect x="917.7" y="3669" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="920.75" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Long.toString (2 samples, 0.02%)</title><rect x="790.3" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="793.33" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="807.6" y="3941" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="810.61" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (15 samples, 0.18%)</title><rect x="958.9" y="3781" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="961.92" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState) (4 samples, 0.05%)</title><rect x="1174.9" y="4885" width="0.6" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text text-anchor="" x="1177.88" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.GeneratedMethodAccessor49 (2 samples, 0.02%)</title><rect x="822.7" y="3717" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="896.9" y="3525" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="899.87" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (5 samples, 0.06%)</title><rect x="814.2" y="3861" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="817.23" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/apply (13 samples, 0.16%)</title><rect x="507.0" y="4485" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="509.99" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="880.5" y="3733" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="813.1" y="4053" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.08" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText (7 samples, 0.09%)</title><rect x="114.5" y="4581" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="117.52" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="761.8" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="764.83" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="924.2" y="3637" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="927.23" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (7 samples, 0.09%)</title><rect x="505.4" y="4501" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="508.41" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.assoc (6 samples, 0.07%)</title><rect x="317.1" y="4357" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="320.09" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="865.6" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (6 samples, 0.07%)</title><rect x="1028.2" y="4373" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1031.17" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RestFn.invoke (43 samples, 0.52%)</title><rect x="79.0" y="4741" width="6.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="81.96" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="1016.4" y="1845" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.37" y="1855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap$TransientArrayMap.doAssoc (2 samples, 0.02%)</title><rect x="125.3" y="4613" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="128.32" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (7 samples, 0.09%)</title><rect x="775.5" y="4005" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.50" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="884.1" y="3637" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="887.06" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="937.0" y="3413" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="940.04" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="962.1" y="3189" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="832.8" y="3653" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="835.80" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="1010.8" y="2597" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (8 samples, 0.10%)</title><rect x="823.4" y="4021" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="826.45" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="968.1" y="3285" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.14" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.aleph.dirigiste.Executor$3.run (102 samples, 1.24%)</title><rect x="368.9" y="4965" width="14.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="371.92" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="1016.9" y="1957" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="1967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="898.0" y="3621" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="901.02" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="988.9" y="3093" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="1015.6" y="1877" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.65" y="1887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="1010.2" y="2469" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.18" y="2479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (195 samples, 2.38%)</title><rect x="993.3" y="3397" width="28.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.33" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="936.0" y="3557" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="939.03" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (16 samples, 0.20%)</title><rect x="914.9" y="3797" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="917.87" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="989.2" y="3205" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.16" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="823.7" y="3797" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="826.73" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (11 samples, 0.13%)</title><rect x="852.5" y="3669" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="855.53" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="863.9" y="3893" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="866.90" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="946.8" y="3349" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.83" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="987.1" y="3045" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.14" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="886.5" y="3445" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="889.51" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="842.6" y="3557" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.59" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="842.4" y="3637" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.45" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="827.6" y="4165" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="830.62" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="925.1" y="3701" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="928.09" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="860.4" y="3621" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="863.45" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (101 samples, 1.23%)</title><rect x="875.1" y="4053" width="14.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="878.13" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="968.4" y="3477" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.43" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.invoke (3 samples, 0.04%)</title><rect x="341.4" y="4549" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="344.43" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (125 samples, 1.53%)</title><rect x="850.7" y="4197" width="18.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="853.66" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseChaitin::post_allocate_copy_removal() (6 samples, 0.07%)</title><rect x="1119.0" y="4853" width="0.9" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text text-anchor="" x="1122.02" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read (381 samples, 4.65%)</title><rect x="473.7" y="4885" width="54.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="476.74" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io.ne..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="1010.2" y="2293" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.18" y="2303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (6 samples, 0.07%)</title><rect x="887.5" y="3669" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="890.51" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (78 samples, 0.95%)</title><rect x="749.0" y="3717" width="11.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.add (58 samples, 0.71%)</title><rect x="155.6" y="4629" width="8.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="158.56" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="861.7" y="3541" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="864.74" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="904.1" y="3605" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.07" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="807.6" y="3845" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="810.61" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="872.7" y="3765" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="967.6" y="3445" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1019.4" y="869" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.39" y="879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1018.7" y="1221" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (77 samples, 0.94%)</title><rect x="14.0" y="5013" width="11.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="17.03" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.KQueueSelectorImpl.doSelect (583 samples, 7.11%)</title><rect x="529.0" y="4869" width="84.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="532.02" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.nio.c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="916.6" y="3621" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="919.60" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (11 samples, 0.13%)</title><rect x="970.3" y="3301" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="973.30" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (3 samples, 0.04%)</title><rect x="896.4" y="3701" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="899.44" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (32 samples, 0.39%)</title><rect x="980.7" y="3365" width="4.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="983.66" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/node-get (5 samples, 0.06%)</title><rect x="360.9" y="4629" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="363.86" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (7 samples, 0.09%)</title><rect x="760.2" y="3541" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hasheq (2 samples, 0.02%)</title><rect x="306.4" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="309.44" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="839.3" y="3733" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="842.28" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (30 samples, 0.37%)</title><rect x="876.1" y="3957" width="4.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="879.14" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="947.7" y="3333" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="991.5" y="2709" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="994.46" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1008.9" y="2437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (12 samples, 0.15%)</title><rect x="817.7" y="4037" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.69" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="999.5" y="2869" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.52" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="898.7" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="901.74" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="959.9" y="3429" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="962.93" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (6 samples, 0.07%)</title><rect x="1025.2" y="4149" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1028.15" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeMatchingMethod (2 samples, 0.02%)</title><rect x="895.4" y="3925" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="898.43" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1004.6" y="2373" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.56" y="2383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (4 samples, 0.05%)</title><rect x="183.8" y="4501" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="186.78" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (5 samples, 0.06%)</title><rect x="752.8" y="2997" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.76" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>NMethodSweeper::process_nmethod(nmethod*) (23 samples, 0.28%)</title><rect x="1178.2" y="4885" width="3.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text text-anchor="" x="1181.19" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (12 samples, 0.15%)</title><rect x="942.1" y="3477" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="945.08" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (14 samples, 0.17%)</title><rect x="999.8" y="3173" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.81" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (427 samples, 5.21%)</title><rect x="961.1" y="3877" width="61.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="964.08" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojur..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (2 samples, 0.02%)</title><rect x="344.2" y="4533" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="347.16" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (19 samples, 0.23%)</title><rect x="989.9" y="3221" width="2.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="992.88" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="1001.1" y="2885" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/deref (2 samples, 0.02%)</title><rect x="83.3" y="4485" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="86.28" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$BmpCharProperty.match (6 samples, 0.07%)</title><rect x="309.9" y="4437" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="312.90" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="865.2" y="3509" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="759.2" y="3317" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.23" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="975.6" y="3221" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="978.62" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (44 samples, 0.54%)</title><rect x="172.7" y="4453" width="6.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.format (2 samples, 0.02%)</title><rect x="853.7" y="3509" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="856.68" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="837.0" y="4037" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="839.98" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="773.1" y="3877" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="776.06" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="991.7" y="3013" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.75" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Listener.onSuccess (100 samples, 1.22%)</title><rect x="368.9" y="4917" width="14.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="371.92" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="995.2" y="2693" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="998.20" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseCFG::do_global_code_motion() (9 samples, 0.11%)</title><rect x="1111.4" y="4869" width="1.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text text-anchor="" x="1114.39" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>CodeHeap::search_freelist(unsigned long, bool) (4 samples, 0.05%)</title><rect x="1107.5" y="4789" width="0.6" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text text-anchor="" x="1110.50" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="872.7" y="3957" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1015.2" y="1957" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.22" y="1967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (25 samples, 0.31%)</title><rect x="749.2" y="2917" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.invoke (7 samples, 0.09%)</title><rect x="326.6" y="4549" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="329.60" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (14 samples, 0.17%)</title><rect x="1007.3" y="2853" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.30" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="977.2" y="3109" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="980.21" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="843.6" y="3461" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="846.60" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="933.0" y="3333" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="936.01" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (4 samples, 0.05%)</title><rect x="767.7" y="3797" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.73" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/apply (10 samples, 0.12%)</title><rect x="79.1" y="4709" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="82.11" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (124 samples, 1.51%)</title><rect x="850.8" y="4133" width="17.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="853.80" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.DelegatingMethodAccessorImpl (3 samples, 0.04%)</title><rect x="801.7" y="4469" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="804.71" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="964.7" y="3301" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (4 samples, 0.05%)</title><rect x="765.0" y="3717" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="976.3" y="3333" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="979.34" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (18 samples, 0.22%)</title><rect x="749.2" y="2645" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1000.8" y="2533" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1003.82" y="2543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.swap (31 samples, 0.38%)</title><rect x="316.9" y="4517" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="319.95" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (2 samples, 0.02%)</title><rect x="750.7" y="2357" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="753.74" y="2367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Long.toString (2 samples, 0.02%)</title><rect x="799.0" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="801.97" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (6 samples, 0.07%)</title><rect x="947.7" y="3461" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (25 samples, 0.31%)</title><rect x="172.7" y="4277" width="3.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="866.3" y="3461" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="869.35" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.pcequiv (2 samples, 0.02%)</title><rect x="297.1" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="300.08" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="859.3" y="3669" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="862.29" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="935.7" y="3557" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="938.74" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt (82 samples, 1.00%)</title><rect x="701.5" y="4549" width="11.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="704.50" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (17 samples, 0.21%)</title><rect x="813.5" y="4117" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="979.8" y="3045" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (240 samples, 2.93%)</title><rect x="748.6" y="4389" width="34.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.58" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ch..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="970.7" y="3045" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="973.73" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="975.0" y="3477" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.05" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="946.3" y="3301" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode.tryMatch (35 samples, 0.43%)</title><rect x="500.2" y="4437" width="5.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="503.23" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (8 samples, 0.10%)</title><rect x="1011.5" y="2357" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (5 samples, 0.06%)</title><rect x="896.9" y="3621" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="899.87" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (4 samples, 0.05%)</title><rect x="767.7" y="3781" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.73" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="953.0" y="3493" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.02" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="923.4" y="3461" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="926.36" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (3 samples, 0.04%)</title><rect x="767.3" y="3669" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.30" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.cons (7 samples, 0.09%)</title><rect x="328.0" y="4485" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="331.04" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="915.9" y="3525" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="918.88" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="945.5" y="3125" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="948.53" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="802.6" y="4277" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="805.57" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (67 samples, 0.82%)</title><rect x="749.0" y="3653" width="9.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="993.8" y="3077" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.77" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="992.2" y="2709" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.18" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="892.0" y="3749" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.98" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (17 samples, 0.21%)</title><rect x="946.7" y="3605" width="2.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="949.69" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1017.4" y="1365" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::PlatformEvent::park(long) (57 samples, 0.70%)</title><rect x="1039.5" y="4917" width="8.3" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text text-anchor="" x="1042.55" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (6 samples, 0.07%)</title><rect x="763.8" y="3717" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.84" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.DefaultHeaders.setObject (2 samples, 0.02%)</title><rect x="476.9" y="4629" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="479.90" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="880.5" y="3605" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (3 samples, 0.04%)</title><rect x="1105.5" y="4917" width="0.4" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text text-anchor="" x="1108.49" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (5 samples, 0.06%)</title><rect x="926.1" y="3653" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="929.10" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (11 samples, 0.13%)</title><rect x="831.9" y="3909" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="834.94" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.conj (3 samples, 0.04%)</title><rect x="306.9" y="4501" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="309.87" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (21 samples, 0.26%)</title><rect x="858.6" y="3877" width="3.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="861.57" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="763.6" y="3429" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.55" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (26 samples, 0.32%)</title><rect x="889.8" y="4069" width="3.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.82" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Curly.match (2 samples, 0.02%)</title><rect x="310.5" y="4325" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="313.47" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (8 samples, 0.10%)</title><rect x="862.8" y="3893" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="865.75" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="872.7" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="904.9" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="907.93" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="982.7" y="3253" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="985.68" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="944.0" y="3621" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="946.95" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="867.2" y="3973" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="870.21" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1009.6" y="2405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1012.60" y="2415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.gt (2 samples, 0.02%)</title><rect x="826.8" y="4453" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="829.76" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="767.7" y="3733" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.73" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="856.4" y="4021" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="859.42" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="841.4" y="3525" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="844.44" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="996.9" y="2789" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.93" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1173.6" y="4517" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text text-anchor="" x="1176.59" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="860.2" y="3637" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="863.16" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (39 samples, 0.48%)</title><rect x="980.7" y="3541" width="5.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="983.66" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="973.9" y="3013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="976.90" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="843.6" y="3701" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.60" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Curly.match0 (2 samples, 0.02%)</title><rect x="310.5" y="4357" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="313.47" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="1001.1" y="2693" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="890.0" y="3557" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.assoc (9 samples, 0.11%)</title><rect x="353.7" y="4501" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="356.66" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Object.hashCode (4 samples, 0.05%)</title><rect x="330.1" y="4437" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="333.05" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>VM_Operation::~VM_Operation() (2 samples, 0.02%)</title><rect x="11.0" y="5013" width="0.3" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text text-anchor="" x="14.01" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (18 samples, 0.22%)</title><rect x="928.7" y="3669" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="931.69" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="916.6" y="3685" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="919.60" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-message (8 samples, 0.10%)</title><rect x="329.6" y="4565" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="332.62" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="986.7" y="3173" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="989.71" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="818.0" y="3797" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="820.97" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="835.4" y="3621" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="838.40" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="104.3" y="4453" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="107.30" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="752.5" y="2725" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.47" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="865.2" y="3557" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="873.0" y="3813" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.97" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (10 samples, 0.12%)</title><rect x="823.2" y="4117" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="826.16" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (16 samples, 0.20%)</title><rect x="938.5" y="4005" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.AbstractList.&lt;init&gt; (2 samples, 0.02%)</title><rect x="132.4" y="4629" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="135.38" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/swap! (7 samples, 0.09%)</title><rect x="65.6" y="5029" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="68.57" y="5039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="817.3" y="3845" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.25" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (12 samples, 0.15%)</title><rect x="770.5" y="3877" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="965.4" y="3301" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="968.40" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (7 samples, 0.09%)</title><rect x="929.0" y="3525" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="931.98" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="1005.9" y="2869" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1008.86" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.substring (2 samples, 0.02%)</title><rect x="733.0" y="4341" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="736.03" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="992.2" y="2773" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.18" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="885.5" y="3605" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="888.50" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Branch.match (7 samples, 0.09%)</title><rect x="740.9" y="4469" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="743.95" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (12 samples, 0.15%)</title><rect x="865.2" y="3861" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/swap! (2 samples, 0.02%)</title><rect x="312.5" y="4533" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="315.49" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (16 samples, 0.20%)</title><rect x="938.5" y="3845" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (3 samples, 0.04%)</title><rect x="810.3" y="4165" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="813.34" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (10 samples, 0.12%)</title><rect x="172.7" y="4005" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol (4 samples, 0.05%)</title><rect x="96.1" y="4405" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="99.10" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (13 samples, 0.16%)</title><rect x="756.8" y="3573" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (145 samples, 1.77%)</title><rect x="748.7" y="4069" width="20.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.72" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="754.3" y="3029" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (34 samples, 0.41%)</title><rect x="969.9" y="3621" width="4.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (3 samples, 0.04%)</title><rect x="180.2" y="4421" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="183.18" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.SocketDispatcher.read (85 samples, 1.04%)</title><rect x="515.6" y="4773" width="12.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="518.63" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.category (2 samples, 0.02%)</title><rect x="830.2" y="3653" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="833.21" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (3 samples, 0.04%)</title><rect x="337.7" y="4437" width="0.4" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text text-anchor="" x="340.68" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="918.6" y="3349" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="921.61" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="986.9" y="2933" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.85" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="871.4" y="3749" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.39" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="864.3" y="3781" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="867.33" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (2 samples, 0.02%)</title><rect x="867.2" y="3941" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="870.21" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (6 samples, 0.07%)</title><rect x="762.7" y="3621" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.69" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/NodeListener/fn--19532 (98 samples, 1.20%)</title><rect x="346.3" y="4597" width="14.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="349.32" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (14 samples, 0.17%)</title><rect x="944.7" y="3605" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="947.67" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (6 samples, 0.07%)</title><rect x="864.3" y="3829" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="867.33" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="923.7" y="3621" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="926.65" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (7 samples, 0.09%)</title><rect x="973.6" y="3253" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="976.61" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (17 samples, 0.21%)</title><rect x="810.9" y="4165" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="813.92" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (4 samples, 0.05%)</title><rect x="958.3" y="3573" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="961.35" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (2 samples, 0.02%)</title><rect x="759.8" y="3477" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.81" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.util.locale.provider.DecimalFormatSymbolsProviderImpl.getInstance (2 samples, 0.02%)</title><rect x="790.0" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="793.04" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="979.8" y="2997" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="999.2" y="3141" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.24" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.deref (2 samples, 0.02%)</title><rect x="305.3" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="308.29" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (65 samples, 0.79%)</title><rect x="1010.8" y="2661" width="9.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.multiply (3 samples, 0.04%)</title><rect x="800.6" y="4501" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="803.55" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (28 samples, 0.34%)</title><rect x="922.9" y="3941" width="4.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="962.7" y="3253" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="965.67" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (11 samples, 0.13%)</title><rect x="944.7" y="3461" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="947.67" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>compojure.core/wrap-route-info/fn--20608 (1,973 samples, 24.07%)</title><rect x="77.5" y="4805" width="284.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="80.52" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >compojure.core/wrap-route-info/fn--20608</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="759.2" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.23" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (4 samples, 0.05%)</title><rect x="749.3" y="1429" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client-middleware/wrap-cookies (4 samples, 0.05%)</title><rect x="726.3" y="4437" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="729.26" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="947.7" y="3221" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/swap! (2 samples, 0.02%)</title><rect x="72.3" y="5013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="75.34" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="823.7" y="3733" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="826.73" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="904.2" y="3477" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.21" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (31 samples, 0.38%)</title><rect x="869.1" y="4197" width="4.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.08" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="978.4" y="2869" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.36" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="779.4" y="3877" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.39" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="975.0" y="3429" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.05" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="882.2" y="3477" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="885.19" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (27 samples, 0.33%)</title><rect x="172.7" y="4309" width="3.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (3 samples, 0.04%)</title><rect x="772.3" y="3909" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="775.34" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (7 samples, 0.09%)</title><rect x="966.0" y="3285" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="968.98" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.internal.ReferenceCountUpdater.release (2 samples, 0.02%)</title><rect x="510.4" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="513.45" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method (2 samples, 0.02%)</title><rect x="895.4" y="3909" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="898.43" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.invoke (2 samples, 0.02%)</title><rect x="344.2" y="4549" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="347.16" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (5 samples, 0.06%)</title><rect x="1023.7" y="3973" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1026.71" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="880.5" y="3989" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="898.7" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="901.74" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (9 samples, 0.11%)</title><rect x="350.9" y="4501" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="353.93" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="968.1" y="3477" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="971.14" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="780.7" y="3877" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="783.69" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1000.8" y="2677" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1003.82" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (2 samples, 0.02%)</title><rect x="1021.0" y="3141" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1023.98" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (76 samples, 0.93%)</title><rect x="927.5" y="3989" width="11.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="930.54" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (7 samples, 0.09%)</title><rect x="922.9" y="3813" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (125 samples, 1.53%)</title><rect x="850.7" y="4165" width="18.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="853.66" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="886.5" y="3301" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="889.51" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (16 samples, 0.20%)</title><rect x="993.6" y="3221" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="996.62" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="887.2" y="3669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="890.23" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>NMethodSweeper::possibly_sweep() (26 samples, 0.32%)</title><rect x="1177.9" y="4917" width="3.7" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text text-anchor="" x="1180.91" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="920.1" y="3525" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.05" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="326.6" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="329.60" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.assoc (4 samples, 0.05%)</title><rect x="278.5" y="4453" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="281.51" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="921.1" y="3221" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="924.06" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.num (2 samples, 0.02%)</title><rect x="951.3" y="3573" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="954.29" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (78 samples, 0.95%)</title><rect x="749.0" y="3749" width="11.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureCapacityInternal (2 samples, 0.02%)</title><rect x="804.3" y="3957" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="807.30" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.swap (3 samples, 0.04%)</title><rect x="210.0" y="4533" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="212.98" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="984.0" y="3077" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="922.9" y="3621" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="995.6" y="2597" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="852.0" y="3829" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="854.95" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="1006.3" y="2453" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.29" y="2463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="846.0" y="4069" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.05" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.write (2 samples, 0.02%)</title><rect x="676.4" y="4565" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="679.45" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="993.8" y="2949" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.77" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (10 samples, 0.12%)</title><rect x="337.1" y="4517" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="340.11" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="1002.5" y="2629" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1005.55" y="2639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.createNode (2 samples, 0.02%)</title><rect x="499.9" y="4293" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="502.94" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (10 samples, 0.12%)</title><rect x="881.9" y="3701" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="884.90" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="1021.4" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1024.41" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (4 samples, 0.05%)</title><rect x="820.6" y="4197" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="823.57" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (8 samples, 0.10%)</title><rect x="884.6" y="3749" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="887.63" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (5 samples, 0.06%)</title><rect x="975.6" y="3349" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.62" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (2 samples, 0.02%)</title><rect x="172.7" y="3413" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="960.5" y="3397" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="963.51" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (2 samples, 0.02%)</title><rect x="888.1" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="891.09" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="898.6" y="3781" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="901.60" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (19 samples, 0.23%)</title><rect x="976.8" y="3397" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.78" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.find (3 samples, 0.04%)</title><rect x="315.1" y="4453" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="318.08" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (12 samples, 0.15%)</title><rect x="967.6" y="3669" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="998.8" y="2693" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1001.80" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>nrepl.middleware.interruptible-eval/evaluate/fn--5140 (2,321 samples, 28.32%)</title><rect x="700.2" y="4837" width="334.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="703.20" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >nrepl.middleware.interruptible-eval/evaluate/..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (5 samples, 0.06%)</title><rect x="1006.1" y="2645" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="785.0" y="4085" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.00" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method (2 samples, 0.02%)</title><rect x="878.0" y="3477" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="881.01" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="979.8" y="3413" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (6 samples, 0.07%)</title><rect x="816.4" y="3989" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="819.39" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (6 samples, 0.07%)</title><rect x="978.1" y="3157" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="956.5" y="3397" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="959.48" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (7 samples, 0.09%)</title><rect x="760.2" y="3509" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (5 samples, 0.06%)</title><rect x="1000.4" y="2917" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1003.39" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="979.8" y="3061" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (10 samples, 0.12%)</title><rect x="981.2" y="3157" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="984.24" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.onRealized (2 samples, 0.02%)</title><rect x="713.3" y="4597" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="716.31" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="976.9" y="3173" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.92" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="949.6" y="3525" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="952.57" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (5 samples, 0.06%)</title><rect x="1032.2" y="4517" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1035.21" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (30 samples, 0.37%)</title><rect x="821.6" y="4405" width="4.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="824.57" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="1013.9" y="2069" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.92" y="2079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (10 samples, 0.12%)</title><rect x="963.2" y="3477" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="966.24" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="929.6" y="3493" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="932.55" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (3 samples, 0.04%)</title><rect x="751.3" y="2549" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="754.32" y="2559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (241 samples, 2.94%)</title><rect x="748.4" y="4437" width="34.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.44" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >cl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="1017.4" y="1589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="822.0" y="4021" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="921.1" y="3285" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="924.06" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="1001.1" y="2821" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigInteger.smallToString (4 samples, 0.05%)</title><rect x="127.8" y="4677" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="130.77" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="808.0" y="3925" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="811.04" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="1004.9" y="2677" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.85" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.auto_flatten_seq.AutoFlattenSeq.conj_flat (8 samples, 0.10%)</title><rect x="345.2" y="4549" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="348.17" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeNoArgInstanceMember (15 samples, 0.18%)</title><rect x="128.9" y="4693" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="131.92" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Listener.onSuccess (8 samples, 0.10%)</title><rect x="382.2" y="4821" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="385.17" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="1019.2" y="1077" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.25" y="1087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (6 samples, 0.07%)</title><rect x="865.9" y="3669" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="750.3" y="2133" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="753.31" y="2143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format (2 samples, 0.02%)</title><rect x="895.4" y="3829" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="898.43" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.GeneratedMethodAccessor49 (2 samples, 0.02%)</title><rect x="833.8" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="836.81" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>writev (20 samples, 0.24%)</title><rect x="673.4" y="4373" width="2.9" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text text-anchor="" x="676.43" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="869.4" y="3813" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.37" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (2 samples, 0.02%)</title><rect x="898.0" y="3589" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="901.02" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="954.5" y="3381" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="957.46" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="959.9" y="3445" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.93" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client/http-connection/fn--16976/fn--16995 (36 samples, 0.44%)</title><rect x="719.5" y="4421" width="5.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="722.50" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="931.6" y="3557" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="934.57" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (59 samples, 0.72%)</title><rect x="1011.5" y="2549" width="8.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (13 samples, 0.16%)</title><rect x="829.9" y="3781" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="832.92" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="993.0" y="2997" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.05" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="866.2" y="3621" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="869.21" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hasheq (8 samples, 0.10%)</title><rect x="292.0" y="4325" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="295.04" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeMatchingMethod (2 samples, 0.02%)</title><rect x="806.6" y="3733" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="809.60" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="102.3" y="4453" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="105.29" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (20 samples, 0.24%)</title><rect x="823.0" y="4293" width="2.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="826.01" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/conj--5407 (6 samples, 0.07%)</title><rect x="499.4" y="4405" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="502.36" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="916.6" y="3653" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="919.60" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="992.0" y="2997" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.04" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1017.4" y="1301" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (36 samples, 0.44%)</title><rect x="749.2" y="3237" width="5.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="865.6" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="817.4" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.40" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="815.0" y="3973" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="817.95" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (40 samples, 0.49%)</title><rect x="803.3" y="4229" width="5.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="806.29" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (5 samples, 0.06%)</title><rect x="896.9" y="3541" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="899.87" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (6 samples, 0.07%)</title><rect x="990.3" y="3157" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="993.31" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (16 samples, 0.20%)</title><rect x="911.7" y="3765" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="914.70" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="811.8" y="3733" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="814.78" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (5 samples, 0.06%)</title><rect x="886.4" y="3669" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="889.36" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeMatchingMethod (2 samples, 0.02%)</title><rect x="900.8" y="3333" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="903.76" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>kevent (396 samples, 4.83%)</title><rect x="613.8" y="4805" width="57.0" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text text-anchor="" x="616.82" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >kevent</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (4 samples, 0.05%)</title><rect x="757.9" y="3365" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.94" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (3 samples, 0.04%)</title><rect x="292.8" y="4309" width="0.4" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text text-anchor="" x="295.76" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (14 samples, 0.17%)</title><rect x="749.2" y="2469" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (3 samples, 0.04%)</title><rect x="751.3" y="2581" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="754.32" y="2591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JvmtiExport::load_agent_library(AttachOperation*, outputStream*) (2 samples, 0.02%)</title><rect x="1181.6" y="4933" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text text-anchor="" x="1184.65" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.equal (2 samples, 0.02%)</title><rect x="852.5" y="3589" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="855.53" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (9 samples, 0.11%)</title><rect x="350.9" y="4469" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="353.93" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.createNode (3 samples, 0.04%)</title><rect x="286.0" y="4405" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="289.00" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="1010.8" y="2517" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1001.3" y="2613" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.25" y="2623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="785.3" y="4069" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.29" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PoolChunkList.free (2 samples, 0.02%)</title><rect x="509.9" y="4389" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="512.87" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="959.5" y="3605" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.50" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="983.3" y="3125" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.26" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="809.2" y="3941" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="812.19" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="1005.9" y="2805" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1008.86" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="807.6" y="3701" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="810.61" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.InputStreamReader.&lt;init&gt; (3 samples, 0.04%)</title><rect x="743.8" y="4485" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="746.83" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (7 samples, 0.09%)</title><rect x="809.0" y="4117" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="812.05" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="775.2" y="3781" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.21" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="997.8" y="2725" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (12 samples, 0.15%)</title><rect x="854.5" y="3845" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="857.54" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="832.8" y="3717" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="835.80" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.assoc (2 samples, 0.02%)</title><rect x="355.4" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="358.39" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce1 (11 samples, 0.13%)</title><rect x="733.6" y="4389" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="736.61" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="765.0" y="3621" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (10 samples, 0.12%)</title><rect x="779.1" y="4085" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core/eval16483/send-message--16490 (38 samples, 0.46%)</title><rect x="672.0" y="4853" width="5.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="674.99" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="773.8" y="3925" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="776.78" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="937.2" y="3109" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="940.18" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (3 samples, 0.04%)</title><rect x="771.6" y="3685" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="774.62" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.07%)</title><rect x="1173.2" y="4629" width="0.8" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text text-anchor="" x="1176.16" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="973.0" y="3317" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="976.03" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="872.0" y="3925" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.96" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="1016.9" y="1797" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="1807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1015.6" y="1973" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.65" y="1983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="846.6" y="3909" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.63" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="891.7" y="3717" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.69" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="947.7" y="3189" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parker::unpark() (3 samples, 0.04%)</title><rect x="371.4" y="4725" width="0.4" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text text-anchor="" x="374.37" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="914.6" y="3781" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="917.58" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/get-in (4 samples, 0.05%)</title><rect x="73.9" y="4773" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="76.92" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="807.6" y="3925" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="810.61" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (21 samples, 0.26%)</title><rect x="858.6" y="3861" width="3.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="861.57" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (101 samples, 1.23%)</title><rect x="1006.1" y="2997" width="14.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="818.1" y="3653" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="821.12" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="968.7" y="3429" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.71" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (18 samples, 0.22%)</title><rect x="864.3" y="3893" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="867.33" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (6 samples, 0.07%)</title><rect x="836.1" y="3813" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="839.12" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="949.4" y="3541" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.assoc (2 samples, 0.02%)</title><rect x="961.1" y="3797" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="964.08" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="866.3" y="3445" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="869.35" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/listener-exists? (3 samples, 0.04%)</title><rect x="326.2" y="4565" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="329.16" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="933.0" y="3317" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="936.01" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.AFn.applyTo (4 samples, 0.05%)</title><rect x="368.2" y="4885" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="371.20" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="959.9" y="3285" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.93" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.server/foreach-iterator (493 samples, 6.02%)</title><rect x="131.1" y="4693" width="71.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="134.08" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="985.4" y="2997" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="988.41" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (33 samples, 0.40%)</title><rect x="876.1" y="4021" width="4.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="879.14" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (14 samples, 0.17%)</title><rect x="805.3" y="4021" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="808.31" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="939.8" y="3397" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="974.8" y="3541" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="987.1" y="3029" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.14" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="760.4" y="3141" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.39" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.read (3 samples, 0.04%)</title><rect x="513.0" y="4693" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="516.04" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="1016.4" y="1941" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.37" y="1951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$7.isSatisfiedBy (15 samples, 0.18%)</title><rect x="729.7" y="4213" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="732.72" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.cons (3 samples, 0.04%)</title><rect x="210.0" y="4485" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="212.98" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="880.5" y="3957" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="761.8" y="3509" width="0.3" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text text-anchor="" x="764.83" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.copyMethods (2 samples, 0.02%)</title><rect x="942.2" y="3397" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="945.22" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="966.7" y="3077" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="969.70" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (12 samples, 0.15%)</title><rect x="917.7" y="3701" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="920.75" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (5 samples, 0.06%)</title><rect x="1028.3" y="4357" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1031.32" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1006.9" y="2645" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.87" y="2655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (25 samples, 0.31%)</title><rect x="895.7" y="3957" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="898.72" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="900.8" y="3349" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="903.76" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="984.3" y="2949" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="987.26" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (16 samples, 0.20%)</title><rect x="938.5" y="3989" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="762.8" y="3445" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.83" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="833.8" y="3701" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="836.81" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (11 samples, 0.13%)</title><rect x="805.3" y="3925" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="808.31" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Branch.match (3 samples, 0.04%)</title><rect x="741.5" y="4357" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="744.53" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.cons (5 samples, 0.06%)</title><rect x="375.4" y="4741" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="378.40" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="873.0" y="3861" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="875.97" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (3 samples, 0.04%)</title><rect x="775.1" y="3925" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.07" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (38 samples, 0.46%)</title><rect x="953.5" y="3605" width="5.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.45" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="848.1" y="4053" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.06" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (4 samples, 0.05%)</title><rect x="810.3" y="4197" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="813.34" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clout.core/assoc-keys-with-groups (4 samples, 0.05%)</title><rect x="76.2" y="4757" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="79.23" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (81 samples, 0.99%)</title><rect x="911.3" y="3941" width="11.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="914.27" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="917.9" y="3349" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="920.89" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (806 samples, 9.83%)</title><rect x="910.0" y="4181" width="116.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="912.97" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.lang.L..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core/netty-request-&gt;ring-request (6 samples, 0.07%)</title><rect x="499.4" y="4501" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="502.36" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.aleph.dirigiste.Executor.execute (13 samples, 0.16%)</title><rect x="371.8" y="4821" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="374.80" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (17 samples, 0.21%)</title><rect x="924.5" y="3893" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="927.51" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="908.8" y="3493" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (3 samples, 0.04%)</title><rect x="211.1" y="4437" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="214.13" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="854.1" y="3717" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="857.11" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (244 samples, 2.98%)</title><rect x="986.3" y="3525" width="35.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.28" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ex..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="832.8" y="3813" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="835.80" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (15 samples, 0.18%)</title><rect x="907.8" y="3909" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="910.81" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.flow/acquire/fn--14278 (5 samples, 0.06%)</title><rect x="713.6" y="4549" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="716.59" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="959.9" y="3301" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="962.93" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1019.4" y="981" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1022.39" y="991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (8 samples, 0.10%)</title><rect x="884.6" y="3733" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="887.63" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="882.2" y="3461" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="885.19" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="1010.9" y="2245" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.90" y="2255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (4 samples, 0.05%)</title><rect x="343.3" y="4357" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="346.30" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="754.3" y="2981" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (8 samples, 0.10%)</title><rect x="920.5" y="3525" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="923.48" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="767.3" y="3653" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.30" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="872.0" y="3845" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.96" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="939.5" y="3605" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.49" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (17 samples, 0.21%)</title><rect x="881.5" y="3909" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="884.47" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/into (2 samples, 0.02%)</title><rect x="345.2" y="4533" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="348.17" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (2 samples, 0.02%)</title><rect x="1020.7" y="3061" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1023.69" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="968.4" y="3429" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="971.43" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="892.0" y="3669" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.98" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="900.2" y="3477" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="903.18" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="908.0" y="3877" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="910.96" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="917.9" y="3381" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="920.89" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Thread.blockedOn (2 samples, 0.02%)</title><rect x="515.2" y="4757" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="518.20" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOfObject (3 samples, 0.04%)</title><rect x="281.7" y="4469" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="284.68" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PoolThreadCache.allocate (3 samples, 0.04%)</title><rect x="694.6" y="4565" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="697.59" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="840.0" y="3349" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="843.00" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (3 samples, 0.04%)</title><rect x="858.0" y="4037" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="861.00" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.addAll (18 samples, 0.22%)</title><rect x="197.2" y="4565" width="2.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="200.16" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/empty? (3 samples, 0.04%)</title><rect x="494.2" y="4597" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="497.18" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.more (3 samples, 0.04%)</title><rect x="494.6" y="4565" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="497.61" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (6 samples, 0.07%)</title><rect x="313.6" y="4421" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="316.64" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (16 samples, 0.20%)</title><rect x="899.8" y="3733" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="902.75" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="776.8" y="3925" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="779.80" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (7 samples, 0.09%)</title><rect x="824.9" y="4181" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="827.89" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (52 samples, 0.63%)</title><rect x="961.8" y="3797" width="7.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="964.80" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="879.5" y="3429" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="882.45" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (5 samples, 0.06%)</title><rect x="896.9" y="3653" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="899.87" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (5 samples, 0.06%)</title><rect x="813.5" y="3813" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="981.8" y="2837" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="984.82" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (26 samples, 0.32%)</title><rect x="774.4" y="4133" width="3.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.35" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="936.0" y="3269" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="939.03" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (33 samples, 0.40%)</title><rect x="783.1" y="4421" width="4.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.13" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="954.6" y="3269" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="957.60" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (4 samples, 0.05%)</title><rect x="749.3" y="1509" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (6 samples, 0.07%)</title><rect x="947.7" y="3365" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.DefaultHeaders$ValueIterator.&lt;init&gt; (2 samples, 0.02%)</title><rect x="377.4" y="4677" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="380.42" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="966.1" y="3157" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="969.12" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.auto-flatten-seq/auto-flatten-seq (2 samples, 0.02%)</title><rect x="1056.7" y="4949" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1059.68" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>GCTaskManager::get_task(unsigned int) (9 samples, 0.11%)</title><rect x="1058.3" y="4965" width="1.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text text-anchor="" x="1061.27" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (16 samples, 0.20%)</title><rect x="938.5" y="3861" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (6 samples, 0.07%)</title><rect x="846.0" y="3989" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.05" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode.tryMatch (15 samples, 0.18%)</title><rect x="696.9" y="4773" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="699.89" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.text.DecimalFormatSymbols.&lt;init&gt; (4 samples, 0.05%)</title><rect x="738.2" y="4501" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="741.21" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1009.6" y="2357" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.60" y="2367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (5 samples, 0.06%)</title><rect x="775.5" y="3845" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.50" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (31 samples, 0.38%)</title><rect x="749.2" y="3077" width="4.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (6 samples, 0.07%)</title><rect x="967.6" y="3557" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (3 samples, 0.04%)</title><rect x="900.3" y="3365" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="903.33" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (2 samples, 0.02%)</title><rect x="173.4" y="3877" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="176.41" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="887.2" y="3637" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="890.23" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="814.2" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="817.23" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="1009.3" y="2645" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.31" y="2655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="985.4" y="3221" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="988.41" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1173.6" y="4501" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text text-anchor="" x="1176.59" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="904.1" y="3637" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="907.07" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (3 samples, 0.04%)</title><rect x="177.2" y="4261" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="180.15" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Matcher.group (36 samples, 0.44%)</title><rect x="220.1" y="4549" width="5.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="223.06" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (30 samples, 0.37%)</title><rect x="876.1" y="3909" width="4.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="879.14" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="976.9" y="3077" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.92" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="869.2" y="4037" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.23" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method (2 samples, 0.02%)</title><rect x="833.8" y="3573" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="836.81" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/success! (2 samples, 0.02%)</title><rect x="493.2" y="3973" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="496.17" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (112 samples, 1.37%)</title><rect x="86.7" y="4517" width="16.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="89.74" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (8 samples, 0.10%)</title><rect x="884.6" y="3829" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="887.63" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hasheq (12 samples, 0.15%)</title><rect x="318.0" y="4309" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="320.96" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="885.8" y="3749" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="888.79" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (3 samples, 0.04%)</title><rect x="208.3" y="4389" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.25" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="835.4" y="3765" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="838.40" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="896.9" y="3461" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="899.87" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.gt (2 samples, 0.02%)</title><rect x="910.5" y="4133" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="913.55" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="1001.1" y="3013" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (8 samples, 0.10%)</title><rect x="749.2" y="1861" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="1871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="925.1" y="3621" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="928.09" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="996.2" y="3013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.21" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="822.0" y="4053" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (7 samples, 0.09%)</title><rect x="994.9" y="2933" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="979.8" y="3189" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="905.4" y="3349" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="908.37" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (4 samples, 0.05%)</title><rect x="785.0" y="4101" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.00" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (11 samples, 0.13%)</title><rect x="1007.3" y="2757" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1010.30" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1014.2" y="2005" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1017.21" y="2015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="905.8" y="3541" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="908.80" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="890.0" y="3589" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="866.3" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="869.35" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="983.3" y="3061" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="986.26" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="872.0" y="3861" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="874.96" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="953.7" y="2981" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="818.8" y="3749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="821.84" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (4 samples, 0.05%)</title><rect x="765.0" y="3749" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (8 samples, 0.10%)</title><rect x="975.6" y="3365" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.62" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (4 samples, 0.05%)</title><rect x="749.3" y="1749" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (32 samples, 0.39%)</title><rect x="902.3" y="3813" width="4.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="905.34" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="987.7" y="2869" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1014.2" y="1957" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1017.21" y="1967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.net.URI.&lt;init&gt; (9 samples, 0.11%)</title><rect x="714.6" y="4549" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="717.60" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="987.7" y="2853" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="833.5" y="4053" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="836.52" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (503 samples, 6.14%)</title><rect x="950.7" y="3925" width="72.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="953.72" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (13 samples, 0.16%)</title><rect x="760.2" y="3701" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken (3 samples, 0.04%)</title><rect x="89.9" y="4293" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="92.90" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="982.7" y="3237" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="985.68" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="995.9" y="3269" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="998.92" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="909.7" y="3829" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="912.69" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (4 samples, 0.05%)</title><rect x="889.1" y="3957" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.10" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="991.5" y="2597" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.46" y="2607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="950.1" y="3717" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="953.14" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (5 samples, 0.06%)</title><rect x="819.6" y="4085" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="822.56" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="976.5" y="3109" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.49" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="1004.3" y="2677" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.28" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1015.2" y="2021" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.22" y="2031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="995.2" y="2677" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="998.20" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="995.2" y="2757" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="998.20" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="783.3" y="4117" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.28" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeMatchingMethod (2 samples, 0.02%)</title><rect x="969.6" y="3701" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.58" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="982.4" y="3013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="985.39" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (7 samples, 0.09%)</title><rect x="1012.8" y="2421" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.77" y="2431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="980.2" y="3333" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="983.23" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (6 samples, 0.07%)</title><rect x="900.2" y="3413" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="903.18" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.StreamDecoder.forInputStreamReader (5 samples, 0.06%)</title><rect x="79.8" y="4581" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="82.83" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>nrepl.middleware.interruptible-eval/interruptible-eval/fn--5173/fn--5177 (2,321 samples, 28.32%)</title><rect x="700.2" y="4949" width="334.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="703.20" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >nrepl.middleware.interruptible-eval/interrupt..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (15 samples, 0.18%)</title><rect x="941.8" y="3669" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="944.79" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (18 samples, 0.22%)</title><rect x="964.7" y="3413" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (7 samples, 0.09%)</title><rect x="962.1" y="3525" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>LIR_Assembler::emit_op1(LIR_Op1*) (2 samples, 0.02%)</title><rect x="1175.9" y="4805" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text text-anchor="" x="1178.89" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="1016.9" y="1733" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="1743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseIdealLoop::build_and_optimize(bool, bool) (32 samples, 0.39%)</title><rect x="1166.0" y="4853" width="4.6" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text text-anchor="" x="1168.96" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (5 samples, 0.06%)</title><rect x="784.9" y="4133" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="787.86" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1001.3" y="2661" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.25" y="2671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="971.6" y="3173" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="974.59" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.&lt;init&gt; (11 samples, 0.13%)</title><rect x="192.0" y="4565" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="194.98" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="846.0" y="4053" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="849.05" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (15 samples, 0.18%)</title><rect x="762.5" y="3781" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.55" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="859.3" y="3589" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="862.29" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="978.1" y="2901" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (6 samples, 0.07%)</title><rect x="376.8" y="4853" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="379.84" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (27 samples, 0.33%)</title><rect x="779.1" y="4277" width="3.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="856.8" y="3877" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="859.85" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (5 samples, 0.06%)</title><rect x="882.2" y="3541" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="885.19" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="817.4" y="3733" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.40" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="860.7" y="3653" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="863.73" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (27 samples, 0.33%)</title><rect x="1015.9" y="2149" width="3.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.94" y="2159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="1019.2" y="1253" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.25" y="1263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (3 samples, 0.04%)</title><rect x="172.7" y="3557" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="865.9" y="3461" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$ArrayNode.find (2 samples, 0.02%)</title><rect x="282.3" y="4469" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="285.25" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="817.4" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="820.40" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="929.6" y="3381" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="932.55" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/subscribe--11925/fn--11930 (74 samples, 0.90%)</title><rect x="482.8" y="4197" width="10.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="485.81" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (3 samples, 0.04%)</title><rect x="855.8" y="3765" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="858.84" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="960.8" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="963.80" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="988.9" y="3221" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="1008.2" y="2485" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1011.16" y="2495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentVector$TransientVector.persistent (2 samples, 0.02%)</title><rect x="99.4" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="102.41" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (16 samples, 0.20%)</title><rect x="986.6" y="3301" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="989.57" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.access$400 (3 samples, 0.04%)</title><rect x="354.1" y="4437" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="357.09" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.multiply (2 samples, 0.02%)</title><rect x="951.3" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="954.29" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="839.9" y="3701" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="842.86" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="898.5" y="3909" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="901.46" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="926.5" y="3525" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="929.53" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (5 samples, 0.06%)</title><rect x="990.3" y="2997" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="993.31" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="974.8" y="3637" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (12 samples, 0.15%)</title><rect x="956.3" y="3461" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="959.33" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="861.7" y="3557" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="864.74" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="757.4" y="3125" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.36" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JVM_IHashCode (4 samples, 0.05%)</title><rect x="323.3" y="4405" width="0.6" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text text-anchor="" x="326.28" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.ReflectionFactory.copyMethod (2 samples, 0.02%)</title><rect x="797.5" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="800.53" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (37 samples, 0.45%)</title><rect x="749.0" y="3285" width="5.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="843.3" y="3685" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.31" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (34 samples, 0.41%)</title><rect x="851.5" y="3893" width="4.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="854.52" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.FileDispatcherImpl.writev0 (72 samples, 0.88%)</title><rect x="681.2" y="4501" width="10.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="684.20" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__psynch_cvsignal (16 samples, 0.20%)</title><rect x="378.7" y="4693" width="2.3" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text text-anchor="" x="381.71" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.misc.Unsafe.unpark (57 samples, 0.70%)</title><rect x="484.0" y="3781" width="8.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="486.96" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (4 samples, 0.05%)</title><rect x="330.1" y="4517" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="333.05" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>vframeStreamCommon::fill_from_frame() (5 samples, 0.06%)</title><rect x="139.3" y="4565" width="0.7" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text text-anchor="" x="142.29" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.DelegatingMethodAccessorImpl (2 samples, 0.02%)</title><rect x="822.7" y="3733" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (8,196 samples, 100.00%)</title><rect x="10.0" y="5045" width="1180.0" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="5055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >all</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (5 samples, 0.06%)</title><rect x="806.2" y="3749" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="809.17" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (8 samples, 0.10%)</title><rect x="749.2" y="2037" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Murmur3.hashUnordered (4 samples, 0.05%)</title><rect x="313.8" y="4373" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="316.78" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="835.4" y="3669" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="838.40" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (18 samples, 0.22%)</title><rect x="899.8" y="3861" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="902.75" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.UTF_8$Decoder.decodeArrayLoop (8 samples, 0.10%)</title><rect x="81.4" y="4501" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="84.41" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (6 samples, 0.07%)</title><rect x="968.4" y="3573" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.43" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (126 samples, 1.54%)</title><rect x="827.6" y="4213" width="18.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="830.62" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="880.5" y="3813" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (5 samples, 0.06%)</title><rect x="770.5" y="3765" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (4 samples, 0.05%)</title><rect x="981.2" y="3045" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="984.24" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1005.6" y="2453" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1008.57" y="2463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (81 samples, 0.99%)</title><rect x="911.3" y="3989" width="11.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="914.27" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (12 samples, 0.15%)</title><rect x="1004.1" y="2949" width="1.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.13" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (12 samples, 0.15%)</title><rect x="1004.1" y="2837" width="1.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.13" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="988.9" y="3125" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="815.0" y="3893" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="817.95" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="994.2" y="2821" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="997.20" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (19 samples, 0.23%)</title><rect x="172.7" y="4181" width="2.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="898.5" y="3829" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="901.46" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.invoke (3 samples, 0.04%)</title><rect x="326.2" y="4549" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="329.16" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (7 samples, 0.09%)</title><rect x="922.9" y="3765" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="946.3" y="3493" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="1008.9" y="2757" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>VM_Operation::evaluate() (10 samples, 0.12%)</title><rect x="1182.2" y="4933" width="1.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text text-anchor="" x="1185.23" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush (2 samples, 0.02%)</title><rect x="694.0" y="4661" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="697.01" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.&lt;init&gt; (2 samples, 0.02%)</title><rect x="106.6" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="109.61" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (274 samples, 3.34%)</title><rect x="748.4" y="4485" width="39.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.44" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >che..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="885.1" y="3461" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="888.07" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Monitor::ILock(Thread*) (4 samples, 0.05%)</title><rect x="1058.3" y="4933" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text text-anchor="" x="1061.27" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="997.4" y="2933" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1000.36" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (2 samples, 0.02%)</title><rect x="763.6" y="3573" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.55" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="823.7" y="3813" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="826.73" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="811.4" y="3813" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="814.35" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="968.7" y="3253" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="971.71" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.gt (3 samples, 0.04%)</title><rect x="828.6" y="3925" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="831.63" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="872.7" y="3797" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.misc.Unsafe.unpark (35 samples, 0.43%)</title><rect x="500.2" y="4405" width="5.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="503.23" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (5 samples, 0.06%)</title><rect x="823.6" y="3957" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="826.59" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureExplicitCapacity (2 samples, 0.02%)</title><rect x="798.1" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="801.11" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap$TransientArrayMap.doAssoc (6 samples, 0.07%)</title><rect x="32.2" y="5013" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="35.17" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.find (3 samples, 0.04%)</title><rect x="315.1" y="4469" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="318.08" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="762.8" y="3365" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.83" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (13 samples, 0.16%)</title><rect x="1018.0" y="1797" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.95" y="1807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="993.9" y="2837" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.91" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (6 samples, 0.07%)</title><rect x="755.5" y="3349" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.49" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>byte_streams$to_input_stream.invokeStatic (14 samples, 0.17%)</title><rect x="477.9" y="4437" width="2.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="480.91" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (31 samples, 0.38%)</title><rect x="783.1" y="4389" width="4.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.13" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.DelegatingMethodAccessorImpl (101 samples, 1.23%)</title><rect x="172.5" y="4613" width="14.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.55" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="918.6" y="3317" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="921.61" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (13 samples, 0.16%)</title><rect x="770.5" y="3893" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="891.4" y="3749" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.40" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="817.3" y="3813" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.25" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="840.9" y="3925" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="843.87" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="809.6" y="4021" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="812.62" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.success (80 samples, 0.98%)</title><rect x="482.5" y="4437" width="11.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="485.52" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (9 samples, 0.11%)</title><rect x="932.6" y="3477" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="935.58" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (115 samples, 1.40%)</title><rect x="1004.1" y="3061" width="16.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.13" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="996.2" y="2789" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.21" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="901.3" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="904.33" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="987.7" y="3109" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="837.0" y="4021" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="839.98" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (5 samples, 0.06%)</title><rect x="822.0" y="4085" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="822.0" y="3893" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (8 samples, 0.10%)</title><rect x="920.5" y="3557" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.48" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__psynch_cvsignal (2 samples, 0.02%)</title><rect x="371.4" y="4709" width="0.3" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text text-anchor="" x="374.37" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (2 samples, 0.02%)</title><rect x="295.5" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="298.50" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/subscribe--11925/fn--11930 (75 samples, 0.92%)</title><rect x="482.7" y="4293" width="10.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="485.66" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="1008.9" y="2805" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="984.3" y="3013" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="987.26" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="843.6" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="846.60" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="763.8" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.84" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="846.3" y="3893" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="849.34" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="1021.0" y="3173" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1023.98" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="848.1" y="3813" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.06" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="992.6" y="3189" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.61" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="976.9" y="3317" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.92" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.DefaultHttpRequest.&lt;init&gt; (2 samples, 0.02%)</title><rect x="720.4" y="4133" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="723.36" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="986.7" y="3045" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="989.71" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (6 samples, 0.07%)</title><rect x="755.5" y="3301" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.49" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="997.8" y="2885" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="914.0" y="3669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="917.00" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.aleph.dirigiste.Pool$1.run (56 samples, 0.68%)</title><rect x="1048.5" y="5013" width="8.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1051.47" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.ByteArrayInputStream.read (2 samples, 0.02%)</title><rect x="83.6" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="86.57" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Unique_Node_List::remove(Node*) (2 samples, 0.02%)</title><rect x="1171.3" y="4789" width="0.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text text-anchor="" x="1174.28" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="952.2" y="3301" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="955.16" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (13 samples, 0.16%)</title><rect x="770.5" y="3909" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (7 samples, 0.09%)</title><rect x="785.7" y="4165" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.72" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="1006.9" y="2853" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1009.87" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (4 samples, 0.05%)</title><rect x="351.4" y="4437" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="354.36" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util$4.equiv (3 samples, 0.04%)</title><rect x="284.3" y="4405" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="287.27" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.GeneratedMethodAccessor49 (3 samples, 0.04%)</title><rect x="801.7" y="4453" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="804.71" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (35 samples, 0.43%)</title><rect x="944.2" y="3717" width="5.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="947.24" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (14 samples, 0.17%)</title><rect x="983.0" y="3253" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="985.97" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="962.2" y="3061" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="965.24" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="774.6" y="3701" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="864.8" y="3557" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="867.77" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (10 samples, 0.12%)</title><rect x="813.5" y="4069" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (3 samples, 0.04%)</title><rect x="844.3" y="4005" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="847.32" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (4 samples, 0.05%)</title><rect x="322.1" y="4517" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="325.13" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (4 samples, 0.05%)</title><rect x="305.3" y="4517" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="308.29" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.StreamDecoder.implRead (4 samples, 0.05%)</title><rect x="746.0" y="4437" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="748.99" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="983.3" y="3077" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="986.26" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (22 samples, 0.27%)</title><rect x="993.6" y="3317" width="3.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.62" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (6 samples, 0.07%)</title><rect x="947.7" y="3445" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (42 samples, 0.51%)</title><rect x="749.0" y="3301" width="6.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="749.3" y="677" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead (263 samples, 3.21%)</title><rect x="474.5" y="4837" width="37.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.46" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (2 samples, 0.02%)</title><rect x="327.3" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="330.32" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="994.5" y="2693" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.49" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (15 samples, 0.18%)</title><rect x="1002.0" y="3061" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.97" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (6 samples, 0.07%)</title><rect x="890.4" y="3781" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="893.39" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (5 samples, 0.06%)</title><rect x="945.1" y="3301" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="948.10" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1014.2" y="2021" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1017.21" y="2031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (17 samples, 0.21%)</title><rect x="996.8" y="3109" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.79" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="873.3" y="4069" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="876.26" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.gt (2 samples, 0.02%)</title><rect x="970.7" y="2965" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="973.73" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="943.4" y="3445" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="946.37" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.GeneratedMethodAccessor49 (2 samples, 0.02%)</title><rect x="895.4" y="3877" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="898.43" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="76.5" y="4661" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="79.52" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.java.io/fn--11446/G--11422--11453 (8 samples, 0.10%)</title><rect x="743.1" y="4517" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="746.11" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="847.1" y="4053" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="850.06" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="860.2" y="3701" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="863.16" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="869.8" y="4085" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.80" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="937.0" y="3461" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="940.04" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="749.3" y="613" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.grow (13 samples, 0.16%)</title><rect x="195.3" y="4517" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="198.29" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="964.7" y="3157" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="865.9" y="3653" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.ATransientMap.assoc (5 samples, 0.06%)</title><rect x="338.8" y="4405" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="341.83" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (16 samples, 0.20%)</title><rect x="993.6" y="3253" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="996.62" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="890.0" y="3621" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.concurrent.FastThreadLocal.get (2 samples, 0.02%)</title><rect x="514.6" y="4789" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="517.62" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="946.3" y="3445" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/conj--5407 (2 samples, 0.02%)</title><rect x="509.2" y="4533" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="512.15" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (15 samples, 0.18%)</title><rect x="838.6" y="3813" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="841.56" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="891.7" y="3701" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.69" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="1004.3" y="2757" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.28" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName (3 samples, 0.04%)</title><rect x="769.7" y="4085" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="772.74" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_pthread_cond_wait (39 samples, 0.48%)</title><rect x="463.8" y="4853" width="5.6" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text text-anchor="" x="466.80" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="890.0" y="3653" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (211 samples, 2.57%)</title><rect x="748.6" y="4309" width="30.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.58" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ch..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="846.6" y="3925" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="849.63" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="757.7" y="3269" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.65" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>byte_streams$eval15443$f__15332__auto____15444$this__12089__auto____15447$fn__15454.invoke (5 samples, 0.06%)</title><rect x="368.1" y="4917" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="371.06" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>CodeCache::allocate(int, bool) (4 samples, 0.05%)</title><rect x="1107.5" y="4805" width="0.6" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text text-anchor="" x="1110.50" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (26 samples, 0.32%)</title><rect x="889.8" y="4181" width="3.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.82" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (2 samples, 0.02%)</title><rect x="176.3" y="4293" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="179.29" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (24 samples, 0.29%)</title><rect x="816.0" y="4101" width="3.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="818.96" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (5 samples, 0.06%)</title><rect x="785.7" y="4133" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.72" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="953.7" y="3173" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="754.3" y="2885" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="822.0" y="3957" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/re-matcher (2 samples, 0.02%)</title><rect x="728.6" y="4357" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="731.57" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (4 samples, 0.05%)</title><rect x="765.0" y="3813" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (10 samples, 0.12%)</title><rect x="983.5" y="3221" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.54" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="76.2" y="4741" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="79.23" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.nio.DirectByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="507.3" y="4293" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="510.28" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (2 samples, 0.02%)</title><rect x="327.3" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="330.32" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (3 samples, 0.04%)</title><rect x="302.1" y="4501" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="305.12" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (3 samples, 0.04%)</title><rect x="751.3" y="2597" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="754.32" y="2607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="995.2" y="2661" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="998.20" y="2671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="954.5" y="3493" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="957.46" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.net.URI$Parser.parseHierarchical (6 samples, 0.07%)</title><rect x="714.9" y="4517" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="717.89" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="954.5" y="3349" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="957.46" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http/eval18308/request--18312/fn--18314/fn--18317/fn--18336 (4 samples, 0.05%)</title><rect x="377.7" y="4869" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="380.71" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (5 samples, 0.06%)</title><rect x="964.7" y="3397" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (9 samples, 0.11%)</title><rect x="932.6" y="3557" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="935.58" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (6 samples, 0.07%)</title><rect x="892.6" y="3845" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="895.55" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.formatTo (2 samples, 0.02%)</title><rect x="895.4" y="3845" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="898.43" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (33 samples, 0.40%)</title><rect x="902.3" y="3829" width="4.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="905.34" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="865.6" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyRequest.get_STAR_ (2 samples, 0.02%)</title><rect x="76.8" y="4693" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="79.80" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="972.5" y="3285" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="975.46" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (12 samples, 0.15%)</title><rect x="973.0" y="3365" width="1.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="976.03" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (2 samples, 0.02%)</title><rect x="175.4" y="4165" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="178.42" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Curly.match (8 samples, 0.10%)</title><rect x="794.9" y="4405" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="797.94" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.add (2 samples, 0.02%)</title><rect x="130.1" y="4661" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="133.07" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (2 samples, 0.02%)</title><rect x="344.7" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="347.74" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (23 samples, 0.28%)</title><rect x="172.7" y="4261" width="3.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (170 samples, 2.07%)</title><rect x="996.8" y="3301" width="24.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.79" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="979.8" y="3173" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client-middleware/wrap-exceptions/fn--17751 (53 samples, 0.65%)</title><rect x="717.8" y="4469" width="7.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="720.77" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="842.4" y="3765" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="845.45" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="994.9" y="2725" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (5 samples, 0.06%)</title><rect x="838.6" y="3717" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="841.56" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (5 samples, 0.06%)</title><rect x="806.2" y="3765" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="809.17" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.append (2 samples, 0.02%)</title><rect x="738.9" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="741.93" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="833.7" y="3797" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="836.67" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimePrintContext.&lt;init&gt; (3 samples, 0.04%)</title><rect x="799.4" y="4485" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="802.40" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="967.6" y="3365" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.get (20 samples, 0.24%)</title><rect x="301.7" y="4533" width="2.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="304.69" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="979.7" y="3509" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="982.66" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="953.7" y="3013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (10 samples, 0.12%)</title><rect x="1007.4" y="2709" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.44" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.AFn.run (188 samples, 2.29%)</title><rect x="672.0" y="4901" width="27.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="674.99" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (28 samples, 0.34%)</title><rect x="922.9" y="4085" width="4.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (3 samples, 0.04%)</title><rect x="758.1" y="3269" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.08" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="818.7" y="3829" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="821.69" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="829.3" y="3925" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="832.35" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseIdealLoop::build_loop_late_post(Node*) (9 samples, 0.11%)</title><rect x="1168.1" y="4821" width="1.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text text-anchor="" x="1171.12" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="92.6" y="4325" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="95.64" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="969.6" y="3717" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.58" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RestFn.invoke (4 samples, 0.05%)</title><rect x="77.8" y="4725" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="80.81" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::PlatformEvent::park(long) (40 samples, 0.49%)</title><rect x="1050.1" y="4917" width="5.7" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text text-anchor="" x="1053.06" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="903.6" y="3605" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="906.64" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="865.9" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="327.3" y="4453" width="0.3" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text text-anchor="" x="330.32" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="989.4" y="3077" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.45" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client-middleware/wrap-request/fn--18254/fn--18255 (65 samples, 0.79%)</title><rect x="725.8" y="4453" width="9.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="728.83" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="1008.9" y="2469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (2 samples, 0.02%)</title><rect x="341.4" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="344.43" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (6 samples, 0.07%)</title><rect x="985.4" y="3317" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="988.41" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="996.5" y="2933" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.50" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$BmpCharProperty.match (2 samples, 0.02%)</title><rect x="310.5" y="4293" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="313.47" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (9 samples, 0.11%)</title><rect x="932.6" y="3493" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="935.58" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="959.9" y="3413" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="962.93" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.SocketChannelImpl.read (94 samples, 1.15%)</title><rect x="515.1" y="4821" width="13.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="518.06" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="1000.7" y="2709" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1003.68" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="952.2" y="3285" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="955.16" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_jit_write_protect_np (4 samples, 0.05%)</title><rect x="11.3" y="4981" width="0.6" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text text-anchor="" x="14.30" y="4991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client-middleware/wrap-exceptions/fn--17751/fn--17786 (3 samples, 0.04%)</title><rect x="492.6" y="3973" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="495.60" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="891.7" y="3685" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="894.69" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.server/ring-handler/handle-request--16628 (49 samples, 0.60%)</title><rect x="499.4" y="4533" width="7.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="502.36" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (4 samples, 0.05%)</title><rect x="762.7" y="3605" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.69" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken (9 samples, 0.11%)</title><rect x="109.2" y="4549" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="112.20" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.assoc (25 samples, 0.31%)</title><rect x="316.9" y="4453" width="3.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="319.95" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="919.6" y="3637" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="937.0" y="3381" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="940.04" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (8 samples, 0.10%)</title><rect x="862.8" y="3829" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="865.75" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$BmpCharProperty.match (17 samples, 0.21%)</title><rect x="794.1" y="4469" width="2.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="797.08" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="933.0" y="3365" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="936.01" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="847.2" y="3909" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="850.20" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="974.8" y="3589" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.java.io/fn--11548/fn--11549 (2 samples, 0.02%)</title><rect x="80.5" y="4661" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="83.55" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="869.4" y="3749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.37" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (8 samples, 0.10%)</title><rect x="862.8" y="3813" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="865.75" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (161 samples, 1.96%)</title><rect x="850.4" y="4357" width="23.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="853.37" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="1010.2" y="2581" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1013.18" y="2591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gettimeofday (25 samples, 0.31%)</title><rect x="386.5" y="4853" width="3.6" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text text-anchor="" x="389.49" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.swap (2 samples, 0.02%)</title><rect x="329.6" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="332.62" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="776.8" y="3877" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="779.80" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="937.2" y="3173" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="940.18" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="839.6" y="3717" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="842.57" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1000.8" y="2613" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1003.82" y="2623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="946.3" y="3349" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="892.0" y="3653" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.98" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="1005.9" y="2901" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1008.86" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="939.5" y="3525" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.49" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (5 samples, 0.06%)</title><rect x="895.0" y="3941" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="898.00" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="362.6" y="4581" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="365.59" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="988.9" y="3413" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (5 samples, 0.06%)</title><rect x="841.3" y="3749" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="844.30" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (17 samples, 0.21%)</title><rect x="996.8" y="3141" width="2.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.79" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.aleph.dirigiste.Pool$2.handleObject (3 samples, 0.04%)</title><rect x="713.6" y="4501" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="716.59" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="932.7" y="3445" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="935.72" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (6 samples, 0.07%)</title><rect x="864.3" y="3669" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="867.33" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (5 samples, 0.06%)</title><rect x="896.9" y="3477" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="899.87" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="1009.3" y="2661" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1012.31" y="2671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (19 samples, 0.23%)</title><rect x="172.7" y="4197" width="2.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="757.7" y="3237" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.65" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util$4.equiv (2 samples, 0.02%)</title><rect x="68.6" y="5013" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="71.60" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="887.2" y="3717" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="890.23" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (5 samples, 0.06%)</title><rect x="768.3" y="3845" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="771.30" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (4 samples, 0.05%)</title><rect x="336.4" y="4533" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="339.39" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Matcher.lookingAt (359 samples, 4.38%)</title><rect x="225.2" y="4549" width="51.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="228.24" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (12 samples, 0.15%)</title><rect x="854.5" y="3861" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="857.54" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (3 samples, 0.04%)</title><rect x="761.7" y="3621" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="764.68" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.KQueueArrayWrapper.interrupt (16 samples, 0.20%)</title><rect x="721.2" y="4069" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="724.22" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.ReflectionFactory.copyMethod (57 samples, 0.70%)</title><rect x="145.0" y="4597" width="8.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="148.05" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.internal.DefaultPriorityQueue.peek (2 samples, 0.02%)</title><rect x="671.4" y="4901" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="674.41" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="946.8" y="3397" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="949.83" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (5 samples, 0.06%)</title><rect x="760.2" y="3317" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="898.7" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="901.74" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (286 samples, 3.49%)</title><rect x="980.5" y="3637" width="41.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="983.52" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="976.3" y="3285" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.34" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (5 samples, 0.06%)</title><rect x="996.9" y="2997" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.93" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="1011.5" y="2069" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.getMethods (2 samples, 0.02%)</title><rect x="821.7" y="4245" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="824.72" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (5 samples, 0.06%)</title><rect x="835.3" y="3797" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="838.25" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (15 samples, 0.18%)</title><rect x="846.9" y="4149" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.91" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="883.9" y="3893" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="886.91" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (16 samples, 0.20%)</title><rect x="911.7" y="3749" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="914.70" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (2 samples, 0.02%)</title><rect x="774.6" y="3765" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (12 samples, 0.15%)</title><rect x="967.6" y="3621" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="946.8" y="3477" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="949.83" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="869.8" y="3957" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.80" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (5 samples, 0.06%)</title><rect x="859.2" y="3701" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="862.15" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (69 samples, 0.84%)</title><rect x="951.1" y="3877" width="10.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="954.15" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="964.7" y="3141" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="924.1" y="3701" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="927.08" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode.tryMatch (26 samples, 0.32%)</title><rect x="378.4" y="4773" width="3.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="381.43" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.netty/write-and-flush (96 samples, 1.17%)</title><rect x="680.0" y="4821" width="13.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="683.05" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="998.9" y="2613" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1001.95" y="2623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="754.3" y="3013" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (2 samples, 0.02%)</title><rect x="747.7" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="750.72" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1005.6" y="2405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1008.57" y="2415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="822.0" y="3845" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuffer.append (2 samples, 0.02%)</title><rect x="84.1" y="4629" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="87.15" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (42 samples, 0.51%)</title><rect x="932.3" y="3765" width="6.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="935.29" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="915.2" y="3365" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="918.16" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (125 samples, 1.53%)</title><rect x="850.7" y="4229" width="18.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="853.66" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.server/ring-handler/process-last-content--16634 (88 samples, 1.07%)</title><rect x="499.2" y="4549" width="12.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="502.22" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.pcequiv (2 samples, 0.02%)</title><rect x="278.8" y="4389" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="281.80" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (3 samples, 0.04%)</title><rect x="771.6" y="3669" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="774.62" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="779.1" y="3861" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="749.3" y="629" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (76 samples, 0.93%)</title><rect x="1009.3" y="2853" width="11.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.31" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (10 samples, 0.12%)</title><rect x="917.7" y="3525" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="920.75" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (8 samples, 0.10%)</title><rect x="869.2" y="4101" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.23" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.append (2 samples, 0.02%)</title><rect x="790.9" y="4389" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="793.91" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="749.3" y="661" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (3 samples, 0.04%)</title><rect x="911.8" y="3621" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="914.84" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (12 samples, 0.15%)</title><rect x="967.6" y="3733" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="1019.2" y="1045" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.25" y="1055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="879.5" y="3477" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="882.45" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (11 samples, 0.13%)</title><rect x="805.3" y="3909" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="808.31" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Curly.match (6 samples, 0.07%)</title><rect x="741.1" y="4421" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="744.09" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="841.3" y="3861" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="844.30" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="908.0" y="3701" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="910.96" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (5 samples, 0.06%)</title><rect x="878.6" y="3621" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="881.59" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (14 samples, 0.17%)</title><rect x="762.7" y="3749" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.69" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="776.8" y="3829" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="779.80" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (7 samples, 0.09%)</title><rect x="832.2" y="3829" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="835.23" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (5 samples, 0.06%)</title><rect x="754.3" y="3221" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="904.9" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="907.93" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="847.2" y="3989" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="850.20" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="959.1" y="3637" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.07" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="1000.5" y="2821" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1003.53" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (101 samples, 1.23%)</title><rect x="1006.1" y="3013" width="14.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.find (5 samples, 0.06%)</title><rect x="296.6" y="4485" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="299.65" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="1019.0" y="1269" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.96" y="1279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (15 samples, 0.18%)</title><rect x="834.8" y="3877" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="837.82" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/subscribe--11925/fn--11930 (90 samples, 1.10%)</title><rect x="481.2" y="4501" width="13.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="484.22" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="992.2" y="2741" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.18" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="953.7" y="2853" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="809.2" y="3957" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="812.19" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (25 samples, 0.31%)</title><rect x="928.7" y="3765" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="931.69" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method.copy (3 samples, 0.04%)</title><rect x="129.2" y="4597" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="132.21" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="898.5" y="3861" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="901.46" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.ChannelOutboundBuffer.removeBytes (2 samples, 0.02%)</title><rect x="673.0" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (4 samples, 0.05%)</title><rect x="183.8" y="4485" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="186.78" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="979.8" y="3301" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Unsafe_Unpark (12 samples, 0.15%)</title><rect x="369.5" y="4789" width="1.7" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text text-anchor="" x="372.50" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="883.9" y="3749" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="886.91" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>byte_streams$to_input_stream.invoke (14 samples, 0.17%)</title><rect x="477.9" y="4453" width="2.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="480.91" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (21 samples, 0.26%)</title><rect x="881.5" y="3957" width="3.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="884.47" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="931.0" y="3461" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="933.99" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="993.9" y="2853" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.91" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentVector$TransientVector.persistent (2 samples, 0.02%)</title><rect x="117.8" y="4565" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="120.84" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="988.3" y="3157" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.29" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="968.4" y="3445" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.43" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="997.8" y="2757" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString2 (2 samples, 0.02%)</title><rect x="764.7" y="3861" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="767.70" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (11 samples, 0.13%)</title><rect x="1018.2" y="1717" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.24" y="1727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="944.0" y="3669" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="946.95" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.add (2 samples, 0.02%)</title><rect x="839.3" y="3493" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="842.28" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (3 samples, 0.04%)</title><rect x="287.9" y="4517" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="290.87" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="755.5" y="3221" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.49" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="933.3" y="3429" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="936.30" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (12 samples, 0.15%)</title><rect x="914.9" y="3637" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="917.87" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (2 samples, 0.02%)</title><rect x="1121.5" y="4837" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text text-anchor="" x="1124.47" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="1016.7" y="1525" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.66" y="1535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="813.1" y="4149" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.08" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (7 samples, 0.09%)</title><rect x="912.3" y="3621" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="915.28" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="990.7" y="2901" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="993.74" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="906.2" y="3557" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="909.23" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="751.9" y="2757" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="754.89" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.MultiFn.getMethod (5 samples, 0.06%)</title><rect x="84.4" y="4645" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="87.43" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (2 samples, 0.02%)</title><rect x="341.4" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="344.43" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="986.7" y="2997" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.71" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="998.8" y="2757" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1001.80" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="952.6" y="3381" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="955.59" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="869.9" y="3733" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.95" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="1007.6" y="2597" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.59" y="2607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (6 samples, 0.07%)</title><rect x="957.2" y="3317" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="960.20" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.KQueueSelectorImpl.wakeup (16 samples, 0.20%)</title><rect x="721.2" y="4101" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="724.22" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (9 samples, 0.11%)</title><rect x="932.6" y="3653" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="935.58" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.misc.Unsafe.unpark (12 samples, 0.15%)</title><rect x="371.9" y="4741" width="1.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="374.95" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (17 samples, 0.21%)</title><rect x="1017.4" y="1973" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="908.8" y="3685" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (5 samples, 0.06%)</title><rect x="1006.1" y="2565" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="968.7" y="3237" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="971.71" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (5 samples, 0.06%)</title><rect x="1006.1" y="2789" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hasheq (8 samples, 0.10%)</title><rect x="343.0" y="4405" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="346.01" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Branch.match (6 samples, 0.07%)</title><rect x="795.2" y="4341" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="798.23" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="863.9" y="3797" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="866.90" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (32 samples, 0.39%)</title><rect x="980.7" y="3397" width="4.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="983.66" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="985.4" y="2981" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="988.41" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="947.7" y="3269" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="1016.5" y="1765" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.51" y="1775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="872.7" y="3749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (12 samples, 0.15%)</title><rect x="756.8" y="3541" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (6 samples, 0.07%)</title><rect x="947.7" y="3429" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="1004.9" y="2629" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.85" y="2639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString (3 samples, 0.04%)</title><rect x="106.0" y="4517" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="109.03" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentVector$ChunkedSeq.first (2 samples, 0.02%)</title><rect x="717.3" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="720.34" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/persistent! (2 samples, 0.02%)</title><rect x="99.4" y="4485" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="102.41" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="946.8" y="3541" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.83" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (5 samples, 0.06%)</title><rect x="975.6" y="3237" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="978.62" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="749.3" y="837" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (9 samples, 0.11%)</title><rect x="987.6" y="3173" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.57" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="765.0" y="3461" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="744.3" y="4549" width="0.2" height="15.0" fill="rgb(244,115,115)" rx="2" ry="2" />
<text text-anchor="" x="747.26" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1000.8" y="2645" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1003.82" y="2655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (25 samples, 0.31%)</title><rect x="172.7" y="4293" width="3.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DebugInformationRecorder::describe_scope(int, ciMethod*, int, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (2 samples, 0.02%)</title><rect x="1108.8" y="4821" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text text-anchor="" x="1111.80" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (6 samples, 0.07%)</title><rect x="985.4" y="3333" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="988.41" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="998.4" y="2821" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1001.37" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="822.7" y="4021" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (2 samples, 0.02%)</title><rect x="1108.1" y="4837" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text text-anchor="" x="1111.08" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ConnectionGraph::add_field_uses_to_worklist(FieldNode*) (279 samples, 3.40%)</title><rect x="1124.6" y="4805" width="40.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text text-anchor="" x="1127.64" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Con..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.pcequiv (2 samples, 0.02%)</title><rect x="336.7" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="339.67" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="871.5" y="3557" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.53" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="816.4" y="3845" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="819.39" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="861.6" y="3925" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="864.60" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (5 samples, 0.06%)</title><rect x="749.3" y="1797" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (8 samples, 0.10%)</title><rect x="920.5" y="3509" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.48" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.auto_flatten_seq.AutoFlattenSeq.conj_flat (5 samples, 0.06%)</title><rect x="306.9" y="4533" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="309.87" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (29 samples, 0.35%)</title><rect x="975.5" y="3541" width="4.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="978.48" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="963.7" y="3221" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="966.67" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (12 samples, 0.15%)</title><rect x="973.0" y="3381" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="976.03" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (5 samples, 0.06%)</title><rect x="182.5" y="4501" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="185.48" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="863.5" y="3653" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="866.47" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (6 samples, 0.07%)</title><rect x="815.0" y="3925" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="817.95" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll.Segment.toString (5 samples, 0.06%)</title><rect x="307.9" y="4517" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="310.88" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="833.7" y="3877" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="836.67" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.success (71 samples, 0.87%)</title><rect x="483.2" y="4149" width="10.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="486.24" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="939.8" y="3621" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.Recycler.get (2 samples, 0.02%)</title><rect x="513.9" y="4725" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="516.90" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="935.2" y="3509" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="938.17" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Var.getRawRoot (3 samples, 0.04%)</title><rect x="111.5" y="4565" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="114.50" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>trampoline_stub_Relocation::get_trampoline_for(unsigned char*, nmethod*) (3 samples, 0.04%)</title><rect x="1175.0" y="4773" width="0.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text text-anchor="" x="1178.03" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (8 samples, 0.10%)</title><rect x="884.6" y="3813" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="887.63" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="984.3" y="3029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="987.26" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (5 samples, 0.06%)</title><rect x="1026.9" y="4293" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1029.88" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.append (35 samples, 0.43%)</title><rect x="220.2" y="4485" width="5.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="223.20" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (10 samples, 0.12%)</title><rect x="749.2" y="2245" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeMatchingMethod (40 samples, 0.49%)</title><rect x="134.4" y="4661" width="5.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="137.39" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="1001.1" y="2757" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.conj (8 samples, 0.10%)</title><rect x="343.0" y="4517" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="346.01" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.doEquiv (2 samples, 0.02%)</title><rect x="326.6" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="329.60" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="880.5" y="3653" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (3 samples, 0.04%)</title><rect x="277.9" y="4517" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="280.93" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.formatTo (2 samples, 0.02%)</title><rect x="833.8" y="3509" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="836.81" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.copyMethods (2 samples, 0.02%)</title><rect x="858.9" y="3717" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="861.86" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.02%)</title><rect x="1171.3" y="4805" width="0.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text text-anchor="" x="1174.28" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="822.7" y="3973" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="923.9" y="3797" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="926.94" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util$4.equiv (3 samples, 0.04%)</title><rect x="322.3" y="4469" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="325.28" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeMatchingMethod (2 samples, 0.02%)</title><rect x="853.7" y="3573" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="856.68" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-result (124 samples, 1.51%)</title><rect x="289.7" y="4565" width="17.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="292.74" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (7 samples, 0.09%)</title><rect x="841.3" y="3941" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="844.30" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="749.3" y="1221" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="985.4" y="3173" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="988.41" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Branch.match (10 samples, 0.12%)</title><rect x="794.7" y="4437" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="797.65" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (16 samples, 0.20%)</title><rect x="986.6" y="3333" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="989.57" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="988.0" y="2901" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.01" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="865.6" y="3397" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (7 samples, 0.09%)</title><rect x="780.5" y="4117" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="783.54" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (26 samples, 0.32%)</title><rect x="889.8" y="4197" width="3.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="892.82" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="898.7" y="3637" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="901.74" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (16 samples, 0.20%)</title><rect x="899.8" y="3637" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="902.75" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (5 samples, 0.06%)</title><rect x="949.4" y="3573" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>I2C/C2I adapters (8 samples, 0.10%)</title><rect x="1037.0" y="4965" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1039.96" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (42 samples, 0.51%)</title><rect x="749.0" y="3333" width="6.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="954.6" y="3237" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="957.60" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/cat-parse (12 samples, 0.15%)</title><rect x="277.8" y="4581" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="280.79" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.locks.LockSupport.parkNanos (602 samples, 7.35%)</title><rect x="384.8" y="4917" width="86.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="387.76" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="1016.4" y="1909" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.37" y="1919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-message (51 samples, 0.62%)</title><rect x="316.9" y="4549" width="7.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="319.95" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="752.2" y="2757" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.18" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (8 samples, 0.10%)</title><rect x="1006.1" y="2933" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="848.1" y="4021" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.06" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (15 samples, 0.18%)</title><rect x="941.8" y="3653" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="944.79" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="977.6" y="3125" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="980.64" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (5 samples, 0.06%)</title><rect x="760.2" y="3269" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="293.9" y="4357" width="0.3" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text text-anchor="" x="296.91" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (2 samples, 0.02%)</title><rect x="283.1" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="286.12" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeMatchingMethod (2 samples, 0.02%)</title><rect x="822.7" y="3765" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="898.7" y="3653" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="901.74" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (5 samples, 0.06%)</title><rect x="975.6" y="3333" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="978.62" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (2 samples, 0.02%)</title><rect x="764.3" y="3541" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.27" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="997.4" y="2821" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1000.36" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="1010.0" y="2661" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.03" y="2671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="765.3" y="3541" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="768.28" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.format (2 samples, 0.02%)</title><rect x="895.4" y="3861" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="898.43" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.add (3 samples, 0.04%)</title><rect x="288.6" y="4549" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="291.59" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="872.7" y="3813" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="978.4" y="2997" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="981.36" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="930.4" y="3253" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="933.42" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (28 samples, 0.34%)</title><rect x="779.0" y="4341" width="4.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="781.96" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (7 samples, 0.09%)</title><rect x="832.2" y="3845" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="835.23" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="914.0" y="3781" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="917.00" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="987.7" y="2773" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="885.8" y="3733" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="888.79" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (239 samples, 2.92%)</title><rect x="748.6" y="4373" width="34.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.58" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >cl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.find (2 samples, 0.02%)</title><rect x="296.4" y="4453" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="299.36" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="920.8" y="3397" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.77" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (11 samples, 0.13%)</title><rect x="944.7" y="3573" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="947.67" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.addAll (2 samples, 0.02%)</title><rect x="798.4" y="4565" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="801.39" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="840.0" y="3461" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="843.00" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (6 samples, 0.07%)</title><rect x="760.2" y="3445" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="506.4" y="4485" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="509.42" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (9 samples, 0.11%)</title><rect x="890.0" y="3909" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="947.7" y="3157" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="996.2" y="2933" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.21" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/empty? (3 samples, 0.04%)</title><rect x="506.4" y="4501" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="509.42" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (20 samples, 0.24%)</title><rect x="1016.9" y="2005" width="2.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="2015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="757.7" y="3173" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.65" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (8 samples, 0.10%)</title><rect x="760.2" y="3557" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.KQueueArrayWrapper.interrupt (31 samples, 0.38%)</title><rect x="363.0" y="4549" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="366.02" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="931.6" y="3493" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="934.57" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="507.1" y="4437" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="510.14" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="962.1" y="3221" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="920.8" y="3413" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.77" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="824.6" y="4117" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="827.60" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (6 samples, 0.07%)</title><rect x="859.2" y="3749" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="862.15" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PoolThreadCache.allocate (3 samples, 0.04%)</title><rect x="514.2" y="4725" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="517.19" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (5 samples, 0.06%)</title><rect x="949.4" y="3653" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (12 samples, 0.15%)</title><rect x="914.9" y="3717" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="917.87" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="860.4" y="3653" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="863.45" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter$Flags.parse (2 samples, 0.02%)</title><rect x="792.2" y="4485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="795.20" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.grow (2 samples, 0.02%)</title><rect x="804.3" y="3925" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="807.30" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="975.0" y="3349" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.05" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (5 samples, 0.06%)</title><rect x="819.6" y="4117" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="822.56" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (8 samples, 0.10%)</title><rect x="905.4" y="3637" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="908.37" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="822.3" y="3813" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.29" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly (82 samples, 1.00%)</title><rect x="701.5" y="4565" width="11.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="704.50" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client-middleware/wrap-exceptions/fn--17751/fn--17798 (2 samples, 0.02%)</title><rect x="13.2" y="5013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="16.17" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (3 samples, 0.04%)</title><rect x="845.2" y="4069" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="848.19" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="774.6" y="3893" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (5 samples, 0.06%)</title><rect x="1019.0" y="1381" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1021.96" y="1391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="772.3" y="3813" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="775.34" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (21 samples, 0.26%)</title><rect x="749.2" y="2837" width="3.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="995.6" y="2373" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (88 samples, 1.07%)</title><rect x="894.9" y="4005" width="12.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="897.86" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__psynch_cvwait (49 samples, 0.60%)</title><rect x="1040.6" y="4901" width="7.0" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text text-anchor="" x="1043.56" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (3 samples, 0.04%)</title><rect x="755.9" y="3205" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.92" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (6 samples, 0.07%)</title><rect x="887.5" y="3685" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="890.51" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (33 samples, 0.40%)</title><rect x="783.1" y="4437" width="4.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.13" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (2 samples, 0.02%)</title><rect x="812.8" y="3845" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="815.79" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="811.6" y="3861" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="814.64" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.concurrent.DefaultPromise.trySuccess (3 samples, 0.04%)</title><rect x="680.5" y="4485" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.48" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="856.6" y="3861" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="859.56" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (9 samples, 0.11%)</title><rect x="963.4" y="3269" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="966.39" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (6 samples, 0.07%)</title><rect x="801.3" y="4533" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="804.27" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="994.2" y="2901" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="997.20" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (33 samples, 0.40%)</title><rect x="876.1" y="4005" width="4.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="879.14" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="995.5" y="2725" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="998.49" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="947.7" y="3173" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/sub-sequence (3 samples, 0.04%)</title><rect x="276.9" y="4565" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="279.93" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="1008.2" y="2421" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.16" y="2431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (5 samples, 0.06%)</title><rect x="920.8" y="3477" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.77" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (4 samples, 0.05%)</title><rect x="1026.2" y="4213" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1029.16" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="967.9" y="3253" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="970.85" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (5 samples, 0.06%)</title><rect x="1032.2" y="4501" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1035.21" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOfRange (2 samples, 0.02%)</title><rect x="121.0" y="4565" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="124.00" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (6 samples, 0.07%)</title><rect x="760.2" y="3397" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="999.4" y="2949" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.38" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.pcequiv (2 samples, 0.02%)</title><rect x="302.1" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="305.12" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (6 samples, 0.07%)</title><rect x="962.1" y="3509" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (8 samples, 0.10%)</title><rect x="869.2" y="4133" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.23" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="869.2" y="4085" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.23" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (4 samples, 0.05%)</title><rect x="186.2" y="4533" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="189.22" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead (261 samples, 3.18%)</title><rect x="474.5" y="4773" width="37.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.46" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="985.8" y="3221" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="988.85" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (3 samples, 0.04%)</title><rect x="771.6" y="3701" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="774.62" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/conj--5407 (8 samples, 0.10%)</title><rect x="343.0" y="4533" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="346.01" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (7 samples, 0.09%)</title><rect x="985.3" y="3445" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="988.27" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="833.5" y="4021" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="836.52" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (5 samples, 0.06%)</title><rect x="898.6" y="3765" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="901.60" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.chrono.IsoChronology.zonedDateTime (2 samples, 0.02%)</title><rect x="969.6" y="3557" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.58" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="1016.9" y="1973" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="1983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/mapcat (13 samples, 0.16%)</title><rect x="507.0" y="4501" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="509.99" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="953.7" y="2949" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.conj (4 samples, 0.05%)</title><rect x="74.6" y="4581" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="77.64" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (18 samples, 0.22%)</title><rect x="895.7" y="3829" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="898.72" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="959.1" y="3573" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="962.07" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (8 samples, 0.10%)</title><rect x="1000.0" y="3029" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.96" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="856.4" y="3957" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="859.42" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (30 samples, 0.37%)</title><rect x="821.6" y="4341" width="4.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="824.57" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="977.6" y="3093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="980.64" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.MultiFn.invoke (32 samples, 0.39%)</title><rect x="80.5" y="4677" width="4.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="83.55" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (11 samples, 0.13%)</title><rect x="908.4" y="3893" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="911.39" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.JsonReadContext.createChildObjectContext (2 samples, 0.02%)</title><rect x="124.9" y="4613" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="127.89" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="1019.2" y="1029" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.25" y="1039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (7 samples, 0.09%)</title><rect x="900.2" y="3589" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="903.18" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (132 samples, 1.61%)</title><rect x="802.4" y="4389" width="19.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="805.43" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (6 samples, 0.07%)</title><rect x="779.7" y="4005" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.68" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (8 samples, 0.10%)</title><rect x="1011.5" y="2309" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (3 samples, 0.04%)</title><rect x="838.0" y="4037" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="840.99" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (9 samples, 0.11%)</title><rect x="959.8" y="3621" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="962.79" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="1013.2" y="1973" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="1983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="913.3" y="3573" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="916.28" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.formatTo (2 samples, 0.02%)</title><rect x="973.0" y="3205" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="976.03" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="843.6" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="846.60" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (16 samples, 0.20%)</title><rect x="911.7" y="3669" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="914.70" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="1004.3" y="2437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.28" y="2447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="1015.2" y="1989" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.22" y="1999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="1004.3" y="2629" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.28" y="2639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="962.2" y="3157" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="965.24" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Matcher.search (21 samples, 0.26%)</title><rect x="728.9" y="4341" width="3.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="731.86" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (11 samples, 0.13%)</title><rect x="337.0" y="4533" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="339.96" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (6 samples, 0.07%)</title><rect x="864.3" y="3813" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="867.33" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="822.7" y="4005" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="921.1" y="3301" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="924.06" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (220 samples, 2.68%)</title><rect x="989.7" y="3493" width="31.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.73" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ex..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.graph/async-connect/this--12426 (29 samples, 0.35%)</title><rect x="719.6" y="4229" width="4.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="722.64" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (1,428 samples, 17.42%)</title><rect x="825.9" y="4501" width="205.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="828.89" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.lang.LongRange.reduce</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="1011.5" y="2053" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.assoc (3 samples, 0.04%)</title><rect x="499.8" y="4325" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="502.80" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="1003.7" y="2949" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1006.70" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="822.7" y="4181" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="885.5" y="3589" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="888.50" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (16 samples, 0.20%)</title><rect x="938.5" y="3957" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.default.Stream.take (2 samples, 0.02%)</title><rect x="478.2" y="4293" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="481.20" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (19 samples, 0.23%)</title><rect x="989.9" y="3205" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.88" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="784.3" y="3909" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="787.29" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="873.0" y="3893" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.97" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="506.4" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="509.42" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="1008.9" y="2629" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="904.1" y="3573" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="907.07" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="978.4" y="2933" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="981.36" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="953.7" y="3029" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (2 samples, 0.02%)</title><rect x="330.9" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="333.92" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.addAll (2 samples, 0.02%)</title><rect x="831.1" y="3637" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="834.08" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (7 samples, 0.09%)</title><rect x="755.5" y="3397" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.49" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="1010.0" y="2677" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.03" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter$FormatSpecifier.printInteger (8 samples, 0.10%)</title><rect x="790.3" y="4517" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="793.33" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="961.5" y="3797" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="964.52" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="946.3" y="3381" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="506.4" y="4453" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="509.42" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (7 samples, 0.09%)</title><rect x="936.6" y="3509" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="939.61" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand-int (2 samples, 0.02%)</title><rect x="969.3" y="3733" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="972.29" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.MultiFn.getFn (5 samples, 0.06%)</title><rect x="84.4" y="4661" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="87.43" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.DefaultChannelPipeline$HeadContext.write (2 samples, 0.02%)</title><rect x="694.0" y="4629" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="697.01" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (5 samples, 0.06%)</title><rect x="752.8" y="2853" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.76" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="1007.9" y="2293" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.87" y="2303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="753.6" y="3045" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="756.62" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="759.2" y="3349" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.23" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (8 samples, 0.10%)</title><rect x="1011.5" y="2325" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="822.0" y="3797" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (7 samples, 0.09%)</title><rect x="936.6" y="3557" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="939.61" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="901.3" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="904.33" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="973.3" y="3285" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="976.32" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (32 samples, 0.39%)</title><rect x="980.7" y="3349" width="4.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="983.66" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead (263 samples, 3.21%)</title><rect x="474.5" y="4789" width="37.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.46" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clout.core.CompiledRoute.route_matches (2 samples, 0.02%)</title><rect x="74.2" y="4725" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="77.21" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="752.9" y="2693" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.90" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="955.6" y="3301" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="958.61" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentVector$TransientVector.persistent (2 samples, 0.02%)</title><rect x="117.8" y="4581" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="120.84" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="933.9" y="3637" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="936.87" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (54 samples, 0.66%)</title><rect x="951.1" y="3781" width="7.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="954.15" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="817.3" y="3941" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="820.25" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="930.4" y="3269" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="933.42" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.add (2 samples, 0.02%)</title><rect x="874.3" y="4245" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="877.27" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (72 samples, 0.88%)</title><rect x="810.1" y="4213" width="10.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="813.06" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (42 samples, 0.51%)</title><rect x="749.0" y="3349" width="6.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="953.2" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.16" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parker::unpark() (8 samples, 0.10%)</title><rect x="372.1" y="4709" width="1.1" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text text-anchor="" x="375.09" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="843.6" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.60" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (22 samples, 0.27%)</title><rect x="291.5" y="4453" width="3.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="294.47" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.StreamDecoder.read (18 samples, 0.22%)</title><rect x="81.3" y="4565" width="2.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="84.27" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (37 samples, 0.45%)</title><rect x="828.2" y="4101" width="5.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="831.20" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (6 samples, 0.07%)</title><rect x="988.9" y="3381" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="909.4" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="912.40" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.doEquiv (2 samples, 0.02%)</title><rect x="68.6" y="4965" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="71.60" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (5 samples, 0.06%)</title><rect x="938.5" y="3733" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (130 samples, 1.59%)</title><rect x="874.8" y="4277" width="18.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="877.84" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers$LongOps.add (2 samples, 0.02%)</title><rect x="1031.9" y="4485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1034.92" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/listener-exists? (17 samples, 0.21%)</title><rect x="281.5" y="4549" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="284.53" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (9 samples, 0.11%)</title><rect x="890.0" y="3829" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="977.6" y="3173" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="980.64" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (2 samples, 0.02%)</title><rect x="74.9" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="77.93" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-message (46 samples, 0.56%)</title><rect x="298.5" y="4549" width="6.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="301.52" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Object.&lt;init&gt; (3 samples, 0.04%)</title><rect x="193.1" y="4517" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="196.13" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.formatTo (9 samples, 0.11%)</title><rect x="798.7" y="4501" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="801.68" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.KeywordLookupSite$1.get (2 samples, 0.02%)</title><rect x="73.6" y="4789" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="76.64" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/get-parser (2 samples, 0.02%)</title><rect x="279.8" y="4565" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="282.80" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="880.5" y="3589" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/make-node (5 samples, 0.06%)</title><rect x="341.9" y="4549" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="344.86" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.equiv (2 samples, 0.02%)</title><rect x="26.6" y="5013" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="29.56" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="983.7" y="2981" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="986.69" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.DelegatingMethodAccessorImpl (2 samples, 0.02%)</title><rect x="875.9" y="3973" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="878.85" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (15 samples, 0.18%)</title><rect x="932.6" y="3701" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="935.58" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getAsMethodOfAccessibleBase (39 samples, 0.48%)</title><rect x="134.5" y="4645" width="5.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="137.54" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="981.8" y="3061" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="984.82" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="847.1" y="4005" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="850.06" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (12 samples, 0.15%)</title><rect x="1002.0" y="3029" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1004.97" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="842.0" y="3797" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="845.02" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="933.9" y="3493" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="936.87" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.conj (3 samples, 0.04%)</title><rect x="210.0" y="4501" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="212.98" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.first (4 samples, 0.05%)</title><rect x="737.1" y="4533" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="740.06" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (16 samples, 0.20%)</title><rect x="907.7" y="3989" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="910.67" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::WXWriteFromExecSetter::~WXWriteFromExecSetter() (2 samples, 0.02%)</title><rect x="381.6" y="4709" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text text-anchor="" x="384.59" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/swap! (20 samples, 0.24%)</title><rect x="338.5" y="4549" width="2.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="341.55" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.IOUtil.readIntoNativeBuffer (86 samples, 1.05%)</title><rect x="515.5" y="4789" width="12.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="518.49" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="885.1" y="3349" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="888.07" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.ReferenceCountUtil.release (6 samples, 0.07%)</title><rect x="509.9" y="4533" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="512.87" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="938.5" y="3605" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="878.6" y="3525" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="881.59" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="759.2" y="3333" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.23" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (11 samples, 0.13%)</title><rect x="765.0" y="3861" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (9 samples, 0.11%)</title><rect x="805.6" y="3861" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="808.59" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (10 samples, 0.12%)</title><rect x="917.7" y="3589" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="920.75" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="930.4" y="3397" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="933.42" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="923.9" y="3829" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="926.94" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.internal.PlatformDependent.hashCodeAscii (2 samples, 0.02%)</title><rect x="377.4" y="4613" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="380.42" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (12 samples, 0.15%)</title><rect x="914.9" y="3589" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="917.87" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.assoc (2 samples, 0.02%)</title><rect x="65.6" y="4981" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="68.57" y="4991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="1003.7" y="2901" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1006.70" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Compilation::build_hir() (3 samples, 0.04%)</title><rect x="1175.5" y="4853" width="0.4" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text text-anchor="" x="1178.46" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (3 samples, 0.04%)</title><rect x="761.7" y="3637" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="764.68" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (12 samples, 0.15%)</title><rect x="973.0" y="3349" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="976.03" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="818.1" y="3685" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="821.12" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="813.1" y="3989" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.08" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="921.1" y="3317" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="924.06" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.socket.nio.NioSocketChannel.doWrite (24 samples, 0.29%)</title><rect x="673.0" y="4453" width="3.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PSScavenge::invoke_no_policy() (10 samples, 0.12%)</title><rect x="1182.2" y="4869" width="1.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text text-anchor="" x="1185.23" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="983.3" y="3045" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.26" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="952.2" y="3349" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="955.16" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1015.6" y="1957" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.65" y="1967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (11 samples, 0.13%)</title><rect x="965.4" y="3333" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="968.40" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ConnectionGraph::compute_escape() (296 samples, 3.61%)</title><rect x="1122.9" y="4853" width="42.6" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text text-anchor="" x="1125.91" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Conn..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (2 samples, 0.02%)</title><rect x="327.3" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="330.32" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.swap (5 samples, 0.06%)</title><rect x="205.4" y="4597" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="208.37" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="872.7" y="3925" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="984.0" y="2997" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (6 samples, 0.07%)</title><rect x="801.3" y="4517" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="804.27" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1014.2" y="2037" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1017.21" y="2047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (25 samples, 0.31%)</title><rect x="895.7" y="3925" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="898.72" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="977.2" y="3253" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="980.21" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (33 samples, 0.40%)</title><rect x="749.2" y="3189" width="4.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="923.4" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="926.36" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (6 samples, 0.07%)</title><rect x="900.2" y="3573" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="903.18" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (8 samples, 0.10%)</title><rect x="353.8" y="4485" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="356.81" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (65 samples, 0.79%)</title><rect x="1010.8" y="2629" width="9.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="1011.5" y="1989" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="1999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util$4.equiv (3 samples, 0.04%)</title><rect x="356.3" y="4485" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="359.25" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (9 samples, 0.11%)</title><rect x="298.8" y="4453" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="301.81" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="897.3" y="3445" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="900.30" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/subscribe--11925 (3 samples, 0.04%)</title><rect x="368.9" y="4789" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="371.92" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="966.3" y="2997" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="969.27" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.&lt;init&gt; (2 samples, 0.02%)</title><rect x="742.4" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="745.39" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (5 samples, 0.06%)</title><rect x="947.7" y="3317" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="999.5" y="2901" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1002.52" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="960.4" y="3493" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="963.36" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1005.6" y="2501" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1008.57" y="2511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (28 samples, 0.34%)</title><rect x="922.9" y="3925" width="4.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (124 samples, 1.51%)</title><rect x="748.9" y="3973" width="17.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.87" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="1005.9" y="2885" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1008.86" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentVector$TransientVector.persistent (2 samples, 0.02%)</title><rect x="95.4" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="98.38" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="807.6" y="3685" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="810.61" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.concurrent.AbstractScheduledEventExecutor.nextScheduledTaskDeadlineNanos (3 samples, 0.04%)</title><rect x="671.3" y="4933" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="674.27" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="1013.8" y="2197" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1016.78" y="2207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.BufferedReader.read (7 samples, 0.09%)</title><rect x="745.6" y="4517" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="748.56" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (195 samples, 2.38%)</title><rect x="993.3" y="3381" width="28.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="996.33" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="1015.2" y="2085" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.22" y="2095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (34 samples, 0.41%)</title><rect x="969.9" y="3605" width="4.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_jit_write_protect_np (2 samples, 0.02%)</title><rect x="491.9" y="3669" width="0.3" height="15.0" fill="rgb(213,70,70)" rx="2" ry="2" />
<text text-anchor="" x="494.88" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="921.1" y="3349" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="924.06" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (102 samples, 1.24%)</title><rect x="875.0" y="4181" width="14.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="877.99" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (7 samples, 0.09%)</title><rect x="900.2" y="3621" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="903.18" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (1,063 samples, 12.97%)</title><rect x="873.8" y="4309" width="153.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="876.84" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.client/rand..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="1019.2" y="1061" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1022.25" y="1071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Object.hashCode (4 samples, 0.05%)</title><rect x="323.3" y="4421" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="326.28" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (5 samples, 0.06%)</title><rect x="507.1" y="4453" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="510.14" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/success! (81 samples, 0.99%)</title><rect x="482.5" y="4453" width="11.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="485.52" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.SelectorImpl.lockAndDoSelect (584 samples, 7.13%)</title><rect x="529.0" y="4885" width="84.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="532.02" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.nio.c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (7 samples, 0.09%)</title><rect x="843.2" y="3829" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.17" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (126 samples, 1.54%)</title><rect x="827.6" y="4245" width="18.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="830.62" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (5 samples, 0.06%)</title><rect x="326.6" y="4501" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="329.60" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (4 samples, 0.05%)</title><rect x="922.4" y="3781" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="925.35" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (35 samples, 0.43%)</title><rect x="828.5" y="3957" width="5.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="831.48" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="1013.8" y="2181" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1016.78" y="2191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="775.2" y="3749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.21" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (3 samples, 0.04%)</title><rect x="887.9" y="3621" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="890.95" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Listener.onSuccess (42 samples, 0.51%)</title><rect x="362.0" y="4885" width="6.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="365.01" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="935.2" y="3445" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="938.17" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush (91 samples, 1.11%)</title><rect x="680.2" y="4757" width="13.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.19" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PooledByteBufAllocator.newDirectBuffer (8 samples, 0.10%)</title><rect x="513.8" y="4805" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="516.76" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.AbstractCollection.&lt;init&gt; (3 samples, 0.04%)</title><rect x="193.1" y="4533" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="196.13" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/success! (75 samples, 0.92%)</title><rect x="482.7" y="4261" width="10.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="485.66" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="898.5" y="3877" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="901.46" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (2 samples, 0.02%)</title><rect x="295.5" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="298.50" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.gt (2 samples, 0.02%)</title><rect x="301.3" y="4533" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="304.26" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.formatTo (2 samples, 0.02%)</title><rect x="878.0" y="3413" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="881.01" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="1016.9" y="1765" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="1775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="1013.2" y="2165" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="2175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (11 samples, 0.13%)</title><rect x="749.2" y="2421" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (34 samples, 0.41%)</title><rect x="953.5" y="3573" width="4.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.45" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="956.5" y="3285" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="959.48" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="836.5" y="3621" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="839.55" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (3 samples, 0.04%)</title><rect x="855.8" y="3781" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="858.84" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="812.8" y="3861" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="815.79" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (2 samples, 0.02%)</title><rect x="496.1" y="4485" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="499.05" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (4 samples, 0.05%)</title><rect x="758.7" y="3365" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2 (2 samples, 0.02%)</title><rect x="120.3" y="4597" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="123.28" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (3 samples, 0.04%)</title><rect x="499.8" y="4341" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="502.80" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatterBuilder$NumberPrinterParser.format (2 samples, 0.02%)</title><rect x="973.0" y="3173" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="976.03" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="993.0" y="2981" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="996.05" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (178 samples, 2.17%)</title><rect x="748.6" y="4213" width="25.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.58" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (5 samples, 0.06%)</title><rect x="760.2" y="3285" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="999.2" y="3109" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1002.24" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (6 samples, 0.07%)</title><rect x="864.3" y="3797" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="867.33" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (8 samples, 0.10%)</title><rect x="884.6" y="3653" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="887.63" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (27 samples, 0.33%)</title><rect x="774.4" y="4165" width="3.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.35" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.swap (17 samples, 0.21%)</title><rect x="298.5" y="4517" width="2.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="301.52" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="992.2" y="2725" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="995.18" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="1001.1" y="2917" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="774.6" y="3909" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (10 samples, 0.12%)</title><rect x="917.7" y="3557" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="920.75" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.multiply (2 samples, 0.02%)</title><rect x="1021.4" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1024.41" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractReferenceCountedByteBuf.release (2 samples, 0.02%)</title><rect x="498.4" y="4565" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="501.36" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (6 samples, 0.07%)</title><rect x="892.6" y="3861" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="895.55" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="813.1" y="4069" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.08" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="754.3" y="3045" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="847.1" y="4117" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="850.06" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.formatTo (2 samples, 0.02%)</title><rect x="876.6" y="3669" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="879.57" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/assoc--5433 (2 samples, 0.02%)</title><rect x="72.3" y="4981" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="75.34" y="4991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)1, 131072u&gt;, (MemoryType)1&gt;::steal_best_of_2(unsigned int, int*, StarTask&amp;) (2 samples, 0.02%)</title><rect x="1066.9" y="4933" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text text-anchor="" x="1069.90" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (39 samples, 0.48%)</title><rect x="980.7" y="3573" width="5.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="983.66" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (87 samples, 1.06%)</title><rect x="172.7" y="4565" width="12.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="865.2" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1019.4" y="949" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.39" y="959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (10 samples, 0.12%)</title><rect x="881.9" y="3685" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="884.90" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.keys (3 samples, 0.04%)</title><rect x="315.1" y="4517" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="318.08" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="982.7" y="3141" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="985.68" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::current_thread_enable_wx_impl(WXMode) (2 samples, 0.02%)</title><rect x="470.4" y="4805" width="0.3" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text text-anchor="" x="473.42" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (20 samples, 0.24%)</title><rect x="864.2" y="3925" width="2.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="867.19" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (9 samples, 0.11%)</title><rect x="334.2" y="4565" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="337.23" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (6 samples, 0.07%)</title><rect x="815.0" y="4005" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="817.95" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (3 samples, 0.04%)</title><rect x="768.4" y="3781" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="771.45" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>RegMask::find_first_elem() const (2 samples, 0.02%)</title><rect x="1119.6" y="4837" width="0.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text text-anchor="" x="1122.60" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (33 samples, 0.40%)</title><rect x="902.3" y="3845" width="4.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="905.34" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (11 samples, 0.13%)</title><rect x="970.3" y="3253" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="973.30" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="946.3" y="3317" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (2 samples, 0.02%)</title><rect x="25.1" y="5013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="28.12" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.netty/bufs-&gt;array/fn--15848 (6 samples, 0.07%)</title><rect x="494.2" y="4613" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="497.18" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (9 samples, 0.11%)</title><rect x="908.4" y="3829" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="911.39" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="957.3" y="3013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="960.34" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (208 samples, 2.54%)</title><rect x="748.6" y="4261" width="29.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.58" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >cl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (4 samples, 0.05%)</title><rect x="752.2" y="2821" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.18" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::WXWriteFromExecSetter::~WXWriteFromExecSetter() (2 samples, 0.02%)</title><rect x="491.9" y="3749" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text text-anchor="" x="494.88" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="946.3" y="3205" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (4 samples, 0.05%)</title><rect x="328.3" y="4325" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="331.32" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="938.5" y="3653" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (11 samples, 0.13%)</title><rect x="172.7" y="4053" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (16 samples, 0.20%)</title><rect x="896.0" y="3781" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="899.01" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="1019.0" y="1221" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.96" y="1231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.net.URI$Parser.scan (2 samples, 0.02%)</title><rect x="715.0" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="718.03" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="988.9" y="3397" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.format (2 samples, 0.02%)</title><rect x="878.0" y="3429" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="881.01" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="1016.9" y="1685" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="1695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.util.TextBuffer.contentsAsString (3 samples, 0.04%)</title><rect x="95.4" y="4421" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="98.38" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="1016.5" y="1669" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.51" y="1679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="984.3" y="2885" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="987.26" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="760.4" y="3045" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.39" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (29 samples, 0.35%)</title><rect x="975.5" y="3573" width="4.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="978.48" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.assoc (12 samples, 0.15%)</title><rect x="338.5" y="4469" width="1.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="341.55" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (5 samples, 0.06%)</title><rect x="763.8" y="3621" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.84" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="914.9" y="3509" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="917.87" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="860.7" y="3701" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="863.73" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (5 samples, 0.06%)</title><rect x="849.6" y="4373" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="852.65" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers$LongOps.equiv (2 samples, 0.02%)</title><rect x="882.3" y="3413" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="885.33" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll.Segment.charAt (19 samples, 0.23%)</title><rect x="260.5" y="4453" width="2.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="263.51" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (12 samples, 0.15%)</title><rect x="865.2" y="3829" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead (19 samples, 0.23%)</title><rect x="477.8" y="4549" width="2.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="480.77" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce1 (9 samples, 0.11%)</title><rect x="74.5" y="4709" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="77.50" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1006.4" y="2325" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1009.43" y="2335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="963.8" y="2997" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="966.82" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (6 samples, 0.07%)</title><rect x="901.2" y="3573" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="904.19" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="938.5" y="3701" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (4 samples, 0.05%)</title><rect x="184.5" y="4533" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="187.49" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (323 samples, 3.94%)</title><rect x="975.3" y="3701" width="46.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="978.34" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >cloj..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (7 samples, 0.09%)</title><rect x="957.1" y="3349" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="960.05" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$7.isSatisfiedBy (2 samples, 0.02%)</title><rect x="731.4" y="3989" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="734.45" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (16 samples, 0.20%)</title><rect x="770.5" y="3973" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="869.9" y="3749" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.95" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.ReferenceCountUtil.touch (4 samples, 0.05%)</title><rect x="693.3" y="4741" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="696.29" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (3 samples, 0.04%)</title><rect x="772.3" y="3893" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="775.34" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="914.0" y="3685" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="917.00" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="901.8" y="3557" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="904.77" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="838.9" y="3509" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="841.85" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (7 samples, 0.09%)</title><rect x="903.6" y="3717" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="906.64" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_jit_write_protect_np (2 samples, 0.02%)</title><rect x="381.6" y="4629" width="0.3" height="15.0" fill="rgb(202,52,52)" rx="2" ry="2" />
<text text-anchor="" x="384.59" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (14 samples, 0.17%)</title><rect x="774.5" y="4069" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.49" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seqFrom (3 samples, 0.04%)</title><rect x="347.3" y="4533" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="350.33" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (8 samples, 0.10%)</title><rect x="756.8" y="3445" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Arena::contains(void const*) const (5 samples, 0.06%)</title><rect x="1109.2" y="4853" width="0.8" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text text-anchor="" x="1112.23" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (6 samples, 0.07%)</title><rect x="985.4" y="3285" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="988.41" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (11 samples, 0.13%)</title><rect x="944.7" y="3557" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="947.67" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="997.8" y="2693" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="975.0" y="3381" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="978.05" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (7 samples, 0.09%)</title><rect x="755.5" y="3381" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.49" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SystemDictionary::oops_do(OopClosure*) (4 samples, 0.05%)</title><rect x="1066.3" y="4949" width="0.6" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text text-anchor="" x="1069.33" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.KQueueSelectorImpl.wakeup (31 samples, 0.38%)</title><rect x="363.0" y="4565" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="366.02" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="902.8" y="3589" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="905.77" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Matcher::xform(Node*, int) (4 samples, 0.05%)</title><rect x="1110.5" y="4853" width="0.6" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text text-anchor="" x="1113.53" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="987.1" y="3077" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="990.14" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (4 samples, 0.05%)</title><rect x="172.7" y="3637" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="977.6" y="3045" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="980.64" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="811.6" y="3749" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="814.64" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="949.4" y="3717" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentVector$TransientVector.ensureEditable (2 samples, 0.02%)</title><rect x="97.1" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="100.10" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (11 samples, 0.13%)</title><rect x="783.3" y="4181" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.28" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="818.6" y="3925" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="821.55" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="774.6" y="3733" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (5 samples, 0.06%)</title><rect x="343.3" y="4373" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="346.30" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (28 samples, 0.34%)</title><rect x="88.3" y="4389" width="4.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="91.32" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dissoc (5 samples, 0.06%)</title><rect x="374.5" y="4821" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="377.54" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="973.9" y="3093" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="976.90" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (15 samples, 0.18%)</title><rect x="958.9" y="3797" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="961.92" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (30 samples, 0.37%)</title><rect x="749.2" y="3013" width="4.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="903.6" y="3477" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="906.64" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (286 samples, 3.49%)</title><rect x="980.5" y="3653" width="41.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="983.52" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >exa..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.ATransientMap.assoc (2 samples, 0.02%)</title><rect x="110.5" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="113.49" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="978.4" y="2981" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="981.36" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (29 samples, 0.35%)</title><rect x="774.4" y="4213" width="4.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.35" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="956.5" y="3189" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="959.48" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="966.1" y="3077" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="969.12" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>mach_absolute_time (57 samples, 0.70%)</title><rect x="50.5" y="5013" width="8.2" height="15.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text text-anchor="" x="53.46" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_cond_signal (2 samples, 0.02%)</title><rect x="382.9" y="4597" width="0.3" height="15.0" fill="rgb(247,118,118)" rx="2" ry="2" />
<text text-anchor="" x="385.89" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (16 samples, 0.20%)</title><rect x="919.6" y="3653" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.equiv (2 samples, 0.02%)</title><rect x="207.7" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="210.67" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="937.2" y="3333" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="940.18" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="754.3" y="3125" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (3 samples, 0.04%)</title><rect x="912.6" y="3349" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="915.56" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (5 samples, 0.06%)</title><rect x="1006.1" y="2581" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred/fn--11768 (15 samples, 0.18%)</title><rect x="696.9" y="4837" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="699.89" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="995.5" y="2773" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.49" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (14 samples, 0.17%)</title><rect x="829.8" y="3877" width="2.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="832.78" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JVM_Sleep (60 samples, 0.73%)</title><rect x="1039.1" y="4949" width="8.7" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text text-anchor="" x="1042.12" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (6 samples, 0.07%)</title><rect x="1168.5" y="4805" width="0.9" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text text-anchor="" x="1171.55" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (7 samples, 0.09%)</title><rect x="1012.8" y="2437" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.77" y="2447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (2 samples, 0.02%)</title><rect x="175.4" y="4197" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="178.42" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred/fn--11768 (71 samples, 0.87%)</title><rect x="483.2" y="4133" width="10.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="486.24" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (3 samples, 0.04%)</title><rect x="750.7" y="2373" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="753.74" y="2383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Matcher.find (12 samples, 0.15%)</title><rect x="740.4" y="4533" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="743.37" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (9 samples, 0.11%)</title><rect x="959.8" y="3605" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.79" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (6 samples, 0.07%)</title><rect x="898.5" y="3845" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="901.46" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1006.9" y="2629" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.87" y="2639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="914.0" y="3813" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="917.00" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="920.1" y="3477" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="923.05" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (35 samples, 0.43%)</title><rect x="828.5" y="3973" width="5.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="831.48" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (5 samples, 0.06%)</title><rect x="996.1" y="3061" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.07" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="948.8" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="951.85" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="837.6" y="3845" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="840.55" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="1017.4" y="1685" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (6 samples, 0.07%)</title><rect x="770.5" y="3797" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="969.0" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="972.00" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (3 samples, 0.04%)</title><rect x="1057.0" y="4917" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1059.97" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="955.8" y="3093" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="958.76" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (278 samples, 3.39%)</title><rect x="748.3" y="4549" width="40.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.29" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (16 samples, 0.20%)</title><rect x="846.9" y="4197" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.91" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentSet.seq (3 samples, 0.04%)</title><rect x="315.1" y="4533" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="318.08" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="856.4" y="3989" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="859.42" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (5 samples, 0.06%)</title><rect x="1006.1" y="2661" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1004.6" y="2405" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.56" y="2415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.aleph.dirigiste.Executor.execute (26 samples, 0.32%)</title><rect x="378.4" y="4821" width="3.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="381.43" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.socket.nio.NioSocketChannel.doWrite (84 samples, 1.02%)</title><rect x="680.2" y="4565" width="12.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.19" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="963.7" y="3173" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="966.67" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (6 samples, 0.07%)</title><rect x="830.5" y="3653" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="833.50" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="1016.5" y="1701" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.51" y="1711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (2 samples, 0.02%)</title><rect x="938.0" y="3669" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="941.05" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="807.6" y="3877" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="810.61" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="749.3" y="101" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="1000.7" y="2741" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1003.68" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (17 samples, 0.21%)</title><rect x="1017.4" y="1957" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.toString (5 samples, 0.06%)</title><rect x="1056.7" y="4997" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1059.68" y="5007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="865.6" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (3 samples, 0.04%)</title><rect x="844.3" y="4037" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="847.32" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="331.3" y="4517" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="334.35" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>nmethod::nmethod(Method*, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (4 samples, 0.05%)</title><rect x="1174.9" y="4853" width="0.6" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text text-anchor="" x="1177.88" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="995.6" y="2389" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Matcher.group (6 samples, 0.07%)</title><rect x="307.7" y="4549" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="310.74" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimePrintContext.&lt;init&gt; (2 samples, 0.02%)</title><rect x="969.6" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.58" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="749.3" y="853" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="836.5" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="839.55" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (5 samples, 0.06%)</title><rect x="945.1" y="3317" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="948.10" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.DelegatingMethodAccessorImpl (2 samples, 0.02%)</title><rect x="963.8" y="2901" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="966.82" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="1003.7" y="2917" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1006.70" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/type (5 samples, 0.06%)</title><rect x="744.8" y="4533" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="747.84" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="908.8" y="3717" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (2 samples, 0.02%)</title><rect x="909.7" y="3781" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="912.69" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="1017.4" y="1781" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="872.3" y="3621" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.25" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1012.2" y="2133" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.19" y="2143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="817.4" y="3717" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.40" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (12 samples, 0.15%)</title><rect x="970.2" y="3381" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="973.15" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/make-tramp (2 samples, 0.02%)</title><rect x="202.9" y="4661" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="205.92" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="890.7" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="893.68" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="815.4" y="3781" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="818.38" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="953.7" y="3157" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (5 samples, 0.06%)</title><rect x="1006.1" y="2773" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="750.0" y="1765" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="753.02" y="1775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="953.7" y="3125" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (10 samples, 0.12%)</title><rect x="760.2" y="3637" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.deref (84 samples, 1.02%)</title><rect x="701.5" y="4613" width="12.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="704.50" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.BufferedReader.ensureOpen (2 samples, 0.02%)</title><rect x="745.6" y="4501" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="748.56" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (6 samples, 0.07%)</title><rect x="846.0" y="4181" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.05" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="1016.9" y="1893" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="1903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1005.9" y="2933" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1008.86" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="811.6" y="3893" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="814.64" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (5 samples, 0.06%)</title><rect x="752.8" y="2805" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.76" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="1015.9" y="1893" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.94" y="1903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="842.0" y="3669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.02" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (16 samples, 0.20%)</title><rect x="838.4" y="3989" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="841.42" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="945.5" y="3109" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="948.53" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (6 samples, 0.07%)</title><rect x="1013.8" y="2357" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.78" y="2367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="955.8" y="3173" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="958.76" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.internal.ReferenceCountUpdater.release (2 samples, 0.02%)</title><rect x="498.4" y="4549" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="501.36" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.write (31 samples, 0.38%)</title><rect x="673.0" y="4741" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (6 samples, 0.07%)</title><rect x="770.5" y="3781" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.doEquiv (2 samples, 0.02%)</title><rect x="208.8" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.83" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (5 samples, 0.06%)</title><rect x="775.5" y="3893" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.50" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="992.8" y="3125" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.76" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="991.2" y="2837" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.17" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="995.5" y="2821" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.49" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1007.9" y="2325" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1010.87" y="2335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="990.0" y="3141" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="993.02" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="885.1" y="3477" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="888.07" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (37 samples, 0.45%)</title><rect x="862.2" y="4037" width="5.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="865.17" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="964.7" y="3045" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="1002.5" y="2549" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1005.55" y="2559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigInteger.toString (4 samples, 0.05%)</title><rect x="127.8" y="4709" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="130.77" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (75 samples, 0.92%)</title><rect x="927.7" y="3893" width="10.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="930.68" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="904.1" y="3669" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.07" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PSPromotionManager::process_popped_location_depth(StarTask) (9 samples, 0.11%)</title><rect x="1067.2" y="4933" width="1.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text text-anchor="" x="1070.19" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="818.1" y="3701" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="821.12" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="984.3" y="2933" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="987.26" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_jit_write_protect_np (2 samples, 0.02%)</title><rect x="1055.8" y="4933" width="0.3" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text text-anchor="" x="1058.82" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="883.9" y="3861" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="886.91" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Compilation::compile_method() (15 samples, 0.18%)</title><rect x="1175.5" y="4885" width="2.1" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text text-anchor="" x="1178.46" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="869.9" y="3797" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.95" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (5 samples, 0.06%)</title><rect x="938.5" y="3749" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="903.6" y="3653" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="906.64" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="127.3" y="4709" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="130.34" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="1007.6" y="2549" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.59" y="2559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (34 samples, 0.41%)</title><rect x="862.3" y="3973" width="4.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="865.32" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1016.7" y="1461" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.66" y="1471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="841.4" y="3573" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="844.44" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="976.5" y="3125" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="979.49" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (427 samples, 5.21%)</title><rect x="961.1" y="3861" width="61.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="964.08" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojur..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.java.io/fn--11562 (25 samples, 0.31%)</title><rect x="80.8" y="4661" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="83.83" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="954.6" y="3301" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="957.60" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method (2 samples, 0.02%)</title><rect x="853.7" y="3557" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="856.68" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="939.2" y="3717" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.20" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="916.6" y="3605" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="919.60" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="856.8" y="3861" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="859.85" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (12 samples, 0.15%)</title><rect x="973.0" y="3397" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="976.03" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="1016.9" y="1749" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="1759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>compojure.response/eval18599/fn--18600/G--18590--18607 (6 samples, 0.07%)</title><rect x="77.8" y="4757" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="80.81" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (10 samples, 0.12%)</title><rect x="981.2" y="3253" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="984.24" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="1018.7" y="1413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="872.7" y="3973" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="887.5" y="3653" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="890.51" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.createHT (9 samples, 0.11%)</title><rect x="338.5" y="4453" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="341.55" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="891.4" y="3765" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.40" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="919.6" y="3349" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="964.7" y="3093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="979.8" y="3349" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (17 samples, 0.21%)</title><rect x="881.5" y="3733" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="884.47" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="937.2" y="3189" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="940.18" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="953.7" y="2901" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="1008.9" y="2389" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="967.6" y="3397" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.&lt;init&gt; (3 samples, 0.04%)</title><rect x="306.9" y="4453" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="309.87" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.DefaultHeadersImpl.&lt;init&gt; (2 samples, 0.02%)</title><rect x="720.4" y="4069" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="723.36" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (10 samples, 0.12%)</title><rect x="877.0" y="3589" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="880.00" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-result (32 samples, 0.39%)</title><rect x="327.9" y="4581" width="4.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="330.89" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (20 samples, 0.24%)</title><rect x="823.0" y="4277" width="2.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="826.01" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="947.7" y="3093" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::current_thread_enable_wx(WXMode) (2 samples, 0.02%)</title><rect x="712.9" y="4437" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text text-anchor="" x="715.87" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (37 samples, 0.45%)</title><rect x="749.0" y="3269" width="5.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (88 samples, 1.07%)</title><rect x="894.9" y="3989" width="12.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="897.86" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="989.2" y="3189" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.16" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (6 samples, 0.07%)</title><rect x="846.0" y="4149" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="849.05" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="749.3" y="709" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="1008.9" y="2693" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="890.7" y="3621" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="893.68" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="935.2" y="3605" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="938.17" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (15 samples, 0.18%)</title><rect x="829.6" y="3941" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="832.64" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (3 samples, 0.04%)</title><rect x="210.0" y="4421" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="212.98" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="946.0" y="3317" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="948.97" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (11 samples, 0.13%)</title><rect x="884.6" y="3861" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="887.63" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (83 samples, 1.01%)</title><rect x="911.0" y="4053" width="11.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="913.98" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="914.0" y="3733" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="917.00" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="749.3" y="149" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (9 samples, 0.11%)</title><rect x="805.6" y="3813" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="808.59" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="976.3" y="3269" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.34" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (13 samples, 0.16%)</title><rect x="920.1" y="3621" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.05" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="811.6" y="3829" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="814.64" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyRequest.valAt (2 samples, 0.02%)</title><rect x="76.8" y="4709" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="79.80" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1019.4" y="805" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.39" y="815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="967.7" y="3285" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="970.71" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1005.9" y="2789" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1008.86" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="923.4" y="3429" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="926.36" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (127 samples, 1.55%)</title><rect x="850.4" y="4245" width="18.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="853.37" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>NonSafepointEmitter::observe_instruction(Node*, int) (3 samples, 0.04%)</title><rect x="1108.7" y="4853" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text text-anchor="" x="1111.66" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (6 samples, 0.07%)</title><rect x="328.2" y="4421" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="331.18" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (6 samples, 0.07%)</title><rect x="970.7" y="3189" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="973.73" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="779.4" y="3829" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.39" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (21 samples, 0.26%)</title><rect x="749.2" y="2901" width="3.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (25 samples, 0.31%)</title><rect x="845.8" y="4229" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="848.76" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="996.9" y="2965" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.93" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="909.4" y="3733" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="912.40" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (4 samples, 0.05%)</title><rect x="1023.9" y="3941" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1026.86" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (11 samples, 0.13%)</title><rect x="997.7" y="2949" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.65" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$ArrayNode.assoc (3 samples, 0.04%)</title><rect x="284.7" y="4437" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="287.70" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (9 samples, 0.11%)</title><rect x="949.4" y="3829" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="880.5" y="3941" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1008.9" y="2277" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead (216 samples, 2.64%)</title><rect x="480.9" y="4725" width="31.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="483.93" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="950.1" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="953.14" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (7 samples, 0.09%)</title><rect x="809.0" y="4133" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="812.05" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractPooledDerivedByteBuf.deallocate (2 samples, 0.02%)</title><rect x="498.4" y="4581" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="501.36" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="758.2" y="3237" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="761.23" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (2 samples, 0.02%)</title><rect x="294.2" y="4389" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="297.20" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/contains? (2 samples, 0.02%)</title><rect x="482.1" y="4357" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="485.09" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="992.8" y="3141" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="995.76" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/add-listener! (2 samples, 0.02%)</title><rect x="718.6" y="4373" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="721.63" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="865.6" y="3637" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="779.1" y="3909" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (6 samples, 0.07%)</title><rect x="844.8" y="4133" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="847.75" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (5 samples, 0.06%)</title><rect x="782.0" y="4181" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="784.98" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-message (4 samples, 0.05%)</title><rect x="344.4" y="4565" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="347.45" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="842.0" y="3701" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.02" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="979.8" y="3253" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="926.1" y="3541" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="929.10" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (7 samples, 0.09%)</title><rect x="1004.9" y="2741" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.85" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="833.5" y="4133" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="836.52" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (7 samples, 0.09%)</title><rect x="973.6" y="3269" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="976.61" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="975.8" y="3093" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.77" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="920.8" y="3285" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="923.77" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="866.3" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="869.35" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (2 samples, 0.02%)</title><rect x="341.4" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="344.43" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (8 samples, 0.10%)</title><rect x="749.2" y="2085" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>byte-streams.graph/seq-conversion-fn/fn--14748 (13 samples, 0.16%)</title><rect x="477.9" y="4389" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="480.91" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="886.4" y="3557" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="889.36" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="892.1" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="895.12" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="957.3" y="3141" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="960.34" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (20 samples, 0.24%)</title><rect x="823.0" y="4229" width="2.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="826.01" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.&lt;init&gt; (5 samples, 0.06%)</title><rect x="118.6" y="4565" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="121.56" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="807.6" y="3813" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="810.61" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Var.getRawRoot (3 samples, 0.04%)</title><rect x="206.1" y="4613" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="209.09" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (37 samples, 0.45%)</title><rect x="172.7" y="4389" width="5.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="921.1" y="3269" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="924.06" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatterBuilder$NumberPrinterParser.format (2 samples, 0.02%)</title><rect x="900.8" y="3221" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="903.76" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>InlineCacheBuffer::contains(unsigned char*) (2 samples, 0.02%)</title><rect x="1179.2" y="4853" width="0.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text text-anchor="" x="1182.20" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="848.5" y="3877" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="851.50" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="1004.9" y="2613" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.85" y="2623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="1012.8" y="2293" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1015.77" y="2303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/conj--5407 (5 samples, 0.06%)</title><rect x="65.9" y="4997" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="68.86" y="5007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (11 samples, 0.13%)</title><rect x="282.3" y="4501" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="285.25" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (7 samples, 0.09%)</title><rect x="843.2" y="3861" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.17" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.gt (2 samples, 0.02%)</title><rect x="910.5" y="4117" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="913.55" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="954.5" y="3365" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="957.46" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (6 samples, 0.07%)</title><rect x="882.0" y="3573" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="885.04" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="908.8" y="3701" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (40 samples, 0.49%)</title><rect x="961.8" y="3621" width="5.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="964.80" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="975.6" y="3301" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="978.62" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (5 samples, 0.06%)</title><rect x="912.3" y="3413" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="915.28" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseChaitin::Simplify() (2 samples, 0.02%)</title><rect x="1114.4" y="4853" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text text-anchor="" x="1117.41" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="902.8" y="3605" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="905.77" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="880.5" y="3973" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (10 samples, 0.12%)</title><rect x="887.2" y="3765" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="890.23" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (7 samples, 0.09%)</title><rect x="58.7" y="5013" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="61.66" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1016.7" y="1317" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.66" y="1327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (10 samples, 0.12%)</title><rect x="878.4" y="3717" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="881.44" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::current_thread_enable_wx_impl(WXMode) (2 samples, 0.02%)</title><rect x="373.2" y="4645" width="0.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text text-anchor="" x="376.24" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.getMethods (2 samples, 0.02%)</title><rect x="996.9" y="2693" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.93" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (27 samples, 0.33%)</title><rect x="770.2" y="4133" width="3.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.18" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__psynch_cvwait (36 samples, 0.44%)</title><rect x="1050.6" y="4901" width="5.2" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text text-anchor="" x="1053.63" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (22 samples, 0.27%)</title><rect x="858.4" y="3909" width="3.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="861.43" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (5 samples, 0.06%)</title><rect x="886.4" y="3589" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="889.36" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_jit_write_protect_np (8 samples, 0.10%)</title><rect x="357.8" y="4405" width="1.2" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text text-anchor="" x="360.84" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (9 samples, 0.11%)</title><rect x="963.4" y="3317" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="966.39" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="877.7" y="3493" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="880.72" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (133 samples, 1.62%)</title><rect x="1001.8" y="3125" width="19.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.83" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="983.7" y="2901" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.69" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="994.9" y="2837" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="880.5" y="3829" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (66 samples, 0.81%)</title><rect x="87.6" y="4453" width="9.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="90.60" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (89 samples, 1.09%)</title><rect x="894.7" y="4085" width="12.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="897.71" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="920.6" y="3493" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.63" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="762.8" y="3333" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.83" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/assoc! (2 samples, 0.02%)</title><rect x="110.5" y="4565" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="113.49" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="758.9" y="3349" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.95" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (115 samples, 1.40%)</title><rect x="1004.1" y="3093" width="16.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.13" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentSet.seq (6 samples, 0.07%)</title><rect x="26.8" y="5013" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="29.84" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (5 samples, 0.06%)</title><rect x="876.1" y="3781" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="879.14" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (35 samples, 0.43%)</title><rect x="975.5" y="3653" width="5.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.48" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.ATransientMap.assoc (2 samples, 0.02%)</title><rect x="125.3" y="4645" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="128.32" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentSet.seq (3 samples, 0.04%)</title><rect x="334.9" y="4517" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="337.95" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (5 samples, 0.06%)</title><rect x="990.3" y="3077" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="993.31" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="996.5" y="2901" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.50" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="956.5" y="3205" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="959.48" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="997.4" y="2773" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.36" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (22 samples, 0.27%)</title><rect x="903.5" y="3733" width="3.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="906.49" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (12 samples, 0.15%)</title><rect x="956.3" y="3445" width="1.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="959.33" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (5 samples, 0.06%)</title><rect x="820.4" y="4213" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="823.42" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (13 samples, 0.16%)</title><rect x="965.4" y="3397" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="968.40" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (11 samples, 0.13%)</title><rect x="785.7" y="4293" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.72" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (10 samples, 0.12%)</title><rect x="758.7" y="3557" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (8 samples, 0.10%)</title><rect x="884.6" y="3669" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="887.63" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.concurrent.ScheduledFutureTask.run (2 samples, 0.02%)</title><rect x="699.1" y="4901" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="702.05" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (7 samples, 0.09%)</title><rect x="985.3" y="3461" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="988.27" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (11 samples, 0.13%)</title><rect x="876.9" y="3717" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="879.86" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (2 samples, 0.02%)</title><rect x="306.4" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="309.44" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1000.8" y="2549" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1003.82" y="2559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="783.9" y="3957" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.85" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="987.7" y="2693" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="865.6" y="3653" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.assoc (3 samples, 0.04%)</title><rect x="66.0" y="4949" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="69.01" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (2 samples, 0.02%)</title><rect x="69.9" y="4981" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="72.89" y="4991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.main/repl (2,321 samples, 28.32%)</title><rect x="700.2" y="4901" width="334.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="703.20" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.main/repl</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.invoke (2 samples, 0.02%)</title><rect x="314.6" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="317.65" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="974.3" y="3125" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="977.33" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.swap (8 samples, 0.10%)</title><rect x="343.0" y="4549" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="346.01" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText (8 samples, 0.10%)</title><rect x="118.1" y="4597" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="121.12" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.StreamDecoder.readBytes (8 samples, 0.10%)</title><rect x="82.7" y="4533" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="85.71" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="952.2" y="3237" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="955.16" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (31 samples, 0.38%)</title><rect x="869.1" y="4165" width="4.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.08" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (2 samples, 0.02%)</title><rect x="782.3" y="4021" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="785.27" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="987.7" y="2901" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (2 samples, 0.02%)</title><rect x="175.4" y="4181" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="178.42" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (106 samples, 1.29%)</title><rect x="894.7" y="4181" width="15.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="897.71" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="1008.9" y="2709" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (16 samples, 0.20%)</title><rect x="938.5" y="3909" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="872.7" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (17 samples, 0.21%)</title><rect x="996.8" y="3013" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.79" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpObjectDecoder.decode (11 samples, 0.13%)</title><rect x="474.6" y="4677" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.60" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.CombinedChannelDuplexHandler.read (3 samples, 0.04%)</title><rect x="513.0" y="4725" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="516.04" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="898.6" y="3733" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="901.60" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="903.8" y="3429" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="906.78" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (3 samples, 0.04%)</title><rect x="840.9" y="3957" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="843.87" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (926 samples, 11.30%)</title><rect x="893.6" y="4261" width="133.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="896.56" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.lang.Lon..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="903.6" y="3637" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="906.64" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (76 samples, 0.93%)</title><rect x="927.5" y="3973" width="11.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="930.54" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (5 samples, 0.06%)</title><rect x="784.9" y="4117" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="787.86" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (37 samples, 0.45%)</title><rect x="862.2" y="3989" width="5.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="865.17" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="920.8" y="3333" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="923.77" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="751.9" y="2789" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="754.89" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (2 samples, 0.02%)</title><rect x="1021.0" y="3125" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1023.98" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.pcequiv (2 samples, 0.02%)</title><rect x="68.6" y="4997" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="71.60" y="5007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.ASeq.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1030.0" y="4389" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1033.05" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Start.match (21 samples, 0.26%)</title><rect x="728.9" y="4325" width="3.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="731.86" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="1015.9" y="2101" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.94" y="2111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (4 samples, 0.05%)</title><rect x="749.3" y="1381" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (7 samples, 0.09%)</title><rect x="843.2" y="3877" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.17" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="865.9" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.MethodImplCache.fnFor (2 samples, 0.02%)</title><rect x="76.2" y="4661" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="79.23" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.ATransientMap.assoc (2 samples, 0.02%)</title><rect x="110.5" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="113.49" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="937.2" y="3349" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="940.18" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (5 samples, 0.06%)</title><rect x="752.8" y="2917" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.76" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="871.1" y="3813" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.10" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="950.1" y="3557" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="953.14" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (79 samples, 0.96%)</title><rect x="857.3" y="4117" width="11.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="860.28" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (4 samples, 0.05%)</title><rect x="928.0" y="3765" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="930.97" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="905.4" y="3429" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="908.37" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1004.6" y="2501" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.56" y="2511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (74 samples, 0.90%)</title><rect x="834.1" y="4133" width="10.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="837.10" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (3 samples, 0.04%)</title><rect x="349.6" y="4549" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="352.63" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="994.2" y="2837" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="997.20" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="758.7" y="3381" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="992.0" y="2885" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="995.04" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (2 samples, 0.02%)</title><rect x="326.3" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="329.31" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="779.4" y="3845" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.39" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="1019.0" y="1237" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.96" y="1247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="959.1" y="3557" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="962.07" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (16 samples, 0.20%)</title><rect x="911.7" y="3781" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="914.70" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="974.3" y="3109" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="977.33" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (2 samples, 0.02%)</title><rect x="210.6" y="4501" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="213.55" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="822.0" y="3941" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="840.0" y="3429" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="843.00" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.concurrent.SingleThreadEventExecutor.pollTask (3 samples, 0.04%)</title><rect x="699.3" y="4917" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="702.34" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="884.1" y="3653" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="887.06" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (16 samples, 0.20%)</title><rect x="896.0" y="3749" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="899.01" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (10 samples, 0.12%)</title><rect x="749.2" y="2229" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (17 samples, 0.21%)</title><rect x="1017.4" y="1925" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="1009.3" y="2613" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1012.31" y="2623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="1018.7" y="1349" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="782.0" y="4085" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="784.98" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (6 samples, 0.07%)</title><rect x="852.8" y="3573" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="855.82" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="905.4" y="3557" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="908.37" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="811.6" y="3765" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="814.64" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="996.9" y="2773" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.93" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.hashCode (2 samples, 0.02%)</title><rect x="183.5" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="186.49" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.02%)</title><rect x="357.6" y="4389" width="0.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text text-anchor="" x="360.55" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (194 samples, 2.37%)</title><rect x="993.5" y="3365" width="27.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.48" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >e..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-listener (60 samples, 0.73%)</title><rect x="334.1" y="4581" width="8.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="337.08" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="985.4" y="3269" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="988.41" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="1010.9" y="2277" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.90" y="2287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="755.9" y="3141" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.92" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractByteBufAllocator.buffer (3 samples, 0.04%)</title><rect x="694.6" y="4693" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="697.59" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="996.5" y="2949" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.50" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="871.1" y="3861" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="874.10" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client/http-connection/fn--16976/fn--16995/fn--16996 (33 samples, 0.40%)</title><rect x="719.5" y="4405" width="4.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="722.50" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (23 samples, 0.28%)</title><rect x="172.7" y="4245" width="3.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.reduction/apply-reduction (12 samples, 0.15%)</title><rect x="305.9" y="4549" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="308.86" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="936.0" y="3285" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="939.03" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>compojure.response/eval18689/fn--18690 (6 samples, 0.07%)</title><rect x="77.8" y="4741" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="80.81" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="954.5" y="3461" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="957.46" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="880.5" y="3541" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="996.5" y="2981" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.50" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractReferenceCountedByteBuf.handleRelease (4 samples, 0.05%)</title><rect x="509.9" y="4453" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="512.87" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="811.6" y="3781" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="814.64" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="966.7" y="3029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="969.70" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="953.7" y="3221" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="919.6" y="3269" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Object.&lt;init&gt; (2 samples, 0.02%)</title><rect x="115.1" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="118.10" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.assoc (5 samples, 0.06%)</title><rect x="74.5" y="4661" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="77.50" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.AFn.run (100 samples, 1.22%)</title><rect x="368.9" y="4949" width="14.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="371.92" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="762.8" y="3429" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.83" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (2 samples, 0.02%)</title><rect x="210.1" y="4341" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="213.12" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="842.4" y="3701" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="845.45" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (7 samples, 0.09%)</title><rect x="966.0" y="3301" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="968.98" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>RelocIterator::next() (3 samples, 0.04%)</title><rect x="1105.5" y="4901" width="0.4" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text text-anchor="" x="1108.49" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (19 samples, 0.23%)</title><rect x="935.0" y="3701" width="2.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="938.02" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="991.5" y="2757" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="994.46" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (176 samples, 2.15%)</title><rect x="748.7" y="4165" width="25.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.72" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (20 samples, 0.24%)</title><rect x="779.1" y="4197" width="2.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (5 samples, 0.06%)</title><rect x="912.3" y="3557" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="915.28" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (2 samples, 0.02%)</title><rect x="759.2" y="3381" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.23" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpObjectEncoder.encode (3 samples, 0.04%)</title><rect x="692.6" y="4693" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="695.57" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="816.4" y="3925" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="819.39" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (170 samples, 2.07%)</title><rect x="996.8" y="3269" width="24.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.79" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >e..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="997.8" y="2709" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="1009.3" y="2677" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1012.31" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (17 samples, 0.21%)</title><rect x="881.5" y="3797" width="2.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="884.47" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseCFG::compute_latencies_backwards(VectorSet&amp;, Node_List&amp;) (3 samples, 0.04%)</title><rect x="1111.4" y="4837" width="0.4" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text text-anchor="" x="1114.39" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="856.6" y="3877" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="859.56" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="846.6" y="3893" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.63" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.append (2 samples, 0.02%)</title><rect x="738.9" y="4485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="741.93" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (28 samples, 0.34%)</title><rect x="922.9" y="3989" width="4.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (243 samples, 2.96%)</title><rect x="986.4" y="3509" width="35.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.42" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ex..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/assoc! (2 samples, 0.02%)</title><rect x="125.3" y="4661" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="128.32" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.ReflectAccess.copyMethod (13 samples, 0.16%)</title><rect x="189.8" y="4517" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="192.82" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="984.0" y="2853" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="774.6" y="3829" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (261 samples, 3.18%)</title><rect x="85.4" y="4629" width="37.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="88.44" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >che..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="915.2" y="3525" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="918.16" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (4 samples, 0.05%)</title><rect x="749.3" y="1653" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="996.5" y="2917" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.50" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.aleph.dirigiste.Pool.startControlLoop (56 samples, 0.68%)</title><rect x="1048.5" y="4981" width="8.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1051.47" y="4991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="822.7" y="3845" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="1006.1" y="2613" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (6 samples, 0.07%)</title><rect x="763.8" y="3653" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.84" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (4 samples, 0.05%)</title><rect x="1025.4" y="4101" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1028.44" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (323 samples, 3.94%)</title><rect x="975.3" y="3717" width="46.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.34" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >cloj..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="946.3" y="3157" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="947.7" y="3141" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.toArray (2 samples, 0.02%)</title><rect x="789.8" y="4565" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="792.76" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (14 samples, 0.17%)</title><rect x="1004.1" y="2997" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.13" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="887.2" y="3701" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="890.23" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="890.0" y="3605" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (92 samples, 1.12%)</title><rect x="1007.3" y="2885" width="13.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.30" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeMatchingMethod (2 samples, 0.02%)</title><rect x="804.9" y="3989" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="807.87" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="843.3" y="3733" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.31" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (18 samples, 0.22%)</title><rect x="964.7" y="3429" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="832.2" y="3797" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="835.23" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="933.0" y="3429" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="936.01" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (4 samples, 0.05%)</title><rect x="297.4" y="4469" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="300.37" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeMatchingMethod (2 samples, 0.02%)</title><rect x="876.6" y="3749" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="879.57" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand (3 samples, 0.04%)</title><rect x="800.6" y="4517" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="803.55" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="983.7" y="3029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.69" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="848.5" y="3845" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.50" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/conj--5407 (3 samples, 0.04%)</title><rect x="77.8" y="4661" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="80.81" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11874/deferred--11875 (2 samples, 0.02%)</title><rect x="735.2" y="4453" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="738.19" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString2 (2 samples, 0.02%)</title><rect x="769.7" y="4053" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="772.74" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="1008.9" y="2309" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="978.1" y="2853" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (3 samples, 0.04%)</title><rect x="859.3" y="3525" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="862.29" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (9 samples, 0.11%)</title><rect x="999.8" y="3061" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1002.81" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (106 samples, 1.29%)</title><rect x="894.7" y="4197" width="15.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="897.71" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="993.0" y="3061" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="996.05" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (12 samples, 0.15%)</title><rect x="1002.0" y="3045" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.97" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>compojure.core/wrap-response/fn--20619 (3 samples, 0.04%)</title><rect x="1057.5" y="4981" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1060.55" y="4991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (6 samples, 0.07%)</title><rect x="815.0" y="3909" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="817.95" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (7 samples, 0.09%)</title><rect x="770.5" y="3829" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.KQueueArrayWrapper.kevent0 (570 samples, 6.95%)</title><rect x="529.2" y="4837" width="82.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="532.17" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.nio.c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1017.4" y="1717" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter.format (44 samples, 0.54%)</title><rect x="790.3" y="4549" width="6.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="793.33" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="823.6" y="3877" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="826.59" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="946.3" y="3477" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="959.1" y="3429" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.07" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (16 samples, 0.20%)</title><rect x="938.5" y="3973" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="962.1" y="3381" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1018.7" y="1157" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="984.0" y="2837" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (11 samples, 0.13%)</title><rect x="865.2" y="3813" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (92 samples, 1.12%)</title><rect x="927.5" y="4037" width="13.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="930.54" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (5 samples, 0.06%)</title><rect x="838.6" y="3733" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="841.56" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (42 samples, 0.51%)</title><rect x="749.0" y="3317" width="6.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.charAt (9 samples, 0.11%)</title><rect x="223.9" y="4469" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="226.94" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="987.7" y="2629" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="2639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1005.9" y="2853" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1008.86" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hasheq (4 samples, 0.05%)</title><rect x="343.3" y="4341" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="346.30" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="996.2" y="2837" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.21" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (2 samples, 0.02%)</title><rect x="66.0" y="4901" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="69.01" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="993.8" y="3013" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="996.77" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="822.7" y="3877" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="841.4" y="3509" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="844.44" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.copyMethods (2 samples, 0.02%)</title><rect x="941.2" y="3909" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="944.22" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Matcher.getSubSequence (2 samples, 0.02%)</title><rect x="792.6" y="4485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="795.64" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractByteBuf.setCharSequence (3 samples, 0.04%)</title><rect x="676.9" y="4469" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="679.88" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="848.1" y="3829" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.06" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="994.5" y="2741" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.49" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (7 samples, 0.09%)</title><rect x="931.3" y="3733" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="934.28" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.pcequiv (2 samples, 0.02%)</title><rect x="286.7" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="289.72" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (2 samples, 0.02%)</title><rect x="753.9" y="3125" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="756.91" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="841.4" y="3669" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="844.44" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="1008.9" y="2501" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="920.8" y="3173" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.77" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$GroupHead.match (9 samples, 0.11%)</title><rect x="794.8" y="4421" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="797.80" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (2 samples, 0.02%)</title><rect x="499.5" y="4293" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="502.51" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="765.3" y="3477" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="768.28" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (10 samples, 0.12%)</title><rect x="862.8" y="3925" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="865.75" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.netty/bufs-&gt;array/fn--15846 (2 samples, 0.02%)</title><rect x="507.3" y="4389" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="510.28" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$GroupTail.match (6 samples, 0.07%)</title><rect x="741.1" y="4389" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="744.09" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOfObject (2 samples, 0.02%)</title><rect x="66.0" y="4885" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="69.01" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="904.2" y="3333" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.21" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/subscribe--11925/fn--11930 (8 samples, 0.10%)</title><rect x="382.2" y="4805" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="385.17" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Listener.onSuccess (71 samples, 0.87%)</title><rect x="483.2" y="4117" width="10.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="486.24" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="998.9" y="2661" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1001.95" y="2671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="991.5" y="2693" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.46" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="908.0" y="3861" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="910.96" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="999.2" y="3189" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1002.24" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1013.2" y="1845" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="1855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Long.toString (2 samples, 0.02%)</title><rect x="801.7" y="4373" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="804.71" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="813.7" y="3685" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.66" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (41 samples, 0.50%)</title><rect x="851.4" y="4101" width="5.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="854.38" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (9 samples, 0.11%)</title><rect x="760.2" y="3605" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/zip' (11 samples, 0.13%)</title><rect x="717.8" y="4437" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="720.77" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Monitor::IWait(Thread*, long) (5 samples, 0.06%)</title><rect x="1058.8" y="4933" width="0.8" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text text-anchor="" x="1061.84" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="1018.7" y="1285" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (27 samples, 0.33%)</title><rect x="172.7" y="4325" width="3.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="825.6" y="4149" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="828.61" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/merge-with/merge2--5982 (10 samples, 0.12%)</title><rect x="74.5" y="4725" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="77.50" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.ThreadLocal$ThreadLocalMap.access$000 (2 samples, 0.02%)</title><rect x="719.1" y="4389" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="722.07" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::do_one_block() (12 samples, 0.15%)</title><rect x="1172.6" y="4757" width="1.7" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text text-anchor="" x="1175.58" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/ordered-alt-full-parse (3 samples, 0.04%)</title><rect x="209.5" y="4581" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="212.55" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method (2 samples, 0.02%)</title><rect x="973.0" y="3269" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="976.03" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="952.2" y="3317" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="955.16" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Compilation::install_code(int) (4 samples, 0.05%)</title><rect x="1176.9" y="4869" width="0.6" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text text-anchor="" x="1179.90" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (88 samples, 1.07%)</title><rect x="894.9" y="4021" width="12.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="897.86" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.StreamDecoder.read (4 samples, 0.05%)</title><rect x="746.0" y="4453" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="748.99" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.format (2 samples, 0.02%)</title><rect x="900.8" y="3269" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="903.76" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="1004.3" y="2533" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.28" y="2543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (38 samples, 0.46%)</title><rect x="969.9" y="3717" width="5.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (9 samples, 0.11%)</title><rect x="872.0" y="4021" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="874.96" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="964.3" y="3221" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="967.25" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="898.5" y="3813" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="901.46" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="813.1" y="4133" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.08" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ClassLoaderDataGraph::oops_do(OopClosure*, KlassClosure*, bool) (39 samples, 0.48%)</title><rect x="1060.7" y="4949" width="5.6" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text text-anchor="" x="1063.71" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="815.0" y="4021" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="817.95" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="1011.5" y="2085" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (2 samples, 0.02%)</title><rect x="175.7" y="4229" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="178.71" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="891.4" y="3973" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.40" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (5 samples, 0.06%)</title><rect x="938.5" y="3813" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="890.7" y="3701" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="893.68" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="903.6" y="3541" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="906.64" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="915.2" y="3317" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="918.16" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="917.9" y="3253" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="920.89" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (3 samples, 0.04%)</title><rect x="287.9" y="4437" width="0.4" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text text-anchor="" x="290.87" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="871.4" y="3669" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.39" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (3 samples, 0.04%)</title><rect x="315.1" y="4485" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="318.08" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="1000.7" y="2757" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1003.68" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (7 samples, 0.09%)</title><rect x="922.9" y="3781" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="863.5" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="866.47" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (3 samples, 0.04%)</title><rect x="320.7" y="4373" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="323.69" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (7 samples, 0.09%)</title><rect x="809.0" y="4197" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="812.05" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) (2 samples, 0.02%)</title><rect x="357.6" y="4373" width="0.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text text-anchor="" x="360.55" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="989.3" y="3157" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.30" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PSRootsClosure&lt;false&gt;::do_oop(oopDesc**) (5 samples, 0.06%)</title><rect x="1064.7" y="4917" width="0.8" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text text-anchor="" x="1067.74" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="822.7" y="3861" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="822.7" y="3813" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="773.1" y="3845" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="776.06" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.flow/acquire (7 samples, 0.09%)</title><rect x="713.6" y="4565" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="716.59" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractByteBufAllocator.directBuffer (8 samples, 0.10%)</title><rect x="513.8" y="4821" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="516.76" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="848.5" y="3941" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.50" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="938.5" y="3685" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1017.4" y="1573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="964.7" y="3061" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="841.4" y="3685" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="844.44" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (14 samples, 0.17%)</title><rect x="805.3" y="3989" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="808.31" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="919.6" y="3509" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="869.4" y="3669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.37" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="822.7" y="3829" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.swap (2 samples, 0.02%)</title><rect x="312.5" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="315.49" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.write (3 samples, 0.04%)</title><rect x="693.9" y="4709" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="696.87" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (4 samples, 0.05%)</title><rect x="877.7" y="3525" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="880.72" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOfObject (2 samples, 0.02%)</title><rect x="341.4" y="4485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="344.43" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (39 samples, 0.48%)</title><rect x="980.7" y="3557" width="5.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="983.66" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="947.7" y="3125" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.default.Stream/fn--12553 (2 samples, 0.02%)</title><rect x="511.2" y="4501" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="514.17" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeFlush0 (84 samples, 1.02%)</title><rect x="680.2" y="4645" width="12.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.19" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (5 samples, 0.06%)</title><rect x="1108.5" y="4869" width="0.7" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text text-anchor="" x="1111.51" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="808.0" y="3941" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="811.04" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.core/generate-string (284 samples, 3.47%)</title><rect x="748.0" y="4597" width="40.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.00" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >che..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (8 samples, 0.10%)</title><rect x="758.7" y="3541" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="974.2" y="3237" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="977.18" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="813.7" y="3669" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.66" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="822.0" y="3973" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (3 samples, 0.04%)</title><rect x="838.0" y="4005" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="840.99" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="985.4" y="3061" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="988.41" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (6 samples, 0.07%)</title><rect x="967.6" y="3573" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::do_all_blocks() (16 samples, 0.20%)</title><rect x="1172.3" y="4853" width="2.3" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text text-anchor="" x="1175.29" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method (2 samples, 0.02%)</title><rect x="969.9" y="3429" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Start.match (3 samples, 0.04%)</title><rect x="732.0" y="4309" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="735.02" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>compojure.core/wrap-route-middleware/fn--20603 (3 samples, 0.04%)</title><rect x="1057.5" y="4997" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1060.55" y="5007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyResponse.get__0 (2 samples, 0.02%)</title><rect x="377.4" y="4757" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="380.42" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seqFrom (7 samples, 0.09%)</title><rect x="334.5" y="4533" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="337.51" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1018.7" y="1301" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="978.1" y="2837" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (3 samples, 0.04%)</title><rect x="958.5" y="3541" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="961.49" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="904.1" y="3557" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="907.07" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (5 samples, 0.06%)</title><rect x="1006.1" y="2869" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="854.1" y="3669" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="857.11" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="752.2" y="2693" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.18" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="1007.9" y="2437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1010.87" y="2447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (57 samples, 0.70%)</title><rect x="211.8" y="4501" width="8.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="214.85" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (27 samples, 0.33%)</title><rect x="770.2" y="4069" width="3.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.18" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1010.3" y="2229" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.32" y="2239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="967.6" y="3349" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="807.6" y="3669" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="810.61" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="756.8" y="3221" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/listener-exists? (17 samples, 0.21%)</title><rect x="336.1" y="4565" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="339.10" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="861.6" y="3749" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="864.60" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="1010.2" y="2421" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.18" y="2431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (64 samples, 0.78%)</title><rect x="941.5" y="3941" width="9.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="944.50" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="861.6" y="3733" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="864.60" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="756.8" y="3189" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.get (2 samples, 0.02%)</title><rect x="279.8" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="282.80" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="865.2" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="1010.2" y="2437" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.18" y="2447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client-middleware/url-encode-illegal-characters (32 samples, 0.39%)</title><rect x="728.1" y="4405" width="4.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="731.14" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="914.0" y="3765" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="917.00" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (7 samples, 0.09%)</title><rect x="832.2" y="3861" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="835.23" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="975.0" y="3365" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.05" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentVector$ChunkedSeq.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1030.0" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1033.05" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="837.0" y="3957" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="839.98" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="774.6" y="3813" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="752.2" y="2709" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.18" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="953.0" y="3589" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.02" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (27 samples, 0.33%)</title><rect x="770.2" y="4149" width="3.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.18" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="356.3" y="4421" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="359.25" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="832.2" y="3669" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="835.23" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (126 samples, 1.54%)</title><rect x="827.6" y="4373" width="18.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="830.62" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.misc.Unsafe.unpark (25 samples, 0.31%)</title><rect x="378.4" y="4741" width="3.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="381.43" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (76 samples, 0.93%)</title><rect x="1009.3" y="2805" width="11.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.31" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.invoke (15 samples, 0.18%)</title><rect x="281.7" y="4533" width="2.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="284.68" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (11 samples, 0.13%)</title><rect x="495.0" y="4565" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="498.04" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="968.1" y="3509" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="971.14" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/success! (6 samples, 0.07%)</title><rect x="492.6" y="4069" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="495.60" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="923.2" y="3637" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="926.22" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::do_one_block() (8 samples, 0.10%)</title><rect x="1172.9" y="4677" width="1.1" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text text-anchor="" x="1175.87" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.Reader.read (22 samples, 0.27%)</title><rect x="81.0" y="4645" width="3.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="83.98" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="96.1" y="4389" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="99.10" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="1009.3" y="2741" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.31" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyRequest.get_STAR_ (2 samples, 0.02%)</title><rect x="78.7" y="4693" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="81.67" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (5 samples, 0.06%)</title><rect x="347.0" y="4565" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="350.04" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>BufferBlob::create(char const*, int) (4 samples, 0.05%)</title><rect x="1107.5" y="4821" width="0.6" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text text-anchor="" x="1110.50" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (25 samples, 0.31%)</title><rect x="749.2" y="2981" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.getMethods (5 samples, 0.06%)</title><rect x="129.1" y="4661" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="132.07" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="966.7" y="3061" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="969.70" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (1,070 samples, 13.06%)</title><rect x="873.7" y="4341" width="154.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="876.69" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.lang.LongRa..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (8 samples, 0.10%)</title><rect x="1018.5" y="1541" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1021.53" y="1551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="817.4" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.40" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="842.6" y="3605" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.59" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="824.3" y="3893" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="827.31" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="869.4" y="3877" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.37" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (7 samples, 0.09%)</title><rect x="765.6" y="3829" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="768.57" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (8 samples, 0.10%)</title><rect x="884.6" y="3717" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="887.63" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (6 samples, 0.07%)</title><rect x="856.4" y="3909" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="859.42" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="871.4" y="3685" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="874.39" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (7 samples, 0.09%)</title><rect x="925.8" y="3797" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="928.81" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.DefaultHttpRequest.&lt;init&gt; (2 samples, 0.02%)</title><rect x="720.4" y="4149" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="723.36" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="953.7" y="3205" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.java.io/inputstream-&gt;reader (9 samples, 0.11%)</title><rect x="79.3" y="4613" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="82.25" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>write (16 samples, 0.20%)</title><rect x="721.2" y="4053" width="2.3" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text text-anchor="" x="724.22" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="823.6" y="3829" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="826.59" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="936.0" y="3349" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="939.03" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>swtch_pri (64 samples, 0.78%)</title><rect x="1092.1" y="4933" width="9.2" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text text-anchor="" x="1095.10" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="963.7" y="3157" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="966.67" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/partial/fn--5857 (6 samples, 0.07%)</title><rect x="478.9" y="4373" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="481.92" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="749.3" y="693" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1008.9" y="2421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Box.&lt;init&gt; (2 samples, 0.02%)</title><rect x="354.1" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="357.09" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.deref (2 samples, 0.02%)</title><rect x="359.6" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="362.57" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (11 samples, 0.13%)</title><rect x="876.9" y="3701" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="879.86" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (3 samples, 0.04%)</title><rect x="316.5" y="4485" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="319.52" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Listener.onSuccess (32 samples, 0.39%)</title><rect x="719.6" y="4293" width="4.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="722.64" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="312.8" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="315.77" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (4 samples, 0.05%)</title><rect x="74.6" y="4533" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="77.64" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (2 samples, 0.02%)</title><rect x="210.6" y="4517" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="213.55" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="956.5" y="3381" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="959.48" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="780.5" y="3941" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="783.54" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (64 samples, 0.78%)</title><rect x="941.5" y="3973" width="9.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="944.50" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="809.2" y="4037" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="812.19" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (33 samples, 0.40%)</title><rect x="749.2" y="3109" width="4.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="818.6" y="3941" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="821.55" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="836.5" y="3653" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="839.55" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="833.5" y="3989" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="836.52" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="937.0" y="3365" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="940.04" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="786.4" y="4149" width="0.3" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text text-anchor="" x="789.44" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="754.3" y="3061" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="978.1" y="3093" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="995.5" y="2709" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.49" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="977.2" y="3093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="980.21" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.InputStreamReader.read (4 samples, 0.05%)</title><rect x="746.0" y="4469" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="748.99" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.fireChannelRead (21 samples, 0.26%)</title><rect x="477.6" y="4661" width="3.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="480.62" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="935.2" y="3621" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="938.17" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="974.8" y="3493" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOfObject (2 samples, 0.02%)</title><rect x="69.9" y="4965" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="72.89" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (6 samples, 0.07%)</title><rect x="945.1" y="3349" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="948.10" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (16 samples, 0.20%)</title><rect x="986.6" y="3317" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="989.57" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (11 samples, 0.13%)</title><rect x="765.0" y="3845" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (151 samples, 1.84%)</title><rect x="827.6" y="4421" width="21.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="830.62" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="939.5" y="3637" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="942.49" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (13 samples, 0.16%)</title><rect x="760.2" y="3765" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="954.6" y="3317" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="957.60" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.server$ring_handler$reify__16656.channelRead (91 samples, 1.11%)</title><rect x="498.8" y="4565" width="13.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="501.79" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (20 samples, 0.24%)</title><rect x="823.0" y="4245" width="2.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="826.01" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (4 samples, 0.05%)</title><rect x="1024.6" y="4005" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1027.58" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="765.7" y="3701" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="768.71" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="864.3" y="3637" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="867.33" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="840.0" y="3397" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="843.00" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="986.7" y="3125" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="989.71" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="901.3" y="3301" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="904.33" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred/fn--11768 (65 samples, 0.79%)</title><rect x="483.2" y="4037" width="9.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="486.24" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (9 samples, 0.11%)</title><rect x="987.6" y="3221" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.57" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeFlush (84 samples, 1.02%)</title><rect x="680.2" y="4661" width="12.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.19" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Obj.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1030.0" y="4373" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1033.05" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="1018.7" y="1205" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="753.0" y="2645" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="756.04" y="2655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="751.9" y="2805" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="754.89" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (4 samples, 0.05%)</title><rect x="172.7" y="3813" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="754.3" y="2725" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (5 samples, 0.06%)</title><rect x="1026.9" y="4309" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1029.88" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.append (2 samples, 0.02%)</title><rect x="790.9" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="793.91" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.stream.ReferencePipeline.filter (3 samples, 0.04%)</title><rect x="201.1" y="4581" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="204.05" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="997.8" y="2533" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="982.7" y="3157" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="985.68" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureCapacityInternal (37 samples, 0.45%)</title><rect x="158.6" y="4613" width="5.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="161.58" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="983.7" y="2933" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.69" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (3 samples, 0.04%)</title><rect x="751.3" y="2453" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="754.32" y="2463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (34 samples, 0.41%)</title><rect x="851.5" y="3925" width="4.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="854.52" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="960.8" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="963.80" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (10 samples, 0.12%)</title><rect x="823.2" y="4149" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="826.16" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="939.8" y="3589" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (3 samples, 0.04%)</title><rect x="834.8" y="3861" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="837.82" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (19 samples, 0.23%)</title><rect x="972.0" y="3413" width="2.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="975.03" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="960.4" y="3429" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="963.36" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="1019.2" y="1093" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.25" y="1103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>compojure.core/wrap-route-middleware/fn--20603 (1,971 samples, 24.05%)</title><rect x="77.8" y="4789" width="283.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="80.81" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >compojure.core/wrap-route-middleware/f..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (11 samples, 0.13%)</title><rect x="805.3" y="3973" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="808.31" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java_start(Thread*) (915 samples, 11.16%)</title><rect x="1058.3" y="4997" width="131.7" height="15.0" fill="rgb(214,70,70)" rx="2" ry="2" />
<text text-anchor="" x="1061.27" y="5007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java_start(Threa..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="757.7" y="3301" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.65" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (61 samples, 0.74%)</title><rect x="263.2" y="4453" width="8.8" height="15.0" fill="rgb(226,88,88)" rx="2" ry="2" />
<text text-anchor="" x="266.25" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/CatListener/fn--19538 (95 samples, 1.16%)</title><rect x="332.6" y="4597" width="13.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="335.64" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Thread.sleep (60 samples, 0.73%)</title><rect x="1039.1" y="4965" width="8.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1042.12" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred/fn--11768 (58 samples, 0.71%)</title><rect x="484.0" y="3877" width="8.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="486.96" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="822.7" y="3925" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RestFn.invoke (5 samples, 0.06%)</title><rect x="374.5" y="4837" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="377.54" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/success! (65 samples, 0.79%)</title><rect x="483.2" y="4069" width="9.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="486.24" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.swap (10 samples, 0.12%)</title><rect x="353.7" y="4533" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="356.66" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (8 samples, 0.10%)</title><rect x="951.9" y="3493" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="954.87" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (3 samples, 0.04%)</title><rect x="69.3" y="5029" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="72.32" y="5039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextAfterName (2 samples, 0.02%)</title><rect x="113.4" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="116.37" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/map/fn--5884 (5 samples, 0.06%)</title><rect x="507.1" y="4405" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="510.14" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="836.3" y="3797" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="839.26" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="871.4" y="3717" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="874.39" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.equal (2 samples, 0.02%)</title><rect x="882.3" y="3429" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="885.33" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="864.3" y="3733" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="867.33" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (5 samples, 0.06%)</title><rect x="896.9" y="3557" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="899.87" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client/client-handler/handle-response--16895 (91 samples, 1.11%)</title><rect x="481.1" y="4629" width="13.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="484.08" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (4 samples, 0.05%)</title><rect x="281.7" y="4485" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="284.68" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText (2 samples, 0.02%)</title><rect x="93.5" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="96.50" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="915.2" y="3413" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="918.16" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="996.2" y="2917" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.21" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (2 samples, 0.02%)</title><rect x="296.1" y="4485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="299.07" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method (3 samples, 0.04%)</title><rect x="801.7" y="4485" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="804.71" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="978.6" y="3013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.65" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (7 samples, 0.09%)</title><rect x="839.6" y="3781" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="842.57" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="779.1" y="3893" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="817.8" y="3845" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="820.83" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (7 samples, 0.09%)</title><rect x="867.6" y="4021" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="870.65" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="995.5" y="2789" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.49" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (38 samples, 0.46%)</title><rect x="969.9" y="3733" width="5.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="970.7" y="3061" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="973.73" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="890.0" y="3701" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (10 samples, 0.12%)</title><rect x="991.2" y="3125" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="994.17" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="763.6" y="3621" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.55" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int) (478 samples, 5.83%)</title><rect x="1106.6" y="4917" width="68.9" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text text-anchor="" x="1109.64" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >C2Compi..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (6 samples, 0.07%)</title><rect x="763.8" y="3669" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.84" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="757.7" y="3333" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.65" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="959.1" y="3589" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="962.07" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.substring (2 samples, 0.02%)</title><rect x="792.6" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="795.64" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (18 samples, 0.22%)</title><rect x="911.7" y="3861" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="914.70" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="929.6" y="3445" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="932.55" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (15 samples, 0.18%)</title><rect x="810.9" y="3957" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="813.92" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="925.1" y="3685" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="928.09" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="988.3" y="3045" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.29" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="989.4" y="2981" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="992.45" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (3 samples, 0.04%)</title><rect x="820.7" y="4165" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="823.71" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="785.7" y="4117" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.72" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (4 samples, 0.05%)</title><rect x="775.5" y="3813" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.50" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="1000.1" y="2885" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1003.10" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$ArrayNode.find (2 samples, 0.02%)</title><rect x="296.4" y="4485" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="299.36" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken (8 samples, 0.10%)</title><rect x="103.9" y="4517" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="106.87" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="837.0" y="4053" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="839.98" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="977.2" y="3189" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="980.21" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred/fn--11768 (42 samples, 0.51%)</title><rect x="362.0" y="4901" width="6.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="365.01" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format (2 samples, 0.02%)</title><rect x="875.9" y="3909" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="878.85" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (6 samples, 0.07%)</title><rect x="962.1" y="3429" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (2 samples, 0.02%)</title><rect x="967.0" y="3285" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="969.99" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (10 samples, 0.12%)</title><rect x="172.7" y="3989" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.onRealized (2 samples, 0.02%)</title><rect x="483.0" y="4149" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="485.95" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (3 samples, 0.04%)</title><rect x="316.5" y="4469" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="319.52" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="816.4" y="3941" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="819.39" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/onto (2 samples, 0.02%)</title><rect x="725.1" y="4453" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="728.11" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="936.0" y="3253" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="939.03" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (5 samples, 0.06%)</title><rect x="775.5" y="3861" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.50" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_jit_write_protect_np (5 samples, 0.06%)</title><rect x="137.0" y="4581" width="0.7" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text text-anchor="" x="139.98" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="842.6" y="3621" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.59" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (2 samples, 0.02%)</title><rect x="888.1" y="3589" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="891.09" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="976.3" y="3205" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.34" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Listener.onSuccess (6 samples, 0.07%)</title><rect x="368.1" y="4933" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="371.06" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (18 samples, 0.22%)</title><rect x="964.7" y="3477" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="1001.1" y="2933" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="809.6" y="3989" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="812.62" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (211 samples, 2.57%)</title><rect x="748.6" y="4341" width="30.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.58" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >cl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (11 samples, 0.13%)</title><rect x="944.7" y="3509" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="947.67" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (12 samples, 0.15%)</title><rect x="852.4" y="3701" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="855.38" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Matcher.group (2 samples, 0.02%)</title><rect x="792.6" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="795.64" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="729.0" y="4261" width="0.3" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text text-anchor="" x="732.00" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="765.0" y="3557" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (29 samples, 0.35%)</title><rect x="975.5" y="3413" width="4.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.48" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (6 samples, 0.07%)</title><rect x="933.9" y="3525" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="936.87" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.write (3 samples, 0.04%)</title><rect x="693.9" y="4693" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="696.87" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="950.1" y="3605" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="953.14" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (10 samples, 0.12%)</title><rect x="813.5" y="3925" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.concurrent.SingleThreadEventExecutor.execute (16 samples, 0.20%)</title><rect x="721.2" y="4149" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="724.22" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (5 samples, 0.06%)</title><rect x="1019.0" y="1413" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.96" y="1423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="765.0" y="3541" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/success! (62 samples, 0.76%)</title><rect x="483.7" y="3989" width="8.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="486.67" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (3 samples, 0.04%)</title><rect x="172.7" y="3493" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1016.1" y="1845" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.08" y="1855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="886.6" y="3285" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="889.65" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="972.5" y="3381" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="975.46" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (5 samples, 0.06%)</title><rect x="912.3" y="3397" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="915.28" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Unsafe_Unpark (11 samples, 0.13%)</title><rect x="372.1" y="4725" width="1.6" height="15.0" fill="rgb(210,65,65)" rx="2" ry="2" />
<text text-anchor="" x="375.09" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="765.3" y="3621" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="768.28" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/assoc--5433 (5 samples, 0.06%)</title><rect x="375.4" y="4853" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="378.40" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (4 samples, 0.05%)</title><rect x="767.7" y="3765" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.73" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.assoc (12 samples, 0.15%)</title><rect x="338.5" y="4485" width="1.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="341.55" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::do_call() (11 samples, 0.13%)</title><rect x="1172.6" y="4741" width="1.6" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text text-anchor="" x="1175.58" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="996.9" y="2725" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.93" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (10 samples, 0.12%)</title><rect x="963.2" y="3461" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="966.24" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="813.5" y="3845" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$ArrayNode.find (2 samples, 0.02%)</title><rect x="326.3" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="329.31" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="749.3" y="949" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="955.6" y="3285" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="958.61" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="207.2" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="210.24" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (5 samples, 0.06%)</title><rect x="992.6" y="3205" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.61" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="967.3" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="970.27" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (20 samples, 0.24%)</title><rect x="797.2" y="4597" width="2.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="800.24" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (17 samples, 0.21%)</title><rect x="946.7" y="3621" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.69" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (8 samples, 0.10%)</title><rect x="292.0" y="4341" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="295.04" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (2 samples, 0.02%)</title><rect x="183.8" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="186.78" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1014.2" y="1973" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1017.21" y="1983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="836.5" y="3589" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="839.55" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="963.8" y="3045" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="966.82" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="983.7" y="3045" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="986.69" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="975.8" y="3141" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.77" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="867.2" y="3957" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="870.21" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="883.9" y="3829" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="886.91" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (2 samples, 0.02%)</title><rect x="304.9" y="4421" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="307.86" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.default.Stream/fn--12571 (90 samples, 1.10%)</title><rect x="481.2" y="4581" width="13.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="484.22" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (38 samples, 0.46%)</title><rect x="362.3" y="4677" width="5.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="365.30" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.cons (4 samples, 0.05%)</title><rect x="74.6" y="4565" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="77.64" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (2 samples, 0.02%)</title><rect x="295.5" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="298.50" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="863.0" y="3477" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="866.04" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="942.2" y="3429" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="945.22" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (128 samples, 1.56%)</title><rect x="850.4" y="4293" width="18.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="853.37" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (5 samples, 0.06%)</title><rect x="878.6" y="3557" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="881.59" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (13 samples, 0.16%)</title><rect x="829.9" y="3829" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="832.92" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="993.9" y="2917" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="996.91" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeMatchingMethod (3 samples, 0.04%)</title><rect x="929.1" y="3253" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="932.12" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.netty/eval15865/append-to-buf!--15866 (6 samples, 0.07%)</title><rect x="672.1" y="4805" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="675.13" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="936.0" y="3493" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="939.03" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand-int (4 samples, 0.05%)</title><rect x="826.2" y="4453" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="829.18" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (11 samples, 0.13%)</title><rect x="944.7" y="3493" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="947.67" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (31 samples, 0.38%)</title><rect x="821.4" y="4469" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="824.43" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Executable.&lt;init&gt; (14 samples, 0.17%)</title><rect x="151.1" y="4533" width="2.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="154.09" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (15 samples, 0.18%)</title><rect x="834.8" y="3909" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="837.82" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1002.5" y="2565" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1005.55" y="2575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="978.1" y="3173" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="854.1" y="3765" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="857.11" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="994.2" y="2949" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.20" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred/fn--11768 (6 samples, 0.07%)</title><rect x="492.6" y="4037" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="495.60" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (13 samples, 0.16%)</title><rect x="935.7" y="3605" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="938.74" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="822.7" y="4229" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.getMethods (2 samples, 0.02%)</title><rect x="830.6" y="3637" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="833.64" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (5 samples, 0.06%)</title><rect x="863.0" y="3701" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="866.04" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWSOrEnd (2 samples, 0.02%)</title><rect x="127.0" y="4661" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="130.05" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (17 samples, 0.21%)</title><rect x="881.5" y="3861" width="2.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="884.47" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.addListener (2 samples, 0.02%)</title><rect x="483.0" y="4117" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="485.95" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="494.3" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="497.32" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="988.9" y="3237" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (10 samples, 0.12%)</title><rect x="813.5" y="3973" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="880.5" y="3781" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="863.2" y="3445" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="866.18" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="1009.3" y="2709" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1012.31" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="765.3" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="768.28" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ciTypeFlow::flow_types() (2 samples, 0.02%)</title><rect x="1106.6" y="4821" width="0.3" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text text-anchor="" x="1109.64" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="887.2" y="3621" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="890.23" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (128 samples, 1.56%)</title><rect x="850.4" y="4325" width="18.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="853.37" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="1010.8" y="2533" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (5 samples, 0.06%)</title><rect x="990.3" y="3029" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="993.31" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (3 samples, 0.04%)</title><rect x="178.6" y="4421" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="181.59" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="897.6" y="3637" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="900.59" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="841.4" y="3653" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="844.44" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (18 samples, 0.22%)</title><rect x="911.7" y="3845" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="914.70" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>nrepl.middleware.session/session-exec/main-loop--5243/fn--5247 (2,321 samples, 28.32%)</title><rect x="700.2" y="4981" width="334.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="703.20" y="4991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >nrepl.middleware.session/session-exec/main-lo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (11 samples, 0.13%)</title><rect x="785.7" y="4309" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.72" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (12 samples, 0.15%)</title><rect x="1004.1" y="2885" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.13" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="952.2" y="3221" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="955.16" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (7 samples, 0.09%)</title><rect x="953.5" y="3477" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.45" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="1009.3" y="2533" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.31" y="2543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (4 samples, 0.05%)</title><rect x="174.7" y="4133" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="177.70" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Java_sun_nio_fs_UnixNativeDispatcher_getgrnam0 (2 samples, 0.02%)</title><rect x="611.8" y="4821" width="0.3" height="15.0" fill="rgb(232,96,96)" rx="2" ry="2" />
<text text-anchor="" x="614.81" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/add-listener! (2 samples, 0.02%)</title><rect x="483.0" y="4133" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="485.95" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (17 samples, 0.21%)</title><rect x="886.2" y="3845" width="2.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="889.22" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="764.3" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.27" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (7 samples, 0.09%)</title><rect x="88.5" y="4261" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="91.47" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="981.8" y="3029" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="984.82" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (149 samples, 1.82%)</title><rect x="999.8" y="3237" width="21.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.81" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (9 samples, 0.11%)</title><rect x="1007.6" y="2645" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.59" y="2655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureCapacityInternal (6 samples, 0.07%)</title><rect x="133.1" y="4629" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="136.10" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="880.5" y="3669" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>compojure.core/wrap-route-matches/fn--20612 (2,000 samples, 24.40%)</title><rect x="73.6" y="4821" width="288.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="76.64" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >compojure.core/wrap-route-matches/fn--..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="915.9" y="3541" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="918.88" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="892.0" y="3797" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="894.98" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::elapsed_counter() (2 samples, 0.02%)</title><rect x="1184.5" y="4933" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text text-anchor="" x="1187.53" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (8 samples, 0.10%)</title><rect x="865.6" y="3797" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="846.3" y="3909" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.34" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpObjectDecoder.decode (10 samples, 0.12%)</title><rect x="476.2" y="4677" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="479.18" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.getMethods (2 samples, 0.02%)</title><rect x="874.0" y="4245" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="876.98" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.java.io/encoding (2 samples, 0.02%)</title><rect x="743.4" y="4485" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="746.40" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Monitor::IWait(Thread*, long) (27 samples, 0.33%)</title><rect x="1185.8" y="4933" width="3.9" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text text-anchor="" x="1188.82" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (15 samples, 0.18%)</title><rect x="852.4" y="3829" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="855.38" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (37 samples, 0.45%)</title><rect x="828.2" y="4085" width="5.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="831.20" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/subscribe--11925/fn--11930 (6 samples, 0.07%)</title><rect x="492.6" y="4005" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="495.60" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="939.2" y="3685" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.20" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (9 samples, 0.11%)</title><rect x="963.4" y="3365" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="966.39" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="873.0" y="3749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.97" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (4 samples, 0.05%)</title><rect x="752.8" y="2757" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.76" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (35 samples, 0.43%)</title><rect x="944.2" y="3669" width="5.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="947.24" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1000.8" y="2661" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1003.82" y="2671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Unsafe_Unpark (24 samples, 0.29%)</title><rect x="378.6" y="4725" width="3.4" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text text-anchor="" x="381.57" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="939.8" y="3605" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (6 samples, 0.07%)</title><rect x="970.7" y="3205" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="973.73" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (29 samples, 0.35%)</title><rect x="975.5" y="3557" width="4.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="978.48" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.get (2 samples, 0.02%)</title><rect x="78.7" y="4741" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="81.67" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="1013.9" y="2117" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.92" y="2127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (26 samples, 0.32%)</title><rect x="889.8" y="4213" width="3.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="892.82" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap$Iter.hasNext (2 samples, 0.02%)</title><rect x="343.0" y="4373" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="346.01" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="833.5" y="4069" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="836.52" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="974.3" y="3141" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="977.33" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="846.3" y="3925" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.34" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="966.6" y="3141" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="969.55" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parker::unpark() (10 samples, 0.12%)</title><rect x="369.6" y="4773" width="1.5" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text text-anchor="" x="372.64" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (78 samples, 0.95%)</title><rect x="749.0" y="3765" width="11.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::PlatformEvent::park() (2 samples, 0.02%)</title><rect x="10.0" y="4917" width="0.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="1013.9" y="2021" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1016.92" y="2031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.FileDispatcherImpl.read0 (85 samples, 1.04%)</title><rect x="515.6" y="4757" width="12.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="518.63" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (7 samples, 0.09%)</title><rect x="962.1" y="3541" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (170 samples, 2.07%)</title><rect x="996.8" y="3317" width="24.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.79" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/swap! (2 samples, 0.02%)</title><rect x="329.6" y="4549" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="332.62" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="762.7" y="3477" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.69" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (6 samples, 0.07%)</title><rect x="337.7" y="4469" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="340.68" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (5 samples, 0.06%)</title><rect x="177.2" y="4309" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="180.15" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (5 samples, 0.06%)</title><rect x="841.3" y="3909" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="844.30" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (4 samples, 0.05%)</title><rect x="762.7" y="3589" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.69" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (54 samples, 0.66%)</title><rect x="749.0" y="3541" width="7.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="923.7" y="3605" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="926.65" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="935.2" y="3365" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="938.17" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="955.6" y="3445" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="958.61" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="817.4" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="820.40" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="495.3" y="4485" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="498.33" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="992.0" y="2965" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="995.04" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (3 samples, 0.04%)</title><rect x="845.2" y="4085" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="848.19" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (8 samples, 0.10%)</title><rect x="756.8" y="3429" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="921.1" y="3333" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="924.06" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="863.0" y="3573" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="866.04" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (18 samples, 0.22%)</title><rect x="899.8" y="3877" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="902.75" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (30 samples, 0.37%)</title><rect x="876.1" y="3845" width="4.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="879.14" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="935.2" y="3493" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="938.17" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractByteBufAllocator.ioBuffer (4 samples, 0.05%)</title><rect x="678.2" y="4789" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="681.18" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (4 samples, 0.05%)</title><rect x="351.4" y="4453" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="354.36" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (7 samples, 0.09%)</title><rect x="881.9" y="3637" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="884.90" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (4 samples, 0.05%)</title><rect x="1028.5" y="4341" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1031.46" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="1011.5" y="2005" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="974.8" y="3301" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="345.2" y="4469" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="348.17" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="905.4" y="3477" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="908.37" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client/http-connection/fn--16976/fn--16977/fn--16983 (38 samples, 0.46%)</title><rect x="672.0" y="4885" width="5.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="674.99" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (7 samples, 0.09%)</title><rect x="871.0" y="4021" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="873.96" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="892.0" y="3861" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.98" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="374.7" y="4789" width="0.3" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text text-anchor="" x="377.68" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.add (3 samples, 0.04%)</title><rect x="798.0" y="4565" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="800.96" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="807.6" y="3909" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="810.61" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand (2 samples, 0.02%)</title><rect x="980.7" y="3301" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="983.66" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.cons (3 samples, 0.04%)</title><rect x="306.9" y="4485" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="309.87" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (2 samples, 0.02%)</title><rect x="1021.8" y="3701" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1024.84" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.graph/async-connect/this--12426 (3 samples, 0.04%)</title><rect x="723.8" y="4245" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="726.82" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers$DoubleOps.multiply (3 samples, 0.04%)</title><rect x="1023.3" y="3925" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1026.28" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="749.3" y="1685" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (5 samples, 0.06%)</title><rect x="1013.8" y="2245" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.78" y="2255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (17 samples, 0.21%)</title><rect x="996.8" y="3157" width="2.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.79" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (5 samples, 0.06%)</title><rect x="920.8" y="3445" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="923.77" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (60 samples, 0.73%)</title><rect x="1011.5" y="2581" width="8.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="917.9" y="3221" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="920.89" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="1008.9" y="2741" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpServerExpectContinueHandler.channelRead (19 samples, 0.23%)</title><rect x="477.8" y="4613" width="2.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="480.77" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="920.8" y="3157" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.77" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (24 samples, 0.29%)</title><rect x="1016.4" y="2117" width="3.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.37" y="2127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.concurrent.SingleThreadEventExecutor.execute (31 samples, 0.38%)</title><rect x="363.0" y="4629" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="366.02" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyResponse.valAt (3 samples, 0.04%)</title><rect x="492.6" y="3925" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="495.60" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.internal.PromiseNotificationUtil.trySuccess (4 samples, 0.05%)</title><rect x="680.3" y="4501" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.34" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.netty/bufs-&gt;array (28 samples, 0.34%)</title><rect x="494.2" y="4629" width="4.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="497.18" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="1016.7" y="1333" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.66" y="1343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="753.9" y="3141" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="756.91" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="773.1" y="3861" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="776.06" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="833.7" y="3829" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="836.67" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="969.0" y="3349" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="972.00" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (9 samples, 0.11%)</title><rect x="746.7" y="4517" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="749.71" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll.Segment.toString (35 samples, 0.43%)</title><rect x="220.2" y="4517" width="5.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="223.20" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="886.5" y="3365" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="889.51" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1009.6" y="2437" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.60" y="2447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (8 samples, 0.10%)</title><rect x="1000.0" y="2965" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.96" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="955.8" y="3125" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="958.76" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="882.0" y="3589" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="885.04" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.cons (22 samples, 0.27%)</title><rect x="291.5" y="4485" width="3.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="294.47" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::enable_wx_from_write(WXMode) (2 samples, 0.02%)</title><rect x="470.4" y="4837" width="0.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text text-anchor="" x="473.42" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (17 samples, 0.21%)</title><rect x="881.5" y="3749" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="884.47" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="840.0" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="843.00" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="904.1" y="3653" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="907.07" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (19 samples, 0.23%)</title><rect x="989.9" y="3301" width="2.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="992.88" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="976.5" y="3141" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.49" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_jit_write_protect_np (2 samples, 0.02%)</title><rect x="470.4" y="4789" width="0.3" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text text-anchor="" x="473.42" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyResponse.assoc (5 samples, 0.06%)</title><rect x="375.4" y="4805" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="378.40" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (65 samples, 0.79%)</title><rect x="1010.8" y="2645" width="9.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$CharProperty.match (21 samples, 0.26%)</title><rect x="728.9" y="4309" width="3.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="731.86" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (12 samples, 0.15%)</title><rect x="967.6" y="3765" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="947.8" y="3029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.84" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="819.1" y="3957" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="822.13" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1004.9" y="2485" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.85" y="2495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.02%)</title><rect x="357.6" y="4405" width="0.2" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text text-anchor="" x="360.55" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.swap (25 samples, 0.31%)</title><rect x="284.0" y="4517" width="3.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="286.98" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hasheq (4 samples, 0.05%)</title><rect x="282.8" y="4437" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="285.83" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (14 samples, 0.17%)</title><rect x="829.8" y="3861" width="2.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="832.78" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="970.7" y="3093" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="973.73" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="970.7" y="3125" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="973.73" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="749.3" y="581" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="848.1" y="3877" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="851.06" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="935.2" y="3477" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="938.17" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="962.1" y="3237" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/second--5409 (4 samples, 0.05%)</title><rect x="737.1" y="4565" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="740.06" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="760.4" y="2965" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.39" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (5 samples, 0.06%)</title><rect x="1026.9" y="4261" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1029.88" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (16 samples, 0.20%)</title><rect x="993.6" y="3205" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.62" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (15 samples, 0.18%)</title><rect x="749.2" y="2597" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.seq (2 samples, 0.02%)</title><rect x="208.8" y="4341" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.83" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="760.4" y="3173" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.39" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (15 samples, 0.18%)</title><rect x="958.9" y="3813" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="961.92" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="960.4" y="3477" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="963.36" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="995.9" y="3253" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="998.92" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (1,240 samples, 15.13%)</title><rect x="849.4" y="4389" width="178.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="852.36" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.client/rand-json</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (10 samples, 0.12%)</title><rect x="890.0" y="4037" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (2 samples, 0.02%)</title><rect x="762.8" y="3381" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.83" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1019.4" y="821" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1022.39" y="831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="992.2" y="2789" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.18" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (3 samples, 0.04%)</title><rect x="775.1" y="3877" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.07" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.assoc (2 samples, 0.02%)</title><rect x="65.6" y="4965" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="68.57" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="892.1" y="3637" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="895.12" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/catch' (2 samples, 0.02%)</title><rect x="505.6" y="4453" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="508.55" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (7 samples, 0.09%)</title><rect x="765.6" y="3749" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="768.57" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1013.2" y="2005" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="2015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpObjectDecoder.readHeaders (7 samples, 0.09%)</title><rect x="475.2" y="4661" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="478.18" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.KeywordLookupSite.get (2 samples, 0.02%)</title><rect x="743.4" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="746.40" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (38 samples, 0.46%)</title><rect x="828.1" y="4149" width="5.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="831.05" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (220 samples, 2.68%)</title><rect x="989.7" y="3461" width="31.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="992.73" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >cl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.util.TextBuffer.contentsAsString (3 samples, 0.04%)</title><rect x="106.5" y="4517" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="109.46" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (10 samples, 0.12%)</title><rect x="779.1" y="4053" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client-middleware/eval17697/opt--17700 (2 samples, 0.02%)</title><rect x="374.0" y="4837" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="376.96" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="995.6" y="2469" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.assoc (16 samples, 0.20%)</title><rect x="285.1" y="4437" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="288.13" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (211 samples, 2.57%)</title><rect x="748.6" y="4325" width="30.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.58" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >cl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="892.0" y="3813" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="894.98" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="1009.3" y="2629" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.31" y="2639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (8 samples, 0.10%)</title><rect x="1011.5" y="2469" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="930.4" y="3365" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="933.42" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (67 samples, 0.82%)</title><rect x="749.0" y="3605" width="9.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (8 samples, 0.10%)</title><rect x="1000.0" y="2981" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1002.96" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="974.8" y="3477" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="883.5" y="3589" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="886.48" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.DefaultLastHttpContent.touch (3 samples, 0.04%)</title><rect x="693.4" y="4709" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="696.44" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (5 samples, 0.06%)</title><rect x="949.4" y="3685" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="1010.8" y="2421" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="953.7" y="2885" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="757.7" y="3253" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.65" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (34 samples, 0.41%)</title><rect x="851.5" y="3909" width="4.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="854.52" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (17 samples, 0.21%)</title><rect x="928.8" y="3557" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="931.83" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="749.3" y="1109" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.format (2 samples, 0.02%)</title><rect x="969.6" y="3637" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.58" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="972.5" y="3349" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="975.46" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (7 samples, 0.09%)</title><rect x="780.5" y="4069" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="783.54" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="781.1" y="3941" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="784.12" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="892.0" y="3845" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.98" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (239 samples, 2.92%)</title><rect x="748.6" y="4357" width="34.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.58" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >cl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="987.7" y="3045" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1016.7" y="1605" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.66" y="1615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="1014.6" y="2149" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1017.64" y="2159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (6 samples, 0.07%)</title><rect x="957.2" y="3301" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="960.20" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="812.4" y="3797" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="815.36" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (2 samples, 0.02%)</title><rect x="182.8" y="4485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="185.77" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1017.4" y="1429" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter$FormatSpecifier.print (9 samples, 0.11%)</title><rect x="790.3" y="4533" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="793.33" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SafepointSynchronize::block(JavaThread*) (2 samples, 0.02%)</title><rect x="10.0" y="4981" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="4991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="813.1" y="3957" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.08" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="939.2" y="3653" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="942.20" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::WXWriteFromExecSetter::~WXWriteFromExecSetter() (2 samples, 0.02%)</title><rect x="712.9" y="4485" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text text-anchor="" x="715.87" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="763.8" y="3525" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.84" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (54 samples, 0.66%)</title><rect x="951.1" y="3813" width="7.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="954.15" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method (101 samples, 1.23%)</title><rect x="172.5" y="4629" width="14.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.55" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="832.2" y="3701" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="835.23" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpObjectEncoder.encode (5 samples, 0.06%)</title><rect x="676.7" y="4549" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="679.74" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="750.0" y="1733" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="753.02" y="1743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="822.7" y="3781" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="816.4" y="3877" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="819.39" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="965.4" y="3317" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="968.40" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="768.4" y="3717" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="771.45" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="929.0" y="3301" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="931.98" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="884.9" y="3541" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="887.92" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="884.9" y="3557" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="887.92" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (69 samples, 0.84%)</title><rect x="951.1" y="3861" width="10.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="954.15" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (10 samples, 0.12%)</title><rect x="981.2" y="3173" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="984.24" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="987.7" y="2821" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (10 samples, 0.12%)</title><rect x="877.0" y="3621" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="880.00" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyRequest.assoc (5 samples, 0.06%)</title><rect x="74.5" y="4645" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="77.50" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (8 samples, 0.10%)</title><rect x="749.2" y="2053" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="968.1" y="3349" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.14" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="975.0" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.05" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="1010.2" y="2549" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.18" y="2559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (2 samples, 0.02%)</title><rect x="327.3" y="4485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="330.32" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="970.7" y="3173" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="973.73" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="843.6" y="3557" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="846.60" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="946.3" y="3269" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (27 samples, 0.33%)</title><rect x="1015.9" y="2165" width="3.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.94" y="2175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="811.4" y="3733" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="814.35" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.net.URLStreamHandler.parseURL (2 samples, 0.02%)</title><rect x="733.0" y="4357" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="736.03" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (12 samples, 0.15%)</title><rect x="967.6" y="3717" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="995.6" y="2229" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (6 samples, 0.07%)</title><rect x="816.4" y="3957" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="819.39" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (33 samples, 0.40%)</title><rect x="868.8" y="4261" width="4.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="871.80" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (7 samples, 0.09%)</title><rect x="1004.9" y="2693" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.85" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.02%)</title><rect x="1171.6" y="4789" width="0.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text text-anchor="" x="1174.57" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="981.8" y="2981" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="984.82" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.ReflectionFactory.copyMethod (2 samples, 0.02%)</title><rect x="858.9" y="3701" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="861.86" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.02%)</title><rect x="1171.3" y="4821" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text text-anchor="" x="1174.28" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (11 samples, 0.13%)</title><rect x="970.3" y="3317" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="973.30" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (176 samples, 2.15%)</title><rect x="748.7" y="4181" width="25.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.72" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="891.4" y="3781" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="894.40" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="871.4" y="3781" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.39" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.NativeThread.current (4 samples, 0.05%)</title><rect x="527.9" y="4805" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="530.87" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (7 samples, 0.09%)</title><rect x="775.5" y="3973" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.50" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="774.6" y="3877" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="884.1" y="3717" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="887.06" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="880.5" y="3909" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="970.4" y="3189" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="973.44" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="978.1" y="3061" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.ReflectAccess.copyMethod (3 samples, 0.04%)</title><rect x="129.2" y="4613" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="132.21" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="833.7" y="3893" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="836.67" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatterBuilder$NumberPrinterParser.format (2 samples, 0.02%)</title><rect x="942.5" y="3317" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="945.51" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Matcher.group (6 samples, 0.07%)</title><rect x="307.7" y="4533" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="310.74" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="842.4" y="3653" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.45" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="750.7" y="2325" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="753.74" y="2335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (6 samples, 0.07%)</title><rect x="900.2" y="3541" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="903.18" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="339.6" y="4357" width="0.2" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text text-anchor="" x="342.55" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="965.4" y="3157" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="968.40" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/format (29 samples, 0.35%)</title><rect x="738.1" y="4613" width="4.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="741.07" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::WXWriteFromExecSetter::WXWriteFromExecSetter() (3 samples, 0.04%)</title><rect x="469.8" y="4853" width="0.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text text-anchor="" x="472.85" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/CatFullListener/fn--19542 (55 samples, 0.67%)</title><rect x="324.7" y="4597" width="7.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="327.72" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="968.4" y="3461" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.43" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (10 samples, 0.12%)</title><rect x="963.2" y="3397" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="966.24" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (6 samples, 0.07%)</title><rect x="758.7" y="3461" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (2 samples, 0.02%)</title><rect x="938.0" y="3701" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="941.05" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (3 samples, 0.04%)</title><rect x="802.9" y="4261" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="805.86" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (4 samples, 0.05%)</title><rect x="758.7" y="3445" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="892.6" y="3797" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="895.55" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (16 samples, 0.20%)</title><rect x="993.6" y="3269" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="996.62" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="938.5" y="3477" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (12 samples, 0.15%)</title><rect x="942.1" y="3541" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="945.08" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="774.6" y="3797" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (8 samples, 0.10%)</title><rect x="905.4" y="3589" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="908.37" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.CountDownLatch.await (82 samples, 1.00%)</title><rect x="701.5" y="4597" width="11.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="704.50" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="964.3" y="3205" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="967.25" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="967.7" y="3317" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="970.71" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="920.8" y="3205" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="923.77" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="991.2" y="2869" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.17" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="837.6" y="3861" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="840.55" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="835.4" y="3653" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="838.40" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (6 samples, 0.07%)</title><rect x="1012.8" y="2405" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.77" y="2415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.append (4 samples, 0.05%)</title><rect x="790.6" y="4469" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="793.62" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (34 samples, 0.41%)</title><rect x="969.9" y="3509" width="4.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (19 samples, 0.23%)</title><rect x="935.0" y="3669" width="2.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="938.02" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.assoc (20 samples, 0.24%)</title><rect x="338.5" y="4501" width="2.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="341.55" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="968.7" y="3333" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="971.71" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (10 samples, 0.12%)</title><rect x="783.3" y="4149" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.28" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (4 samples, 0.05%)</title><rect x="874.0" y="4261" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="876.98" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>RelocIterator::advance_over_prefix() (2 samples, 0.02%)</title><rect x="1177.0" y="4709" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text text-anchor="" x="1180.04" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="1007.9" y="2533" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.87" y="2543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="901.3" y="3461" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="904.33" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="909.4" y="3653" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="912.40" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="919.6" y="3285" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (32 samples, 0.39%)</title><rect x="980.7" y="3445" width="4.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="983.66" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="875.4" y="4037" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="878.42" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.addAll (55 samples, 0.67%)</title><rect x="163.9" y="4629" width="7.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="166.91" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/node-get (2 samples, 0.02%)</title><rect x="325.6" y="4565" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="328.59" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (7 samples, 0.09%)</title><rect x="1030.5" y="4421" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1033.48" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (17 samples, 0.21%)</title><rect x="907.5" y="4165" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="910.53" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="775.5" y="3797" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.50" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (5 samples, 0.06%)</title><rect x="896.9" y="3493" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="899.87" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.server/hash-total (509 samples, 6.21%)</title><rect x="128.8" y="4725" width="73.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="131.78" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Matcher::match() (14 samples, 0.17%)</title><rect x="1109.2" y="4869" width="2.0" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text text-anchor="" x="1112.23" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyResponse.dissoc_STAR_ (4 samples, 0.05%)</title><rect x="376.1" y="4805" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="379.12" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (5 samples, 0.06%)</title><rect x="172.7" y="3877" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="880.5" y="3717" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="763.6" y="3541" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.55" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.DefaultHttpHeaders.add (4 samples, 0.05%)</title><rect x="476.3" y="4645" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="479.33" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="978.6" y="3029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.65" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="822.3" y="3941" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.29" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="891.4" y="3909" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="894.40" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (19 samples, 0.23%)</title><rect x="972.0" y="3461" width="2.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="975.03" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (12 samples, 0.15%)</title><rect x="970.2" y="3429" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="973.15" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (5 samples, 0.06%)</title><rect x="84.4" y="4613" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="87.43" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/unwrap' (3 samples, 0.04%)</title><rect x="506.0" y="4485" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="508.99" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="821.7" y="4277" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="824.72" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (286 samples, 3.49%)</title><rect x="980.5" y="3621" width="41.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="983.52" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="818.7" y="3845" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="821.69" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.graph/async-connect/this--12426/fn--12427 (32 samples, 0.39%)</title><rect x="719.6" y="4277" width="4.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="722.64" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.core/parse-string (293 samples, 3.57%)</title><rect x="85.2" y="4709" width="42.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="88.15" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >che..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.format (2 samples, 0.02%)</title><rect x="876.6" y="3685" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="879.57" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="1000.1" y="2917" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1003.10" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="989.4" y="2965" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.45" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="749.3" y="277" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PoolChunk.free (2 samples, 0.02%)</title><rect x="509.9" y="4373" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="512.87" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="1015.9" y="2117" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.94" y="2127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand-int (3 samples, 0.04%)</title><rect x="800.6" y="4533" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="803.55" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seqFrom (6 samples, 0.07%)</title><rect x="70.8" y="5029" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="73.76" y="5039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="841.3" y="3845" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="844.30" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method (2 samples, 0.02%)</title><rect x="875.9" y="3989" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="878.85" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="1015.6" y="1861" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.65" y="1871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="1015.9" y="2053" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.94" y="2063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (8 samples, 0.10%)</title><rect x="862.8" y="3909" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="865.75" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (7 samples, 0.09%)</title><rect x="994.9" y="2869" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="822.3" y="3957" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.29" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="996.9" y="2821" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.93" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (3 samples, 0.04%)</title><rect x="174.3" y="4101" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="177.27" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName (3 samples, 0.04%)</title><rect x="769.7" y="4101" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="772.74" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.addAll (3 samples, 0.04%)</title><rect x="134.0" y="4645" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="136.96" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="976.9" y="3109" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.92" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (10 samples, 0.12%)</title><rect x="917.7" y="3541" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="920.75" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="752.5" y="2741" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.47" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ring.util.response/response (2 samples, 0.02%)</title><rect x="78.4" y="4725" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="81.39" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (2 samples, 0.02%)</title><rect x="1020.7" y="3045" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1023.69" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="856.4" y="3973" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="859.42" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName (2 samples, 0.02%)</title><rect x="113.7" y="4549" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="116.66" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (16 samples, 0.20%)</title><rect x="938.5" y="3829" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="929.0" y="3413" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="931.98" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="976.3" y="3349" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.34" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (19 samples, 0.23%)</title><rect x="356.8" y="4485" width="2.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="359.83" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="880.5" y="3621" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="973.9" y="3157" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="976.90" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="982.7" y="3093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="985.68" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/assoc--5433 (9 samples, 0.11%)</title><rect x="353.7" y="4517" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="356.66" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.base.ParserBase.getCurrentName (2 samples, 0.02%)</title><rect x="93.2" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="96.22" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (15 samples, 0.18%)</title><rect x="749.2" y="2613" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="811.6" y="3845" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="814.64" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="968.7" y="3301" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="971.71" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (7 samples, 0.09%)</title><rect x="951.9" y="3413" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="954.87" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="926.1" y="3573" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="929.10" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (5 samples, 0.06%)</title><rect x="1024.4" y="4069" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1027.43" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentSet.contains (2 samples, 0.02%)</title><rect x="482.1" y="4325" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="485.09" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="990.7" y="2837" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="993.74" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="872.0" y="3765" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.96" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http/eval18308/request--18312/fn--18314/fn--18317 (130 samples, 1.59%)</title><rect x="717.3" y="4549" width="18.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="720.34" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (9 samples, 0.11%)</title><rect x="963.4" y="3253" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="966.39" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (6 samples, 0.07%)</title><rect x="774.6" y="4005" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.formatTo (3 samples, 0.04%)</title><rect x="929.1" y="3173" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="932.12" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.equiv (2 samples, 0.02%)</title><rect x="747.0" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="750.00" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.success (75 samples, 0.92%)</title><rect x="482.7" y="4341" width="10.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="485.66" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (2 samples, 0.02%)</title><rect x="172.7" y="3429" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.intCast (9 samples, 0.11%)</title><rect x="247.1" y="4437" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="250.12" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PSScavenge::invoke() (10 samples, 0.12%)</title><rect x="1182.2" y="4885" width="1.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text text-anchor="" x="1185.23" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (1,605 samples, 19.58%)</title><rect x="800.6" y="4549" width="231.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="803.55" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.client/rand-json</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (20 samples, 0.24%)</title><rect x="284.7" y="4469" width="2.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="287.70" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1006.4" y="2437" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.43" y="2447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RestFn.invoke (11 samples, 0.13%)</title><rect x="717.8" y="4453" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="720.77" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Monitor::wait(bool, long, bool) (32 samples, 0.39%)</title><rect x="1185.2" y="4949" width="4.7" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text text-anchor="" x="1188.25" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.ReflectionFactory.copyMethod (5 samples, 0.06%)</title><rect x="129.1" y="4629" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="132.07" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (7 samples, 0.09%)</title><rect x="931.3" y="3749" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="934.28" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="904.1" y="3589" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.07" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.IOUtil.write (21 samples, 0.26%)</title><rect x="673.3" y="4421" width="3.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="676.28" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (217 samples, 2.65%)</title><rect x="85.9" y="4597" width="31.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="88.87" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ch..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1002.5" y="2581" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1005.55" y="2591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (28 samples, 0.34%)</title><rect x="922.9" y="4069" width="4.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (4 samples, 0.05%)</title><rect x="889.1" y="3925" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="892.10" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core/eval16483/send-message--16490 (128 samples, 1.56%)</title><rect x="678.0" y="4853" width="18.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="681.03" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="846.3" y="3717" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.34" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="997.8" y="2869" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (5 samples, 0.06%)</title><rect x="945.1" y="3333" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="948.10" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (9 samples, 0.11%)</title><rect x="805.6" y="3797" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="808.59" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (15 samples, 0.18%)</title><rect x="1002.0" y="3093" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.97" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util$4.equiv (3 samples, 0.04%)</title><rect x="281.7" y="4453" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="284.68" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="780.5" y="3925" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="783.54" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="995.6" y="2485" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (8 samples, 0.10%)</title><rect x="951.9" y="3573" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="954.87" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="1015.5" y="2069" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.51" y="2079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (33 samples, 0.40%)</title><rect x="749.2" y="3141" width="4.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.without (3 samples, 0.04%)</title><rect x="376.3" y="4757" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="379.27" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$7.isSatisfiedBy (16 samples, 0.20%)</title><rect x="729.6" y="4261" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="732.58" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (7 samples, 0.09%)</title><rect x="998.2" y="2901" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1001.23" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="1002.3" y="2741" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1005.26" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeMatchingMethod (5 samples, 0.06%)</title><rect x="199.8" y="4581" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="202.76" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (21 samples, 0.26%)</title><rect x="749.2" y="2885" width="3.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="773.1" y="3829" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="776.06" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (10 samples, 0.12%)</title><rect x="991.2" y="3141" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.17" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="967.9" y="3237" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="970.85" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (10 samples, 0.12%)</title><rect x="947.4" y="3557" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.41" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (93 samples, 1.13%)</title><rect x="749.0" y="3861" width="13.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (4 samples, 0.05%)</title><rect x="322.1" y="4501" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="325.13" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (5 samples, 0.06%)</title><rect x="897.6" y="3653" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="900.59" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="983.0" y="3221" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="985.97" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOfObject (4 samples, 0.05%)</title><rect x="356.1" y="4501" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="359.11" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method.getParameterTypes (3 samples, 0.04%)</title><rect x="135.0" y="4613" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="137.97" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentVector$TransientVector.conj (2 samples, 0.02%)</title><rect x="97.1" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="100.10" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (2 samples, 0.02%)</title><rect x="176.3" y="4229" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="179.29" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (16 samples, 0.20%)</title><rect x="993.6" y="3173" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="996.62" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="811.4" y="3781" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="814.35" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (7 samples, 0.09%)</title><rect x="985.3" y="3509" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="988.27" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="995.6" y="2661" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (5 samples, 0.06%)</title><rect x="328.2" y="4357" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="331.18" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.cons (3 samples, 0.04%)</title><rect x="210.0" y="4469" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="212.98" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.assoc (3 samples, 0.04%)</title><rect x="284.3" y="4453" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="287.27" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="765.3" y="3557" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="768.28" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyRequest.valAt (2 samples, 0.02%)</title><rect x="78.7" y="4725" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="81.67" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (40 samples, 0.49%)</title><rect x="961.8" y="3589" width="5.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="964.80" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (9 samples, 0.11%)</title><rect x="877.0" y="3557" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="880.00" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (244 samples, 2.98%)</title><rect x="986.3" y="3573" width="35.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.28" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ex..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken (12 samples, 0.15%)</title><rect x="121.3" y="4613" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="124.29" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="869.8" y="4069" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.80" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="1003.7" y="2997" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1006.70" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="972.5" y="3221" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="975.46" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers$LongOps.combine (2 samples, 0.02%)</title><rect x="801.0" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="803.99" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (13 samples, 0.16%)</title><rect x="760.2" y="3717" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="1008.9" y="2565" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (13 samples, 0.16%)</title><rect x="760.2" y="3733" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (8 samples, 0.10%)</title><rect x="1031.8" y="4533" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1034.77" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter$FormatSpecifier.printInteger (4 samples, 0.05%)</title><rect x="739.2" y="4533" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="742.22" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.add (2 samples, 0.02%)</title><rect x="1031.9" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1034.92" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (6 samples, 0.07%)</title><rect x="836.1" y="3829" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="839.12" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.SourceProxy.take (2 samples, 0.02%)</title><rect x="478.2" y="4309" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="481.20" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="983.3" y="3141" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="986.26" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (19 samples, 0.23%)</title><rect x="895.7" y="3909" width="2.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="898.72" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core/map-&gt;headers! (2 samples, 0.02%)</title><rect x="362.6" y="4597" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="365.59" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="837.0" y="3973" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="839.98" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (13 samples, 0.16%)</title><rect x="1018.0" y="1749" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.95" y="1759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (81 samples, 0.99%)</title><rect x="911.3" y="4005" width="11.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="914.27" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="807.0" y="3845" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="810.03" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="979.8" y="3157" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentVector.cons (2 samples, 0.02%)</title><rect x="511.5" y="4517" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="514.46" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="963.8" y="3061" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="966.82" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/swap! (4 samples, 0.05%)</title><rect x="278.5" y="4533" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="281.51" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="917.9" y="3397" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="920.89" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1017.4" y="1285" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyResponse.assoc_STAR_ (5 samples, 0.06%)</title><rect x="375.4" y="4789" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="378.40" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (9 samples, 0.11%)</title><rect x="949.4" y="3781" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::PlatformEvent::park() (4 samples, 0.05%)</title><rect x="1058.8" y="4901" width="0.6" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text text-anchor="" x="1061.84" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$7.isSatisfiedBy (17 samples, 0.21%)</title><rect x="729.4" y="4277" width="2.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="732.43" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="951.6" y="3637" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="954.58" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="976.3" y="3221" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="979.34" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="936.0" y="3301" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="939.03" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="871.4" y="3797" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.39" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="953.7" y="2933" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (10 samples, 0.12%)</title><rect x="881.9" y="3669" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="884.90" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="980.2" y="3365" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="983.23" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (6 samples, 0.07%)</title><rect x="846.0" y="4197" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.05" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (11 samples, 0.13%)</title><rect x="282.3" y="4517" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="285.25" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.aleph.dirigiste.Executor.startControlLoop (98 samples, 1.20%)</title><rect x="1034.4" y="4981" width="14.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1037.37" y="4991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/swap! (7 samples, 0.09%)</title><rect x="328.0" y="4565" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="331.04" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (17 samples, 0.21%)</title><rect x="996.8" y="3061" width="2.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.79" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="904.2" y="3253" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.21" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$7.isSatisfiedBy (3 samples, 0.04%)</title><rect x="731.3" y="4005" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="734.30" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.ReferenceCountUtil.release (3 samples, 0.04%)</title><rect x="498.4" y="4629" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="501.36" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="753.9" y="3061" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="756.91" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::Parse(JVMState*, ciMethod*, float) (16 samples, 0.20%)</title><rect x="1172.3" y="4869" width="2.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text text-anchor="" x="1175.29" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="891.4" y="3797" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="894.40" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="924.1" y="3685" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="927.08" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (2 samples, 0.02%)</title><rect x="901.8" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="904.77" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (9 samples, 0.11%)</title><rect x="949.4" y="3749" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (16 samples, 0.20%)</title><rect x="783.3" y="4245" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.28" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (7 samples, 0.09%)</title><rect x="313.5" y="4453" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="316.49" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="995.9" y="3173" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="998.92" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/regexp-parse (164 samples, 2.00%)</title><rect x="288.4" y="4581" width="23.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="291.44" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >i..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="905.4" y="3461" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="908.37" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter.&lt;init&gt; (2 samples, 0.02%)</title><rect x="790.0" y="4565" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="793.04" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="1016.4" y="2005" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.37" y="2015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>CodeBuffer::relocate_code_to(CodeBuffer*) const (4 samples, 0.05%)</title><rect x="1174.9" y="4805" width="0.6" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text text-anchor="" x="1177.88" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (4 samples, 0.05%)</title><rect x="179.0" y="4421" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="182.02" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (4 samples, 0.05%)</title><rect x="776.8" y="3957" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="779.80" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="890.7" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="893.68" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client/http-connection/fn--16976/fn--16977 (28 samples, 0.34%)</title><rect x="719.6" y="4181" width="4.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="722.64" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="753.6" y="3013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="756.62" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format (2 samples, 0.02%)</title><rect x="929.1" y="3157" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="932.12" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="122.6" y="4549" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="125.59" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="933.9" y="3669" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="936.87" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1019.4" y="997" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.39" y="1007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="767.2" y="3765" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.15" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (16 samples, 0.20%)</title><rect x="911.7" y="3701" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="914.70" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="953.7" y="2997" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.write (2 samples, 0.02%)</title><rect x="676.4" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="679.45" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::current_thread_enable_wx(WXMode) (2 samples, 0.02%)</title><rect x="381.6" y="4661" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text text-anchor="" x="384.59" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="807.0" y="3861" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="810.03" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="986.7" y="3013" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.71" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.SocketDispatcher.writev (72 samples, 0.88%)</title><rect x="681.2" y="4517" width="10.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="684.20" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="964.3" y="3173" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="967.25" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (4 samples, 0.05%)</title><rect x="336.4" y="4517" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="339.39" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="1006.9" y="2837" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1009.87" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="854.8" y="3781" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="857.83" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1009.6" y="2373" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.60" y="2383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="916.6" y="3589" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="919.60" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="886.5" y="3525" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="889.51" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (2 samples, 0.02%)</title><rect x="482.1" y="4277" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="485.09" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (5 samples, 0.06%)</title><rect x="88.5" y="4245" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="91.47" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="986.7" y="3029" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.71" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RestFn.applyTo (7 samples, 0.09%)</title><rect x="507.9" y="4469" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="510.86" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (29 samples, 0.35%)</title><rect x="975.5" y="3589" width="4.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="978.48" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (27 samples, 0.33%)</title><rect x="1015.9" y="2197" width="3.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.94" y="2207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="832.2" y="3781" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="835.23" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="865.9" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="749.3" y="1157" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="952.6" y="3333" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="955.59" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="955.6" y="3237" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="958.61" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="1016.7" y="1557" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.66" y="1567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Double.valueOf (3 samples, 0.04%)</title><rect x="1023.3" y="3909" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1026.28" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.AFn.applyTo (2,321 samples, 28.32%)</title><rect x="700.2" y="4773" width="334.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="703.20" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.lang.AFn.applyTo</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Node.match (20 samples, 0.24%)</title><rect x="274.0" y="4485" width="2.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="277.05" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util$4.equiv (10 samples, 0.12%)</title><rect x="37.5" y="5013" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="40.50" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (9 samples, 0.11%)</title><rect x="890.0" y="3941" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="1016.4" y="1893" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.37" y="1903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="754.3" y="3141" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.default.Stream.put (91 samples, 1.11%)</title><rect x="481.1" y="4613" width="13.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="484.08" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="960.5" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="963.51" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="992.6" y="3317" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="995.61" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="983.0" y="3077" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="985.97" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="812.4" y="3813" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="815.36" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (21 samples, 0.26%)</title><rect x="749.2" y="2821" width="3.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (34 samples, 0.41%)</title><rect x="969.9" y="3669" width="4.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.first (2 samples, 0.02%)</title><rect x="717.3" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="720.34" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (23 samples, 0.28%)</title><rect x="955.0" y="3557" width="3.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="958.04" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.FileDispatcherImpl.writev0 (20 samples, 0.24%)</title><rect x="673.4" y="4389" width="2.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="676.43" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (11 samples, 0.13%)</title><rect x="783.3" y="4213" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.28" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.MultiFn.invoke (22 samples, 0.27%)</title><rect x="744.8" y="4565" width="3.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="747.84" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="755.1" y="3365" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.06" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (21 samples, 0.26%)</title><rect x="749.2" y="2869" width="3.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (42 samples, 0.51%)</title><rect x="932.3" y="3781" width="6.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="935.29" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="749.3" y="597" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (40 samples, 0.49%)</title><rect x="961.8" y="3717" width="5.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="964.80" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (10 samples, 0.12%)</title><rect x="1002.1" y="2773" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1005.12" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="886.5" y="3317" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="889.51" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="880.5" y="3525" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="847.1" y="4021" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="850.06" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.&lt;init&gt; (2 samples, 0.02%)</title><rect x="119.6" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="122.56" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.writeAndFlush (31 samples, 0.38%)</title><rect x="673.0" y="4773" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (34 samples, 0.41%)</title><rect x="917.2" y="3733" width="4.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="920.17" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (6 samples, 0.07%)</title><rect x="947.7" y="3477" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (18 samples, 0.22%)</title><rect x="911.7" y="3877" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="914.70" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.internal.ReferenceCountUpdater.nonVolatileRawCnt (2 samples, 0.02%)</title><rect x="510.4" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="513.45" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (101 samples, 1.23%)</title><rect x="1006.1" y="2965" width="14.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.nio.NioEventLoop.processSelectedKey (382 samples, 4.66%)</title><rect x="473.6" y="4901" width="55.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="476.59" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io.ne..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.server/ring-handler/process-content--16644 (3 samples, 0.04%)</title><rect x="498.8" y="4549" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="501.79" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="882.9" y="3637" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="885.91" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="750.7" y="2341" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="753.74" y="2351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>byte_streams$eval15443$f__15332__auto____15444$this__12089__auto____15447$fn__15448.invoke (3 samples, 0.04%)</title><rect x="478.1" y="4325" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="481.06" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="1019.2" y="1109" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.25" y="1119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.pcequiv (2 samples, 0.02%)</title><rect x="356.3" y="4469" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="359.25" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (16 samples, 0.20%)</title><rect x="986.6" y="3413" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="989.57" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (5 samples, 0.06%)</title><rect x="1013.8" y="2213" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1016.78" y="2223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.equal (2 samples, 0.02%)</title><rect x="356.3" y="4405" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="359.25" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (9 samples, 0.11%)</title><rect x="1031.6" y="4549" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1034.63" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.graph/async-connect/this--12426 (2 samples, 0.02%)</title><rect x="479.4" y="4245" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="482.35" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="822.3" y="3829" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.29" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Murmur3.hashUnordered (15 samples, 0.18%)</title><rect x="292.0" y="4373" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="295.04" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (18 samples, 0.22%)</title><rect x="291.9" y="4421" width="2.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="294.90" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (4 samples, 0.05%)</title><rect x="1024.6" y="4037" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1027.58" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="964.7" y="3333" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="749.3" y="485" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-result (25 samples, 0.31%)</title><rect x="342.7" y="4581" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="345.72" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (798 samples, 9.74%)</title><rect x="910.3" y="4149" width="114.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="913.26" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.client..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (19 samples, 0.23%)</title><rect x="989.9" y="3253" width="2.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="992.88" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1004.9" y="2581" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.85" y="2591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/apply (2,321 samples, 28.32%)</title><rect x="700.2" y="4789" width="334.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="703.20" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.core/apply</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="997.8" y="2805" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (9 samples, 0.11%)</title><rect x="963.4" y="3333" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="966.39" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="818.8" y="3685" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="821.84" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="208.8" y="4389" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.83" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="765.3" y="3525" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="768.28" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead (21 samples, 0.26%)</title><rect x="477.6" y="4677" width="3.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="480.62" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/mapcat (18 samples, 0.22%)</title><rect x="495.0" y="4597" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="498.04" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="1018.7" y="1269" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="1007.6" y="2389" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.59" y="2399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.server/hash-total (509 samples, 6.21%)</title><rect x="128.8" y="4709" width="73.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="131.78" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (15 samples, 0.18%)</title><rect x="958.9" y="3749" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="961.92" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="995.9" y="3237" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="998.92" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (3 samples, 0.04%)</title><rect x="172.7" y="3621" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="994.2" y="2789" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.20" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="931.0" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="933.99" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (4 samples, 0.05%)</title><rect x="779.1" y="3941" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="1003.7" y="3045" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1006.70" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (31 samples, 0.38%)</title><rect x="884.5" y="3957" width="4.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="887.49" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="968.4" y="3333" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="971.43" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="953.7" y="3109" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="996.5" y="2997" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.50" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (8 samples, 0.10%)</title><rect x="823.4" y="3989" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="826.45" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-listener/fn--19499 (328 samples, 4.00%)</title><rect x="277.4" y="4613" width="47.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="280.36" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >inst..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Curly.match (2 samples, 0.02%)</title><rect x="796.2" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="799.23" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (12 samples, 0.15%)</title><rect x="1002.0" y="2997" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1004.97" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (7 samples, 0.09%)</title><rect x="925.8" y="3813" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="928.81" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (15 samples, 0.18%)</title><rect x="891.4" y="4005" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.40" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (5 samples, 0.06%)</title><rect x="992.6" y="3301" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.61" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Curly.match (6 samples, 0.07%)</title><rect x="309.9" y="4469" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="312.90" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (7 samples, 0.09%)</title><rect x="755.5" y="3413" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.49" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="991.5" y="2805" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.46" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (7 samples, 0.09%)</title><rect x="1018.7" y="1493" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.assoc (4 samples, 0.05%)</title><rect x="354.1" y="4453" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="357.09" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="847.2" y="3941" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="850.20" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="817.4" y="3557" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="820.40" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="806.9" y="3941" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="809.89" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (12 samples, 0.15%)</title><rect x="854.5" y="3829" width="1.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="857.54" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (11 samples, 0.13%)</title><rect x="758.7" y="3637" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="983.0" y="3141" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="985.97" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.equal (2 samples, 0.02%)</title><rect x="803.6" y="4005" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="806.58" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (11 samples, 0.13%)</title><rect x="303.0" y="4437" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="305.98" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="924.2" y="3573" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="927.23" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="987.1" y="3093" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="990.14" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.02%)</title><rect x="1170.1" y="4821" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text text-anchor="" x="1173.13" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="1015.9" y="2021" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.94" y="2031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (8 samples, 0.10%)</title><rect x="978.1" y="3189" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="775.1" y="3829" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.07" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="866.3" y="3541" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="869.35" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="842.6" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.59" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="955.6" y="3461" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="958.61" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="785.7" y="4069" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.72" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="836.5" y="3733" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="839.55" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (2 samples, 0.02%)</title><rect x="181.9" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="184.90" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (6 samples, 0.07%)</title><rect x="878.6" y="3701" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="881.59" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="749.3" y="1189" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (5 samples, 0.06%)</title><rect x="177.2" y="4293" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="180.15" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="786.7" y="4165" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="789.73" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Unsafe_Unpark (3 samples, 0.04%)</title><rect x="371.4" y="4741" width="0.4" height="15.0" fill="rgb(211,67,67)" rx="2" ry="2" />
<text text-anchor="" x="374.37" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (7 samples, 0.09%)</title><rect x="841.3" y="3925" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="844.30" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (14 samples, 0.17%)</title><rect x="904.6" y="3685" width="2.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="907.65" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="1016.9" y="1717" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="1727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="938.5" y="3717" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyRequest.assoc (6 samples, 0.07%)</title><rect x="499.4" y="4437" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="502.36" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="884.9" y="3509" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="887.92" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (10 samples, 0.12%)</title><rect x="963.2" y="3429" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="966.24" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="932.7" y="3461" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="935.72" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Matcher.group (36 samples, 0.44%)</title><rect x="220.1" y="4533" width="5.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="223.06" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (2 samples, 0.02%)</title><rect x="856.0" y="3733" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="858.98" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="904.2" y="3413" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="907.21" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="869.4" y="3733" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.37" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (17 samples, 0.21%)</title><rect x="881.5" y="3845" width="2.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="884.47" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand (2 samples, 0.02%)</title><rect x="877.1" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="880.15" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1016.1" y="1813" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.08" y="1823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (31 samples, 0.38%)</title><rect x="869.1" y="4181" width="4.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.08" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1006.4" y="2405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1009.43" y="2415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="984.6" y="2933" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="987.55" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="981.8" y="2997" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="984.82" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="833.7" y="3781" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="836.67" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="920.8" y="3365" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.77" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="933.0" y="3221" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="936.01" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (10 samples, 0.12%)</title><rect x="981.2" y="3205" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="984.24" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureExplicitCapacity (2 samples, 0.02%)</title><rect x="839.3" y="3461" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="842.28" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (35 samples, 0.43%)</title><rect x="944.2" y="3701" width="5.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="947.24" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="926.5" y="3557" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="929.53" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (35 samples, 0.43%)</title><rect x="828.5" y="3989" width="5.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="831.48" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeWrite0 (7 samples, 0.09%)</title><rect x="676.4" y="4613" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="679.45" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="999.2" y="3061" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.24" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeFlush (24 samples, 0.29%)</title><rect x="673.0" y="4549" width="3.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="1013.2" y="1909" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="1919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (4 samples, 0.05%)</title><rect x="773.1" y="3941" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="776.06" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (14 samples, 0.17%)</title><rect x="749.2" y="2501" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="953.7" y="3077" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (17 samples, 0.21%)</title><rect x="907.5" y="4117" width="2.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="910.53" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="843.6" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.60" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="811.4" y="3893" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="814.35" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="890.0" y="3669" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (8 samples, 0.10%)</title><rect x="340.3" y="4469" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="343.27" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (5 samples, 0.06%)</title><rect x="752.8" y="2901" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.76" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="832.2" y="3765" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="835.23" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol (3 samples, 0.04%)</title><rect x="104.3" y="4485" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="107.30" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (47 samples, 0.57%)</title><rect x="803.3" y="4277" width="6.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="806.29" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (10 samples, 0.12%)</title><rect x="917.7" y="3477" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="920.75" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Compilation::emit_code_body() (4 samples, 0.05%)</title><rect x="1175.9" y="4853" width="0.6" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text text-anchor="" x="1178.89" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="863.5" y="3637" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="866.47" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="938.5" y="3781" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (17 samples, 0.21%)</title><rect x="881.5" y="3765" width="2.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="884.47" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (9 samples, 0.11%)</title><rect x="816.4" y="4005" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="819.39" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="902.1" y="3717" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="905.05" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="997.8" y="2597" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (88 samples, 1.07%)</title><rect x="894.9" y="4069" width="12.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="897.86" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.07%)</title><rect x="12.2" y="4997" width="0.8" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text text-anchor="" x="15.16" y="5007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (11 samples, 0.13%)</title><rect x="876.9" y="3733" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="879.86" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString (4 samples, 0.05%)</title><rect x="112.1" y="4549" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="115.08" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue.offer (12 samples, 0.15%)</title><rect x="371.9" y="4805" width="1.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="374.95" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="1010.8" y="2405" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (8 samples, 0.10%)</title><rect x="1011.5" y="2405" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="843.3" y="3653" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="846.31" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="883.3" y="3653" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="886.34" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ScavengeRootsTask::do_it(GCTaskManager*, unsigned int) (44 samples, 0.54%)</title><rect x="1060.6" y="4965" width="6.3" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text text-anchor="" x="1063.57" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (3 samples, 0.04%)</title><rect x="835.5" y="3573" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="838.54" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="962.2" y="3141" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="965.24" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.multiply (3 samples, 0.04%)</title><rect x="1023.3" y="3941" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1026.28" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (7 samples, 0.09%)</title><rect x="936.6" y="3493" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="939.61" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="964.7" y="3173" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="995.2" y="2613" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.20" y="2623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/success! (39 samples, 0.48%)</title><rect x="362.3" y="4757" width="5.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="365.30" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (9 samples, 0.11%)</title><rect x="932.6" y="3669" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="935.58" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="865.2" y="3717" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (48 samples, 0.59%)</title><rect x="813.4" y="4149" width="6.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.37" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>vframeStreamCommon::next() (11 samples, 0.13%)</title><rect x="138.4" y="4581" width="1.6" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text text-anchor="" x="141.42" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::WXWriteFromExecSetter::~WXWriteFromExecSetter() (2 samples, 0.02%)</title><rect x="381.6" y="4693" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text text-anchor="" x="384.59" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="921.1" y="3365" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="924.06" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="908.0" y="3781" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="910.96" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigInteger.add (3 samples, 0.04%)</title><rect x="200.0" y="4517" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="203.04" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (9 samples, 0.11%)</title><rect x="929.0" y="3541" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="931.98" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (7 samples, 0.09%)</title><rect x="994.9" y="2917" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="921.1" y="3205" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="924.06" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly (82 samples, 1.00%)</title><rect x="701.5" y="4581" width="11.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="704.50" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="840.0" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="843.00" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/run (1,094 samples, 13.35%)</title><rect x="203.2" y="4661" width="157.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="206.21" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >instaparse.gll/run</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="983.7" y="3109" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.69" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (5 samples, 0.06%)</title><rect x="975.6" y="3253" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.62" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="817.4" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="820.40" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse (293 samples, 3.57%)</title><rect x="85.2" y="4693" width="42.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="88.15" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >che..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="964.7" y="3381" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="934.0" y="3445" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="937.02" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="965.4" y="3269" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="968.40" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (25 samples, 0.31%)</title><rect x="928.7" y="3781" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="931.69" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="848.1" y="3941" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="851.06" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="994.2" y="2885" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="997.20" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (2 samples, 0.02%)</title><rect x="304.9" y="4437" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="307.86" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyRequest.valAt (2 samples, 0.02%)</title><rect x="76.8" y="4725" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="79.80" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PoolArena.allocate (3 samples, 0.04%)</title><rect x="694.6" y="4613" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="697.59" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (6 samples, 0.07%)</title><rect x="328.2" y="4453" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="331.18" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (40 samples, 0.49%)</title><rect x="803.3" y="4085" width="5.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="806.29" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.default.Stream.put (91 samples, 1.11%)</title><rect x="481.1" y="4597" width="13.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="484.08" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelReadComplete (2 samples, 0.02%)</title><rect x="512.5" y="4725" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="515.46" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (11 samples, 0.13%)</title><rect x="920.1" y="3573" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.05" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="885.1" y="3397" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="888.07" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="757.4" y="3221" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.36" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="886.5" y="3461" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="889.51" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (32 samples, 0.39%)</title><rect x="980.7" y="3333" width="4.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="983.66" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (2 samples, 0.02%)</title><rect x="819.1" y="3909" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="822.13" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="1016.5" y="1653" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.51" y="1663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.AFn.run (2,052 samples, 25.04%)</title><rect x="73.5" y="4965" width="295.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="76.49" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.lang.AFn.run</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="774.6" y="3925" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.02%)</title><rect x="1171.6" y="4773" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text text-anchor="" x="1174.57" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="822.7" y="3909" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (8 samples, 0.10%)</title><rect x="869.2" y="4117" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.23" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>GrowableArray&lt;PointsToNode*&gt;::append_if_missing(PointsToNode* const&amp;) (8 samples, 0.10%)</title><rect x="1123.5" y="4789" width="1.1" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text text-anchor="" x="1126.48" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="836.5" y="3669" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="839.55" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractReferenceCountedByteBuf$1.unsafeOffset (2 samples, 0.02%)</title><rect x="510.4" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="513.45" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (5 samples, 0.06%)</title><rect x="959.1" y="3653" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.07" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="846.0" y="4117" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="849.05" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="992.2" y="2805" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="995.18" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="890.0" y="3733" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="765.3" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="768.28" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (5 samples, 0.06%)</title><rect x="895.0" y="3957" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="898.00" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (16 samples, 0.20%)</title><rect x="986.6" y="3445" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.57" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (16 samples, 0.20%)</title><rect x="846.9" y="4165" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.91" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="905.8" y="3461" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="908.80" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="1018.7" y="1397" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="823.6" y="3941" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="826.59" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.ReferenceCountUtil.touch (2 samples, 0.02%)</title><rect x="512.0" y="4757" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="515.03" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>compojure.core/routes/fn--20631 (2,001 samples, 24.41%)</title><rect x="73.6" y="4917" width="288.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="76.64" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >compojure.core/routes/fn--20631</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method (2 samples, 0.02%)</title><rect x="896.6" y="3653" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="899.58" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hasheq (4 samples, 0.05%)</title><rect x="339.0" y="4325" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="341.98" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="968.7" y="3285" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.71" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (39 samples, 0.48%)</title><rect x="803.3" y="4053" width="5.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="806.29" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="809.6" y="3973" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="812.62" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="869.4" y="3861" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.37" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="957.3" y="3237" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="960.34" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (65 samples, 0.79%)</title><rect x="1010.8" y="2677" width="9.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Curly.match0 (2 samples, 0.02%)</title><rect x="310.5" y="4261" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="313.47" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1173.6" y="4549" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text text-anchor="" x="1176.59" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="905.4" y="3397" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="908.37" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (8 samples, 0.10%)</title><rect x="1006.1" y="2901" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="996.5" y="3013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.50" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (77 samples, 0.94%)</title><rect x="172.7" y="4549" width="11.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (29 samples, 0.35%)</title><rect x="975.5" y="3461" width="4.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="978.48" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="926.1" y="3525" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="929.10" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="1004.3" y="2485" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.28" y="2495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="1017.4" y="1653" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (11 samples, 0.13%)</title><rect x="951.9" y="3621" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="954.87" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.BufferedReader.fill (5 samples, 0.06%)</title><rect x="745.8" y="4485" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="748.84" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="886.4" y="3781" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="889.36" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.graph/async-send (28 samples, 0.34%)</title><rect x="719.6" y="4213" width="4.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="722.64" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="979.8" y="3397" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (5 samples, 0.06%)</title><rect x="912.3" y="3461" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="915.28" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="838.7" y="3589" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="841.71" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (5 samples, 0.06%)</title><rect x="1000.4" y="2885" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1003.39" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.aleph.dirigiste.Pool.queue (2 samples, 0.02%)</title><rect x="714.0" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="717.03" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol (2 samples, 0.02%)</title><rect x="98.1" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="101.11" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (54 samples, 0.66%)</title><rect x="951.1" y="3797" width="7.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="954.15" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (25 samples, 0.31%)</title><rect x="845.8" y="4293" width="3.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="848.76" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (126 samples, 1.54%)</title><rect x="748.7" y="4037" width="18.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.72" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.find (6 samples, 0.07%)</title><rect x="746.9" y="4485" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="749.85" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.&lt;init&gt; (15 samples, 0.18%)</title><rect x="153.4" y="4629" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="156.40" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="757.4" y="3109" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.36" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.boundedLength (2 samples, 0.02%)</title><rect x="497.3" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="500.35" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (31 samples, 0.38%)</title><rect x="821.4" y="4485" width="4.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="824.43" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="904.9" y="3477" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="907.93" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hasheq (3 samples, 0.04%)</title><rect x="211.1" y="4453" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="214.13" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="1004.3" y="2645" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.28" y="2655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (240 samples, 2.93%)</title><rect x="748.6" y="4405" width="34.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.58" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ch..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (925 samples, 11.29%)</title><rect x="893.6" y="4245" width="133.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="896.56" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.client/r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (15 samples, 0.18%)</title><rect x="993.8" y="3109" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.77" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (7 samples, 0.09%)</title><rect x="758.7" y="3493" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="1008.9" y="2325" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (5 samples, 0.06%)</title><rect x="1013.8" y="2229" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.78" y="2239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (10 samples, 0.12%)</title><rect x="890.0" y="4021" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (7 samples, 0.09%)</title><rect x="985.3" y="3525" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="988.27" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="993.0" y="2949" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.05" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="976.9" y="3237" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="979.92" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.ChannelOutboundBuffer.safeSuccess (4 samples, 0.05%)</title><rect x="680.3" y="4517" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.34" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (39 samples, 0.48%)</title><rect x="803.3" y="4069" width="5.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="806.29" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (33 samples, 0.40%)</title><rect x="1015.1" y="2277" width="4.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.07" y="2287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.util.TextBuffer.contentsAsString (2 samples, 0.02%)</title><rect x="97.8" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="100.82" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>nmethod::new_nmethod(methodHandle, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (4 samples, 0.05%)</title><rect x="1174.9" y="4869" width="0.6" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text text-anchor="" x="1177.88" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (52 samples, 0.63%)</title><rect x="961.8" y="3813" width="7.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="964.80" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (22 samples, 0.27%)</title><rect x="858.4" y="3925" width="3.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="861.43" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="817.3" y="3925" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.25" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="944.0" y="3653" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="946.95" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="972.5" y="3301" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="975.46" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="817.0" y="3765" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="819.97" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (2 samples, 0.02%)</title><rect x="183.8" y="4389" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="186.78" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (76 samples, 0.93%)</title><rect x="1009.3" y="2821" width="11.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1012.31" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="1015.9" y="2085" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.94" y="2095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.core.Parser (1,108 samples, 13.52%)</title><rect x="202.1" y="4725" width="159.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="205.06" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >instaparse.core.Parser</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="754.3" y="2757" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="998.8" y="2725" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1001.80" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="812.1" y="3877" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="815.07" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Compile::init_scratch_buffer_blob(int) (4 samples, 0.05%)</title><rect x="1107.5" y="4837" width="0.6" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text text-anchor="" x="1110.50" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (6 samples, 0.07%)</title><rect x="874.0" y="4277" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="876.98" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (5 samples, 0.06%)</title><rect x="955.6" y="3253" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="958.61" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (5 samples, 0.06%)</title><rect x="1019.0" y="1365" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.96" y="1375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RestFn.invoke (51 samples, 0.62%)</title><rect x="789.5" y="4613" width="7.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="792.47" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (34 samples, 0.41%)</title><rect x="969.9" y="3525" width="4.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.misc.Unsafe.park (601 samples, 7.33%)</title><rect x="384.9" y="4901" width="86.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="387.90" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.misc.U..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (323 samples, 3.94%)</title><rect x="975.3" y="3685" width="46.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.34" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >exam..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.aleph.dirigiste.Executor.access$1000 (98 samples, 1.20%)</title><rect x="1034.4" y="4997" width="14.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1037.37" y="5007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="774.6" y="3749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (13 samples, 0.16%)</title><rect x="970.2" y="3477" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="973.15" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="947.8" y="3045" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.84" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="926.5" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="929.53" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.create (4 samples, 0.05%)</title><rect x="733.9" y="4261" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="736.89" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (17 samples, 0.21%)</title><rect x="881.5" y="3829" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="884.47" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (8 samples, 0.10%)</title><rect x="749.2" y="1925" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="1935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="861.6" y="3861" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="864.60" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="842.4" y="3749" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.45" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="962.1" y="3301" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (3 samples, 0.04%)</title><rect x="750.7" y="2389" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="753.74" y="2399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="847.2" y="3877" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="850.20" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="814.2" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="817.23" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (2 samples, 0.02%)</title><rect x="183.8" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="186.78" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (7 samples, 0.09%)</title><rect x="809.0" y="4053" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="812.05" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>IndexSetIterator::next() (4 samples, 0.05%)</title><rect x="1112.7" y="4853" width="0.6" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text text-anchor="" x="1115.69" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="815.4" y="3765" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="818.38" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="949.7" y="3509" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="952.71" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="919.6" y="3477" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (17 samples, 0.21%)</title><rect x="928.8" y="3589" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="931.83" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="872.0" y="3941" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.96" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (6 samples, 0.07%)</title><rect x="995.9" y="3125" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.92" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Matcher.lookingAt (24 samples, 0.29%)</title><rect x="308.6" y="4549" width="3.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="311.60" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="1011.5" y="2037" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (10 samples, 0.12%)</title><rect x="983.5" y="3237" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.54" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="1001.1" y="2853" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (11 samples, 0.13%)</title><rect x="944.7" y="3413" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="947.67" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="807.6" y="3733" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="810.61" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (6 samples, 0.07%)</title><rect x="986.7" y="3221" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.71" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client-middleware/wrap-request-timing/fn--17927 (54 samples, 0.66%)</title><rect x="717.8" y="4485" width="7.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="720.77" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (16 samples, 0.20%)</title><rect x="907.7" y="4005" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="910.67" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="861.3" y="3717" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="864.31" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap$TransientArrayMap.doAssoc (2 samples, 0.02%)</title><rect x="110.5" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="113.49" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (6 samples, 0.07%)</title><rect x="864.3" y="3861" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="867.33" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="930.4" y="3301" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="933.42" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (25 samples, 0.31%)</title><rect x="845.8" y="4325" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="848.76" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="950.1" y="3637" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="953.14" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (3 samples, 0.04%)</title><rect x="907.1" y="3893" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="910.09" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (3 samples, 0.04%)</title><rect x="813.8" y="3605" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.80" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (34 samples, 0.41%)</title><rect x="851.5" y="3973" width="4.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="854.52" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="991.5" y="2565" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="994.46" y="2575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/node-get (2 samples, 0.02%)</title><rect x="329.3" y="4565" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="332.33" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="959.9" y="3493" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.93" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.locks.LockSupport.unpark (57 samples, 0.70%)</title><rect x="484.0" y="3797" width="8.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="486.96" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="920.1" y="3333" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.05" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="886.5" y="3397" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="889.51" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (90 samples, 1.10%)</title><rect x="481.2" y="4485" width="13.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="484.22" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (15 samples, 0.18%)</title><rect x="35.3" y="5013" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="38.34" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="869.8" y="3941" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.80" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/assoc--5433 (2 samples, 0.02%)</title><rect x="208.0" y="4501" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="210.96" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (6 samples, 0.07%)</title><rect x="755.5" y="3333" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.49" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="764.3" y="3525" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.27" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="902.8" y="3637" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="905.77" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (18 samples, 0.22%)</title><rect x="291.9" y="4405" width="2.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="294.90" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="354.7" y="4437" width="0.3" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text text-anchor="" x="357.67" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="817.3" y="3893" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="820.25" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (12 samples, 0.15%)</title><rect x="914.9" y="3669" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="917.87" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (6 samples, 0.07%)</title><rect x="864.3" y="3749" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="867.33" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (7 samples, 0.09%)</title><rect x="871.0" y="3989" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="873.96" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format (2 samples, 0.02%)</title><rect x="801.7" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="804.71" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="848.5" y="3893" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="851.50" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="1010.2" y="2453" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.18" y="2463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="837.3" y="3781" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="840.27" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="904.1" y="3525" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.07" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (126 samples, 1.54%)</title><rect x="827.6" y="4325" width="18.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="830.62" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (12 samples, 0.15%)</title><rect x="831.8" y="3925" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="834.80" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.success (42 samples, 0.51%)</title><rect x="362.0" y="4917" width="6.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="365.01" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="986.7" y="3093" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.71" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (15 samples, 0.18%)</title><rect x="983.0" y="3317" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="985.97" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="1019.2" y="1221" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1022.25" y="1231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.assoc (2 samples, 0.02%)</title><rect x="208.0" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="210.96" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="996.9" y="2709" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.93" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Object.&lt;init&gt; (4 samples, 0.05%)</title><rect x="155.0" y="4581" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="157.98" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (44 samples, 0.54%)</title><rect x="749.0" y="3413" width="6.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (2 samples, 0.02%)</title><rect x="348.3" y="4357" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="351.34" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>byte_streams$eval15443$f__15332__auto____15444.invoke (4 samples, 0.05%)</title><rect x="478.1" y="4357" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="481.06" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="890.0" y="3717" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$CharProperty.match (7 samples, 0.09%)</title><rect x="310.9" y="4485" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="313.90" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="992.0" y="2917" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.04" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Object.hashCode (13 samples, 0.16%)</title><rect x="357.3" y="4437" width="1.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="360.26" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.add (2 samples, 0.02%)</title><rect x="858.1" y="3989" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="861.14" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>IndexSetIterator::advance_and_next() (3 samples, 0.04%)</title><rect x="1117.7" y="4821" width="0.5" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text text-anchor="" x="1120.73" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="983.0" y="3061" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="985.97" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (10 samples, 0.12%)</title><rect x="813.5" y="4021" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="1007.9" y="2389" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.87" y="2399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (5 samples, 0.06%)</title><rect x="896.9" y="3637" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="899.87" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>vframeStream::vframeStream(JavaThread*, bool) (4 samples, 0.05%)</title><rect x="137.7" y="4581" width="0.6" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text text-anchor="" x="140.70" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.GeneratedMethodAccessor49 (2 samples, 0.02%)</title><rect x="969.9" y="3397" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (7 samples, 0.09%)</title><rect x="783.7" y="4117" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.71" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/first--5401 (2 samples, 0.02%)</title><rect x="375.0" y="4805" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="377.97" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.aleph.dirigiste.Executor$Worker$1.run (2,765 samples, 33.74%)</title><rect x="73.5" y="4981" width="398.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="76.49" y="4991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io.aleph.dirigiste.Executor$Worker$1.run</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="1002.3" y="2757" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1005.26" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (15 samples, 0.18%)</title><rect x="1114.7" y="4853" width="2.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text text-anchor="" x="1117.70" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="817.3" y="3973" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="820.25" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1018.7" y="1237" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (3 samples, 0.04%)</title><rect x="180.2" y="4389" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="183.18" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Unsafe_Park (82 samples, 1.00%)</title><rect x="701.5" y="4501" width="11.8" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text text-anchor="" x="704.50" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (2 samples, 0.02%)</title><rect x="781.1" y="3925" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="784.12" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (5 samples, 0.06%)</title><rect x="1006.1" y="2549" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="206.8" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="209.81" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="908.8" y="3461" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.flow/release (2 samples, 0.02%)</title><rect x="376.8" y="4821" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="379.84" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead (21 samples, 0.26%)</title><rect x="477.6" y="4645" width="3.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="480.62" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (9 samples, 0.11%)</title><rect x="983.7" y="3173" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.69" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="869.9" y="3781" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.95" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (13 samples, 0.16%)</title><rect x="920.1" y="3589" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.05" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (8 samples, 0.10%)</title><rect x="1011.5" y="2389" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (16 samples, 0.20%)</title><rect x="907.7" y="4021" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="910.67" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1017.4" y="1205" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (57 samples, 0.70%)</title><rect x="899.3" y="3925" width="8.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="902.32" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__psynch_cvwait (512 samples, 6.25%)</title><rect x="390.1" y="4853" width="73.7" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text text-anchor="" x="393.09" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__psynch..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="832.2" y="3733" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="835.23" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="920.8" y="3317" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="923.77" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1012.2" y="2069" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.19" y="2079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText (2 samples, 0.02%)</title><rect x="94.1" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="97.08" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="918.5" y="3429" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="921.47" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="946.8" y="3509" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.83" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="312.5" y="4549" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="315.49" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="898.7" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="901.74" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.grow (2 samples, 0.02%)</title><rect x="835.7" y="3509" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="838.68" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="1009.3" y="2757" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.31" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/assoc--5433 (5 samples, 0.06%)</title><rect x="481.4" y="4421" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="484.37" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="883.5" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="886.48" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.gt (2 samples, 0.02%)</title><rect x="805.7" y="3749" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="808.74" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="987.7" y="2757" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clout.core/re-match-groups (2 samples, 0.02%)</title><rect x="74.2" y="4709" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="77.21" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="856.4" y="4069" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="859.42" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="974.8" y="3605" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="835.4" y="3733" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="838.40" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RestFn.applyTo (7 samples, 0.09%)</title><rect x="496.6" y="4565" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="499.63" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="833.5" y="4149" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="836.52" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractReferenceCountedByteBuf.release (2 samples, 0.02%)</title><rect x="498.4" y="4613" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="501.36" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (11 samples, 0.13%)</title><rect x="951.9" y="3637" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="954.87" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (7 samples, 0.09%)</title><rect x="922.9" y="3669" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="904.2" y="3317" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="907.21" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (220 samples, 2.68%)</title><rect x="140.2" y="4645" width="31.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="143.15" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >cl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="763.8" y="3477" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.84" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="974.2" y="3173" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="977.18" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="824.6" y="4165" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="827.60" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="756.8" y="3157" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="991.5" y="2725" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="994.46" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (10 samples, 0.12%)</title><rect x="892.0" y="3909" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.98" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (1,409 samples, 17.19%)</title><rect x="826.2" y="4469" width="202.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="829.18" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.client/rand-json</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.AFn.run (2 samples, 0.02%)</title><rect x="66.6" y="5029" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="69.58" y="5039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (2 samples, 0.02%)</title><rect x="1108.8" y="4805" width="0.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text text-anchor="" x="1111.80" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (10 samples, 0.12%)</title><rect x="1116.9" y="4853" width="1.4" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text text-anchor="" x="1119.86" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="946.3" y="3509" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parker::unpark() (26 samples, 0.32%)</title><rect x="500.8" y="4373" width="3.7" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text text-anchor="" x="503.80" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (13 samples, 0.16%)</title><rect x="1018.0" y="1781" width="1.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1020.95" y="1791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (6 samples, 0.07%)</title><rect x="945.1" y="3365" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="948.10" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="1003.7" y="3013" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1006.70" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_pthread_cond_wait (2 samples, 0.02%)</title><rect x="1189.4" y="4901" width="0.3" height="15.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text text-anchor="" x="1192.42" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="957.3" y="3157" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="960.34" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.concurrent.SingleThreadEventExecutor.execute (16 samples, 0.20%)</title><rect x="721.2" y="4165" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="724.22" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="879.5" y="3445" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="882.45" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (2 samples, 0.02%)</title><rect x="297.5" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="300.51" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Curly.match0 (358 samples, 4.37%)</title><rect x="225.4" y="4501" width="51.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="228.38" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (8 samples, 0.10%)</title><rect x="756.8" y="3381" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.DefaultChannelPipeline.read (7 samples, 0.09%)</title><rect x="512.8" y="4773" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="515.75" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (11 samples, 0.13%)</title><rect x="876.9" y="3749" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="879.86" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="1011.5" y="2149" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::do_all_blocks() (12 samples, 0.15%)</title><rect x="1172.6" y="4773" width="1.7" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text text-anchor="" x="1175.58" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="934.0" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="937.02" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="957.3" y="3045" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="960.34" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (102 samples, 1.24%)</title><rect x="875.0" y="4117" width="14.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="877.99" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="871.5" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="874.53" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="809.6" y="4005" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="812.62" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="871.5" y="3621" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="874.53" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (4 samples, 0.05%)</title><rect x="776.8" y="3973" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="779.80" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="957.3" y="3077" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="960.34" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.getMethods (2 samples, 0.02%)</title><rect x="840.9" y="3909" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="843.87" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (7 samples, 0.09%)</title><rect x="803.9" y="3989" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="806.87" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JavaThread::handle_special_suspend_equivalent_condition() (2 samples, 0.02%)</title><rect x="1039.1" y="4901" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text text-anchor="" x="1042.12" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (2 samples, 0.02%)</title><rect x="172.7" y="3445" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="972.5" y="3141" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="975.46" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureExplicitCapacity (6 samples, 0.07%)</title><rect x="133.1" y="4613" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="136.10" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.net.URL.&lt;init&gt; (2 samples, 0.02%)</title><rect x="733.0" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="736.03" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="1019.0" y="1253" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.96" y="1263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (12 samples, 0.15%)</title><rect x="1002.0" y="2981" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1004.97" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (3 samples, 0.04%)</title><rect x="772.3" y="3925" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="775.34" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="972.5" y="3205" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="975.46" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (38 samples, 0.46%)</title><rect x="953.5" y="3637" width="5.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.45" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="822.7" y="3941" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.02%)</title><rect x="1175.5" y="4789" width="0.2" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text text-anchor="" x="1178.46" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1017.4" y="1189" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="786.0" y="4005" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="789.01" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="917.9" y="3301" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="920.89" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="902.1" y="3829" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="905.05" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="908.0" y="3845" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="910.96" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (16 samples, 0.20%)</title><rect x="838.4" y="3957" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="841.42" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="905.4" y="3365" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="908.37" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="920.8" y="3253" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.77" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="992.0" y="2981" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.04" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="1015.6" y="1669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.65" y="1679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="815.0" y="4053" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="817.95" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="897.3" y="3429" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="900.30" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (4 samples, 0.05%)</title><rect x="752.2" y="2869" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.18" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="991.2" y="3045" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.17" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="963.8" y="3029" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="966.82" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (19 samples, 0.23%)</title><rect x="749.2" y="2789" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="908.8" y="3541" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__psynch_cvwait (20 samples, 0.24%)</title><rect x="1186.5" y="4901" width="2.9" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text text-anchor="" x="1189.54" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseCFG::partial_latency_of_defs(Node*) (2 samples, 0.02%)</title><rect x="1111.5" y="4821" width="0.3" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text text-anchor="" x="1114.53" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (3 samples, 0.04%)</title><rect x="279.1" y="4517" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="282.08" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (16 samples, 0.20%)</title><rect x="911.7" y="3733" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="914.70" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="776.2" y="3941" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="779.22" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (3 samples, 0.04%)</title><rect x="1057.0" y="4933" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1059.97" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (9 samples, 0.11%)</title><rect x="807.3" y="3957" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="810.32" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="968.7" y="3221" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="971.71" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="996.2" y="2773" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.21" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (5 samples, 0.06%)</title><rect x="996.1" y="3045" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.07" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="974.8" y="3685" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream/connect-via (5 samples, 0.06%)</title><rect x="479.1" y="4341" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="482.06" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_jit_write_protect_np (7 samples, 0.09%)</title><rect x="318.7" y="4245" width="1.0" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text text-anchor="" x="321.68" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (4 samples, 0.05%)</title><rect x="767.2" y="3829" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.15" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="1001.1" y="2789" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="987.7" y="2709" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="968.7" y="3477" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.71" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (7 samples, 0.09%)</title><rect x="1030.5" y="4405" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1033.48" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="963.8" y="3093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="966.82" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="987.7" y="3141" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.assoc (25 samples, 0.31%)</title><rect x="316.9" y="4469" width="3.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="319.95" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="749.3" y="117" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="996.9" y="2949" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.93" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="968.4" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.43" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="902.8" y="3477" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="905.77" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="919.6" y="3589" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (27 samples, 0.33%)</title><rect x="889.7" y="4245" width="3.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.67" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="908.5" y="3797" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="911.53" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (6 samples, 0.07%)</title><rect x="945.1" y="3381" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="948.10" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client-middleware/wrap-request/fn--18254/fn--18258 (10 samples, 0.12%)</title><rect x="374.0" y="4869" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="376.96" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="779.4" y="3925" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.39" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="963.7" y="3141" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="966.67" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOfObject (2 samples, 0.02%)</title><rect x="208.8" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.83" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (6 samples, 0.07%)</title><rect x="962.1" y="3477" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.assoc (5 samples, 0.06%)</title><rect x="320.5" y="4437" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="323.55" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (27 samples, 0.33%)</title><rect x="770.2" y="4085" width="3.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.18" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (3 samples, 0.04%)</title><rect x="345.5" y="4517" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="348.46" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="1002.5" y="2677" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1005.55" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="883.9" y="3781" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="886.91" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.concurrent.AbstractEventExecutor.safeExecute (190 samples, 2.32%)</title><rect x="672.0" y="4917" width="27.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="674.99" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >i..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (24 samples, 0.29%)</title><rect x="840.9" y="3989" width="3.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="843.87" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="983.0" y="3237" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="985.97" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1014.6" y="2181" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1017.64" y="2191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::enable_wx_from_exec(WXMode) (2 samples, 0.02%)</title><rect x="373.2" y="4677" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text text-anchor="" x="376.24" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="968.4" y="3285" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.43" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="865.9" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="872.0" y="3813" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="874.96" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="892.1" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="895.12" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (6 samples, 0.07%)</title><rect x="1012.8" y="2373" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1015.77" y="2383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="807.6" y="3861" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="810.61" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="833.8" y="3685" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="836.81" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (45 samples, 0.55%)</title><rect x="749.0" y="3461" width="6.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (5 samples, 0.06%)</title><rect x="822.0" y="4229" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (5 samples, 0.06%)</title><rect x="817.8" y="3957" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.83" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (92 samples, 1.12%)</title><rect x="927.5" y="4053" width="13.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="930.54" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="971.3" y="3045" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="974.31" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="749.3" y="261" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/hash (2 samples, 0.02%)</title><rect x="306.4" y="4517" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="309.44" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="966.1" y="3141" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="969.12" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="974.8" y="3333" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (5 samples, 0.06%)</title><rect x="841.3" y="3877" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="844.30" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="1010.2" y="2309" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.18" y="2319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1006.4" y="2229" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.43" y="2239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="924.1" y="3669" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="927.08" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="786.0" y="3989" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="789.01" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (5 samples, 0.06%)</title><rect x="84.4" y="4629" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="87.43" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="860.7" y="3685" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="863.73" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="959.9" y="3477" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.93" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (2 samples, 0.02%)</title><rect x="208.0" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="210.96" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="892.6" y="3781" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="895.55" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="763.8" y="3605" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.84" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="360.1" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="363.14" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="992.8" y="3173" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.76" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="989.3" y="3141" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="992.30" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.fireChannelReadComplete (3 samples, 0.04%)</title><rect x="512.3" y="4805" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="515.32" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (9 samples, 0.11%)</title><rect x="890.0" y="4005" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="916.6" y="3573" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="919.60" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method (9 samples, 0.11%)</title><rect x="798.7" y="4565" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="801.68" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (5 samples, 0.06%)</title><rect x="782.0" y="4213" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="784.98" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.GeneratedMethodAccessor57 (88 samples, 1.07%)</title><rect x="172.7" y="4597" width="12.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="1004.9" y="2645" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.85" y="2655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="974.8" y="3381" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="995.5" y="2693" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.49" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="979.7" y="3525" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="982.66" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (10 samples, 0.12%)</title><rect x="749.2" y="2277" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="959.1" y="3525" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.07" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/eval (2,321 samples, 28.32%)</title><rect x="700.2" y="4725" width="334.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="703.20" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.core/eval</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="899.9" y="3621" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="902.90" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (1,070 samples, 13.06%)</title><rect x="873.7" y="4357" width="154.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="876.69" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.core/reduce</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="822.7" y="3989" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.DelegatingMethodAccessorImpl (2 samples, 0.02%)</title><rect x="969.6" y="3669" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.58" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JavaThread::run() (523 samples, 6.38%)</title><rect x="1106.6" y="4981" width="75.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text text-anchor="" x="1109.64" y="4991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >JavaThre..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractByteBufAllocator.ioBuffer (8 samples, 0.10%)</title><rect x="513.8" y="4853" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="516.76" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (3 samples, 0.04%)</title><rect x="1022.7" y="3877" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1025.70" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="847.1" y="4101" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="850.06" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (10 samples, 0.12%)</title><rect x="862.8" y="3957" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="865.75" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.assoc (2 samples, 0.02%)</title><rect x="847.6" y="4053" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="850.63" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="918.5" y="3397" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="921.47" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (7 samples, 0.09%)</title><rect x="1018.7" y="1429" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="869.4" y="3717" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.37" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="922.9" y="3637" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RestFn.invoke (7 samples, 0.09%)</title><rect x="736.8" y="4597" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="739.77" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.auto-flatten-seq/afs? (2 samples, 0.02%)</title><rect x="345.9" y="4533" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="348.89" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="977.2" y="3141" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="980.21" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/re-matcher (2 samples, 0.02%)</title><rect x="77.1" y="4741" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="80.09" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="925.1" y="3781" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="928.09" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="1006.3" y="2501" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.29" y="2511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::javaTimeNanos() (2 samples, 0.02%)</title><rect x="66.6" y="5013" width="0.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text text-anchor="" x="69.58" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (126 samples, 1.54%)</title><rect x="827.6" y="4341" width="18.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="830.62" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (31 samples, 0.38%)</title><rect x="869.1" y="4149" width="4.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.08" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="762.8" y="3397" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.83" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (4 samples, 0.05%)</title><rect x="749.3" y="1349" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.deref (2 samples, 0.02%)</title><rect x="204.1" y="4613" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="207.08" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.gt (2 samples, 0.02%)</title><rect x="805.7" y="3765" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="808.74" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.success (4 samples, 0.05%)</title><rect x="371.2" y="4869" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="374.23" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (6 samples, 0.07%)</title><rect x="760.2" y="3381" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="1013.2" y="1989" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="1999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="883.3" y="3701" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="886.34" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.GeneratedMethodAccessor49 (2 samples, 0.02%)</title><rect x="876.6" y="3701" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="879.57" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="749.3" y="1093" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="886.6" y="3269" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="889.65" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="960.4" y="3445" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="963.36" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-result (84 samples, 1.02%)</title><rect x="312.3" y="4565" width="12.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="315.34" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="814.2" y="3669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="817.23" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="880.5" y="3861" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (81 samples, 0.99%)</title><rect x="911.3" y="3925" width="11.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="914.27" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.BufferedReader.read1 (21 samples, 0.26%)</title><rect x="81.1" y="4613" width="3.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="84.12" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (12 samples, 0.15%)</title><rect x="765.0" y="3941" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken (4 samples, 0.05%)</title><rect x="119.3" y="4597" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="122.28" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (9 samples, 0.11%)</title><rect x="1018.4" y="1637" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.38" y="1647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (102 samples, 1.24%)</title><rect x="875.0" y="4165" width="14.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="877.99" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1000.8" y="2565" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1003.82" y="2575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="878.6" y="3605" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="881.59" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>byte_streams$eval15443$f__15332__auto____15444$this__12089__auto____15447$fn__15448.invoke (4 samples, 0.05%)</title><rect x="368.2" y="4837" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="371.20" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.02%)</title><rect x="1173.6" y="4469" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text text-anchor="" x="1176.59" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$GroupTail.match (6 samples, 0.07%)</title><rect x="795.2" y="4373" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="798.23" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/apply (2,001 samples, 24.41%)</title><rect x="73.6" y="4901" width="288.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="76.64" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.core/apply</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (9 samples, 0.11%)</title><rect x="949.4" y="3909" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="923.9" y="3781" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="926.94" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="1015.5" y="2165" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.51" y="2175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="759.8" y="3381" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.81" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand-int (2 samples, 0.02%)</title><rect x="951.3" y="3637" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="954.29" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="822.0" y="3813" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PooledByteBuf.setBytes (94 samples, 1.15%)</title><rect x="515.1" y="4837" width="13.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="518.06" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.cons (3 samples, 0.04%)</title><rect x="306.9" y="4469" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="309.87" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="956.5" y="3157" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="959.48" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="835.4" y="3637" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="838.40" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="987.7" y="2805" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="824.6" y="4069" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="827.60" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (6 samples, 0.07%)</title><rect x="991.7" y="3029" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.75" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1005.9" y="2837" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1008.86" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="908.0" y="3733" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="910.96" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/swap! (2 samples, 0.02%)</title><rect x="208.0" y="4533" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="210.96" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (12 samples, 0.15%)</title><rect x="296.4" y="4517" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="299.36" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.atomic.AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl.weakCompareAndSet (2 samples, 0.02%)</title><rect x="510.4" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="513.45" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Murmur3.hashUnordered (4 samples, 0.05%)</title><rect x="348.3" y="4389" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="351.34" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="933.0" y="3461" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="936.01" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="1016.7" y="1477" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.66" y="1487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (15 samples, 0.18%)</title><rect x="810.9" y="4133" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="813.92" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="749.3" y="469" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (3 samples, 0.04%)</title><rect x="850.9" y="4117" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="853.94" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureCapacityInternal (2 samples, 0.02%)</title><rect x="835.7" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="838.68" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.append (4 samples, 0.05%)</title><rect x="790.6" y="4453" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="793.62" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="902.8" y="3781" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="905.77" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="833.7" y="3925" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="836.67" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="973.9" y="3173" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="976.90" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred/fn--11776 (90 samples, 1.10%)</title><rect x="481.2" y="4533" width="13.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="484.22" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.keys (2 samples, 0.02%)</title><rect x="335.1" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="338.09" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="833.5" y="4101" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="836.52" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="883.3" y="3669" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="886.34" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.internal.InternalThreadLocalMap.get (2 samples, 0.02%)</title><rect x="514.6" y="4773" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="517.62" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (5 samples, 0.06%)</title><rect x="841.3" y="3829" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="844.30" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (6 samples, 0.07%)</title><rect x="986.7" y="3205" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.71" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (9 samples, 0.11%)</title><rect x="949.4" y="3925" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (11 samples, 0.13%)</title><rect x="749.2" y="2357" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PooledByteBufAllocator.newDirectBuffer (3 samples, 0.04%)</title><rect x="678.3" y="4741" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="681.32" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (5 samples, 0.06%)</title><rect x="886.4" y="3653" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="889.36" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="283.5" y="4437" width="0.3" height="15.0" fill="rgb(205,58,58)" rx="2" ry="2" />
<text text-anchor="" x="286.55" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.util.TextBuffer.contentsAsString (4 samples, 0.05%)</title><rect x="115.0" y="4565" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="117.96" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol (5 samples, 0.06%)</title><rect x="122.3" y="4581" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="125.30" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-listener (12 samples, 0.15%)</title><rect x="277.8" y="4565" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="280.79" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (6 samples, 0.07%)</title><rect x="1013.8" y="2341" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.78" y="2351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="904.2" y="3445" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.21" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="846.3" y="3957" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.34" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.KQueueArrayWrapper.kevent0 (399 samples, 4.87%)</title><rect x="613.4" y="4821" width="57.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="616.39" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.ni..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="976.3" y="3237" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="979.34" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JVM_IHashCode (6 samples, 0.07%)</title><rect x="303.6" y="4405" width="0.8" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text text-anchor="" x="306.56" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (3 samples, 0.04%)</title><rect x="838.0" y="4021" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="840.99" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="975.8" y="3109" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="978.77" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (3 samples, 0.04%)</title><rect x="768.4" y="3797" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="771.45" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (15 samples, 0.18%)</title><rect x="838.6" y="3877" width="2.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="841.56" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (5 samples, 0.06%)</title><rect x="1006.1" y="2677" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="345.2" y="4501" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="348.17" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="861.7" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="864.74" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="969.0" y="3381" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.00" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (29 samples, 0.35%)</title><rect x="975.5" y="3493" width="4.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="978.48" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.server/handle-request (49 samples, 0.60%)</title><rect x="499.4" y="4517" width="7.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="502.36" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.isAccessibleMatch (3 samples, 0.04%)</title><rect x="135.0" y="4629" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="137.97" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (12 samples, 0.15%)</title><rect x="956.3" y="3477" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="959.33" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Long.toString (2 samples, 0.02%)</title><rect x="895.4" y="3797" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="898.43" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode.tryMatch (58 samples, 0.71%)</title><rect x="484.0" y="3813" width="8.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="486.96" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (3 samples, 0.04%)</title><rect x="1026.3" y="4197" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1029.30" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="891.4" y="3861" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="894.40" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="749.3" y="69" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="919.6" y="3205" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="991.5" y="2741" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="994.46" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.locks.LockSupport.unpark (12 samples, 0.15%)</title><rect x="371.9" y="4757" width="1.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="374.95" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="1013.9" y="2037" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.92" y="2047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.longCast (2 samples, 0.02%)</title><rect x="958.1" y="3429" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="961.06" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (22 samples, 0.27%)</title><rect x="986.6" y="3493" width="3.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.57" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (170 samples, 2.07%)</title><rect x="996.8" y="3285" width="24.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.79" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >e..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/conj--5407 (2 samples, 0.02%)</title><rect x="335.5" y="4533" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="338.52" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (4 samples, 0.05%)</title><rect x="1028.5" y="4325" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1031.46" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.BufferedReader.&lt;init&gt; (2 samples, 0.02%)</title><rect x="79.5" y="4565" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="82.54" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="869.2" y="4069" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.23" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (6 samples, 0.07%)</title><rect x="756.8" y="3301" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (18 samples, 0.22%)</title><rect x="919.5" y="3685" width="2.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="922.48" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/conj--5407 (11 samples, 0.13%)</title><rect x="347.8" y="4533" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="350.76" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="872.3" y="3637" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.25" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (17 samples, 0.21%)</title><rect x="996.8" y="3093" width="2.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.79" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="758.2" y="3221" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="761.23" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Listener.onSuccess (90 samples, 1.10%)</title><rect x="481.2" y="4517" width="13.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="484.22" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (178 samples, 2.17%)</title><rect x="748.6" y="4197" width="25.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.58" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="985.4" y="3109" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="988.41" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred/fn--11768 (34 samples, 0.41%)</title><rect x="378.4" y="4837" width="4.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="381.43" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1013.2" y="1877" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="1887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (18 samples, 0.22%)</title><rect x="770.5" y="4021" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete (10 samples, 0.12%)</title><rect x="512.3" y="4837" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="515.32" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (101 samples, 1.23%)</title><rect x="1006.1" y="2981" width="14.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (8 samples, 0.10%)</title><rect x="887.2" y="3733" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="890.23" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (2 samples, 0.02%)</title><rect x="867.2" y="3909" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="870.21" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannel.read (7 samples, 0.09%)</title><rect x="512.8" y="4789" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="515.75" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="1013.2" y="1957" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="1967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseCFG::global_code_motion() (9 samples, 0.11%)</title><rect x="1111.4" y="4853" width="1.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text text-anchor="" x="1114.39" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="994.9" y="2757" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (5 samples, 0.06%)</title><rect x="784.9" y="4197" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="787.86" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (4 samples, 0.05%)</title><rect x="773.1" y="3909" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="776.06" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1005.6" y="2389" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1008.57" y="2399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="756.8" y="3205" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (17 samples, 0.21%)</title><rect x="1029.0" y="4469" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1032.04" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (11 samples, 0.13%)</title><rect x="970.3" y="3285" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="973.30" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="920.1" y="3509" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.05" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue.poll (611 samples, 7.45%)</title><rect x="383.6" y="4965" width="88.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="386.61" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (6 samples, 0.07%)</title><rect x="1013.8" y="2373" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.78" y="2383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (10 samples, 0.12%)</title><rect x="813.5" y="4005" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="887.2" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="890.23" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.nio.channels.spi.AbstractInterruptibleChannel.blockedOn (2 samples, 0.02%)</title><rect x="515.2" y="4789" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="518.20" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (61 samples, 0.74%)</title><rect x="880.9" y="4021" width="8.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="883.89" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="1006.9" y="2821" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.87" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.toString (3 samples, 0.04%)</title><rect x="304.7" y="4501" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="307.71" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="971.3" y="3157" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="974.31" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="902.1" y="3813" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="905.05" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (4 samples, 0.05%)</title><rect x="172.7" y="3749" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="779.4" y="3813" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.39" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (6 samples, 0.07%)</title><rect x="779.7" y="3973" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.68" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="761.8" y="3557" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="764.83" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString (2 samples, 0.02%)</title><rect x="764.7" y="3877" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="767.70" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="749.3" y="1029" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="997.8" y="2853" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.equiv (2 samples, 0.02%)</title><rect x="68.6" y="4981" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="71.60" y="4991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="1006.1" y="2821" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::current_thread_enable_wx_impl(WXMode) (2 samples, 0.02%)</title><rect x="491.6" y="3685" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text text-anchor="" x="494.59" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (109 samples, 1.33%)</title><rect x="749.0" y="3877" width="15.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="919.6" y="3301" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (13 samples, 0.16%)</title><rect x="774.6" y="4053" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="787.6" y="4373" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="790.60" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="970.7" y="3141" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="973.73" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (12 samples, 0.15%)</title><rect x="852.4" y="3717" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="855.38" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (7 samples, 0.09%)</title><rect x="931.3" y="3701" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="934.28" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.netty/eval15865/to-byte-buf--15868 (13 samples, 0.16%)</title><rect x="678.2" y="4821" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="681.18" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="1016.9" y="1829" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="1839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1012.2" y="2117" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.19" y="2127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (8 samples, 0.10%)</title><rect x="172.7" y="3925" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="1015.6" y="1893" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.65" y="1903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="807.6" y="3893" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="810.61" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.net.URI$Parser.charAt (2 samples, 0.02%)</title><rect x="715.0" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="718.03" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="886.5" y="3381" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="889.51" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$ArrayNode.find (2 samples, 0.02%)</title><rect x="282.3" y="4485" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="285.25" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="915.2" y="3461" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="918.16" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="762.7" y="3493" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.69" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>StringTable::unlink_or_oops_do(BoolObjectClosure*, OopClosure*, int*, int*) (8 samples, 0.10%)</title><rect x="1182.5" y="4853" width="1.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text text-anchor="" x="1185.51" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="971.3" y="3077" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="974.31" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (10 samples, 0.12%)</title><rect x="981.2" y="3189" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="984.24" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ClassLoaderData::oops_do(OopClosure*, KlassClosure*, bool) (37 samples, 0.45%)</title><rect x="1060.9" y="4933" width="5.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text text-anchor="" x="1063.86" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="920.1" y="3317" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.05" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="937.2" y="3285" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="940.18" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="311.5" y="4437" width="0.3" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text text-anchor="" x="314.48" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="976.5" y="3157" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.49" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (681 samples, 8.31%)</title><rect x="927.1" y="4085" width="98.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="930.11" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.cli..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="964.7" y="3189" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="968.7" y="3381" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.71" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.java.io/fn--11446/G--11422--11453 (3 samples, 0.04%)</title><rect x="79.4" y="4597" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="82.39" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (8 samples, 0.10%)</title><rect x="762.7" y="3685" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.69" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (76 samples, 0.93%)</title><rect x="927.5" y="3925" width="11.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="930.54" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (6 samples, 0.07%)</title><rect x="763.8" y="3685" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.84" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (7 samples, 0.09%)</title><rect x="871.0" y="4037" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="873.96" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (9 samples, 0.11%)</title><rect x="746.7" y="4501" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="749.71" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (3 samples, 0.04%)</title><rect x="297.5" y="4453" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="300.51" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (4 samples, 0.05%)</title><rect x="937.8" y="3733" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="940.76" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="952.2" y="3205" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="955.16" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (3 samples, 0.04%)</title><rect x="1169.0" y="4789" width="0.4" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text text-anchor="" x="1171.98" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="952.2" y="3269" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="955.16" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http/eval18308/request--18312/fn--18314/fn--18317/fn--18322 (127 samples, 1.55%)</title><rect x="717.8" y="4517" width="18.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="720.77" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="983.7" y="2917" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.69" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.server/eval16578/send-response--16583/fn--16587 (4 samples, 0.05%)</title><rect x="362.4" y="4629" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="365.45" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="892.0" y="3781" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="894.98" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyResponse.valAt (2 samples, 0.02%)</title><rect x="482.1" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="485.09" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeNoArgInstanceMember (63 samples, 0.77%)</title><rect x="131.1" y="4677" width="9.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="134.08" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_jit_write_protect_np (2 samples, 0.02%)</title><rect x="373.2" y="4629" width="0.3" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text text-anchor="" x="376.24" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (17 samples, 0.21%)</title><rect x="941.8" y="3717" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="944.79" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (8 samples, 0.10%)</title><rect x="749.2" y="1957" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="1967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (5 samples, 0.06%)</title><rect x="1001.1" y="3061" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RestFn.invoke (2,321 samples, 28.32%)</title><rect x="700.2" y="4917" width="334.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="703.20" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.lang.RestFn.invoke</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (5 samples, 0.06%)</title><rect x="180.2" y="4469" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="183.18" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (10 samples, 0.12%)</title><rect x="963.2" y="3381" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="966.24" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="977.6" y="3157" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="980.64" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (6 samples, 0.07%)</title><rect x="755.5" y="3317" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.49" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (13 samples, 0.16%)</title><rect x="977.6" y="3269" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="980.64" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.graph/async-connect/this--12426/fn--12427/fn--12428 (29 samples, 0.35%)</title><rect x="719.6" y="4245" width="4.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="722.64" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (10 samples, 0.12%)</title><rect x="803.9" y="4021" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="806.87" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="883.9" y="3797" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="886.91" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (30 samples, 0.37%)</title><rect x="821.6" y="4309" width="4.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="824.57" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="879.5" y="3413" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="882.45" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="936.0" y="3525" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="939.03" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.ReferenceCountUtil.release (2 samples, 0.02%)</title><rect x="693.0" y="4693" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="696.01" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dissoc (4 samples, 0.05%)</title><rect x="376.1" y="4853" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="379.12" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="992.0" y="2853" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.04" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/node-get (3 samples, 0.04%)</title><rect x="316.5" y="4533" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="319.52" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="991.2" y="2933" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.17" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (12 samples, 0.15%)</title><rect x="914.9" y="3621" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="917.87" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.assoc (4 samples, 0.05%)</title><rect x="278.5" y="4485" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="281.51" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (18 samples, 0.22%)</title><rect x="779.1" y="4133" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (5 samples, 0.06%)</title><rect x="886.4" y="3717" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="889.36" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="836.5" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="839.55" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1004.9" y="2565" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.85" y="2575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseIterGVN::add_users_to_worklist(Node*) (2 samples, 0.02%)</title><rect x="1171.0" y="4837" width="0.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text text-anchor="" x="1174.00" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="879.5" y="3685" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="882.45" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatterBuilder$NumberPrinterParser.format (5 samples, 0.06%)</title><rect x="798.7" y="4469" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="801.68" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="966.6" y="3093" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="969.55" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="749.3" y="933" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/conj--5407 (3 samples, 0.04%)</title><rect x="306.9" y="4517" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="309.87" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (59 samples, 0.72%)</title><rect x="1011.5" y="2565" width="8.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (19 samples, 0.23%)</title><rect x="766.9" y="4037" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="769.86" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (31 samples, 0.38%)</title><rect x="963.1" y="3541" width="4.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="966.10" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (20 samples, 0.24%)</title><rect x="864.2" y="3957" width="2.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="867.19" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="865.9" y="3365" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="962.2" y="3109" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="965.24" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http/eval18308/request--18312/fn--18314 (158 samples, 1.93%)</title><rect x="713.6" y="4581" width="22.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="716.59" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >a..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.getMethods (2 samples, 0.02%)</title><rect x="810.3" y="4149" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="813.34" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.invoke (17 samples, 0.21%)</title><rect x="350.5" y="4549" width="2.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="353.50" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="901.3" y="3349" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="904.33" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="965.5" y="3077" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="968.55" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.get (2 samples, 0.02%)</title><rect x="80.5" y="4629" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="83.55" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.pcequiv (2 samples, 0.02%)</title><rect x="207.7" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="210.67" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand-int (3 samples, 0.04%)</title><rect x="877.1" y="3525" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="880.15" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="786.0" y="4037" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="789.01" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="939.8" y="3541" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="1015.9" y="1941" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.94" y="1951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (6 samples, 0.07%)</title><rect x="864.3" y="3653" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="867.33" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="950.1" y="3669" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="953.14" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (7 samples, 0.09%)</title><rect x="953.5" y="3413" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.45" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="991.2" y="3029" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.17" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/merge/fn--5976 (3 samples, 0.04%)</title><rect x="77.8" y="4677" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="80.81" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (2 samples, 0.02%)</title><rect x="177.3" y="4245" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="180.30" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1018.7" y="1141" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="891.4" y="3893" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="894.40" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (3 samples, 0.04%)</title><rect x="911.8" y="3605" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="914.84" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (274 samples, 3.34%)</title><rect x="748.4" y="4469" width="39.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.44" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="996.9" y="2853" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.93" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (6 samples, 0.07%)</title><rect x="900.2" y="3557" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="903.18" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (2 samples, 0.02%)</title><rect x="183.8" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="186.78" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (3 samples, 0.04%)</title><rect x="287.9" y="4469" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="290.87" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="815.0" y="3941" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="817.95" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="892.1" y="3605" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="895.12" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (4 samples, 0.05%)</title><rect x="758.7" y="3397" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="839.9" y="3685" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="842.86" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__psynch_cvsignal (8 samples, 0.10%)</title><rect x="372.1" y="4693" width="1.1" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text text-anchor="" x="375.09" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (11 samples, 0.13%)</title><rect x="1007.3" y="2773" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1010.30" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (3 samples, 0.04%)</title><rect x="339.8" y="4453" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="342.84" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="991.5" y="2677" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.46" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/success! (43 samples, 0.52%)</title><rect x="361.9" y="4933" width="6.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="364.87" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1173.6" y="4565" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text text-anchor="" x="1176.59" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="974.3" y="3093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="977.33" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.pcequiv (3 samples, 0.04%)</title><rect x="208.3" y="4373" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.25" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="507.1" y="4421" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="510.14" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="983.0" y="3189" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="985.97" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (5 samples, 0.06%)</title><rect x="926.1" y="3621" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="929.10" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap$KeySeq.createFromMap (3 samples, 0.04%)</title><rect x="315.1" y="4501" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="318.08" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (3 samples, 0.04%)</title><rect x="320.7" y="4389" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="323.69" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="962.1" y="3317" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="863.9" y="3733" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="866.90" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="1017.4" y="1669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="1004.9" y="2597" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.85" y="2607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="833.2" y="3877" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="836.24" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue$TransferStack.transfer (35 samples, 0.43%)</title><rect x="500.2" y="4453" width="5.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="503.23" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (11 samples, 0.13%)</title><rect x="318.1" y="4293" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="321.10" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="838.7" y="3557" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="841.71" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.add (2 samples, 0.02%)</title><rect x="1031.9" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1034.92" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="919.6" y="3541" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="954.6" y="3109" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="957.60" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (296 samples, 3.61%)</title><rect x="1122.9" y="4869" width="42.6" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text text-anchor="" x="1125.91" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Conn..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (5 samples, 0.06%)</title><rect x="754.3" y="3253" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.append (2 samples, 0.02%)</title><rect x="738.9" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="741.93" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (67 samples, 0.82%)</title><rect x="749.0" y="3589" width="9.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="931.3" y="3573" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="934.28" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (13 samples, 0.16%)</title><rect x="920.1" y="3637" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.05" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="873.0" y="3781" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="875.97" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/node-get (5 samples, 0.06%)</title><rect x="352.2" y="4517" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="355.22" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="918.6" y="3381" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="921.61" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.ReflectAccess.copyMethod (3 samples, 0.04%)</title><rect x="135.8" y="4581" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="138.83" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (6 samples, 0.07%)</title><rect x="939.8" y="3701" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$7.isSatisfiedBy (10 samples, 0.12%)</title><rect x="730.4" y="4117" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="733.44" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (7 samples, 0.09%)</title><rect x="985.3" y="3477" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="988.27" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1017.4" y="1381" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="811.6" y="3813" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="814.64" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (2 samples, 0.02%)</title><rect x="182.5" y="4485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="185.48" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (12 samples, 0.15%)</title><rect x="942.1" y="3493" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="945.08" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clout.core.CompiledRoute.route_matches (9 samples, 0.11%)</title><rect x="76.2" y="4773" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="79.23" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (7 samples, 0.09%)</title><rect x="323.0" y="4485" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="326.00" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.create (7 samples, 0.09%)</title><rect x="338.8" y="4437" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="341.83" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="981.8" y="2885" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="984.82" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (16 samples, 0.20%)</title><rect x="914.9" y="3781" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="917.87" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (17 samples, 0.21%)</title><rect x="1017.4" y="1845" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (12 samples, 0.15%)</title><rect x="181.8" y="4517" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="184.76" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.GeneratedMethodAccessor49 (3 samples, 0.04%)</title><rect x="942.5" y="3381" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="945.51" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="1005.4" y="2581" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1008.43" y="2591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (11 samples, 0.13%)</title><rect x="922.9" y="3893" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>CodeBuffer::copy_code_to(CodeBlob*) (3 samples, 0.04%)</title><rect x="1177.0" y="4789" width="0.5" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text text-anchor="" x="1180.04" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="933.9" y="3589" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="936.87" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (4 samples, 0.05%)</title><rect x="758.7" y="3413" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="750.7" y="2309" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="753.74" y="2319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="1013.2" y="2197" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="2207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (128 samples, 1.56%)</title><rect x="850.4" y="4261" width="18.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="853.37" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="971.6" y="3093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="974.59" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="892.1" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="895.12" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::current_thread_enable_wx_impl(WXMode) (3 samples, 0.04%)</title><rect x="469.8" y="4805" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text text-anchor="" x="472.85" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (21 samples, 0.26%)</title><rect x="996.8" y="3221" width="3.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.79" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="921.1" y="3253" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="924.06" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (29 samples, 0.35%)</title><rect x="975.5" y="3605" width="4.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.48" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="999.4" y="3013" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.38" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/some (2,000 samples, 24.40%)</title><rect x="73.6" y="4853" width="288.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="76.64" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.core/some</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.intCast (2 samples, 0.02%)</title><rect x="958.1" y="3445" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="961.06" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="1010.9" y="2261" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.90" y="2271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="754.3" y="2709" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (5 samples, 0.06%)</title><rect x="975.6" y="3173" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.62" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1004.6" y="2421" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.56" y="2431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.write (7 samples, 0.09%)</title><rect x="676.4" y="4645" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="679.45" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.DelegatingMethodAccessorImpl (2 samples, 0.02%)</title><rect x="900.8" y="3301" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="903.76" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/first--5401 (2 samples, 0.02%)</title><rect x="717.3" y="4533" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="720.34" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="749.3" y="1237" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="959.1" y="3509" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.07" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="833.7" y="3813" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="836.67" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (131 samples, 1.60%)</title><rect x="1001.8" y="3109" width="18.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.83" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="939.8" y="3557" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="1011.5" y="2213" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.invoke (3 samples, 0.04%)</title><rect x="208.3" y="4533" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.25" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="1013.2" y="1893" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="1903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="979.8" y="3029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client/eval16867/req-&gt;domain--16875 (15 samples, 0.18%)</title><rect x="714.6" y="4565" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="717.60" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>byte_streams$eval15443$f__15332__auto____15444$this__12089__auto____15447$fn__15448$fn__15449.invoke (3 samples, 0.04%)</title><rect x="368.3" y="4805" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="371.35" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="1004.3" y="2549" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.28" y="2559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-listener (3 samples, 0.04%)</title><rect x="316.5" y="4549" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="319.52" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter.getZero (5 samples, 0.06%)</title><rect x="738.2" y="4549" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="741.21" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="992.2" y="2821" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.18" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="760.4" y="3029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.39" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Compile::Optimize() (343 samples, 4.18%)</title><rect x="1122.9" y="4885" width="49.4" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text text-anchor="" x="1125.91" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Comp..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (4 samples, 0.05%)</title><rect x="185.6" y="4501" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="188.65" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="904.2" y="3301" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="907.21" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (15 samples, 0.18%)</title><rect x="762.5" y="3813" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.55" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (111 samples, 1.35%)</title><rect x="911.0" y="4117" width="16.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="913.98" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (4 samples, 0.05%)</title><rect x="782.0" y="4101" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="784.98" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="1011.5" y="2101" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (2 samples, 0.02%)</title><rect x="207.7" y="4485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="210.67" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (18 samples, 0.22%)</title><rect x="928.7" y="3749" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="931.69" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (11 samples, 0.13%)</title><rect x="1002.1" y="2837" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1005.12" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.cons (10 samples, 0.12%)</title><rect x="347.9" y="4485" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="350.90" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="933.0" y="3445" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="936.01" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (3 samples, 0.04%)</title><rect x="210.0" y="4405" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="212.98" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>jshort_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="764.7" y="3845" width="0.3" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text text-anchor="" x="767.70" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (12 samples, 0.15%)</title><rect x="1002.0" y="2965" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.97" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.locks.LockSupport.unpark (35 samples, 0.43%)</title><rect x="500.2" y="4421" width="5.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="503.23" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (5 samples, 0.06%)</title><rect x="1026.9" y="4245" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1029.88" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="954.5" y="3333" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="957.46" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.swap (2 samples, 0.02%)</title><rect x="361.0" y="4597" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="364.01" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Matcher.match (24 samples, 0.29%)</title><rect x="308.6" y="4533" width="3.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="311.60" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (77 samples, 0.94%)</title><rect x="810.1" y="4261" width="11.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="813.06" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="885.8" y="3829" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="888.79" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (3 samples, 0.04%)</title><rect x="180.2" y="4437" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="183.18" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="760.4" y="3157" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.39" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="824.6" y="4133" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="827.60" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="919.6" y="3429" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="770.5" y="3621" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (20 samples, 0.24%)</title><rect x="356.7" y="4501" width="2.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="359.69" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="944.0" y="3605" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="946.95" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="749.3" y="885" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (2 samples, 0.02%)</title><rect x="296.1" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="299.07" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (2 samples, 0.02%)</title><rect x="183.8" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="186.78" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/catch' (2 samples, 0.02%)</title><rect x="505.6" y="4437" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="508.55" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (3 samples, 0.04%)</title><rect x="349.6" y="4517" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="352.63" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="749.3" y="565" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/subscribe--11925/fn--11930 (6 samples, 0.07%)</title><rect x="492.6" y="4101" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="495.60" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.assoc (2 samples, 0.02%)</title><rect x="284.7" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="287.70" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.swap (24 samples, 0.29%)</title><rect x="291.5" y="4533" width="3.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="294.47" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="998.7" y="2837" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1001.66" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (5 samples, 0.06%)</title><rect x="949.4" y="3589" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="968.4" y="3365" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.43" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/apply (4 samples, 0.05%)</title><rect x="368.2" y="4901" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="371.20" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.format (2 samples, 0.02%)</title><rect x="833.8" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="836.81" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="846.3" y="3877" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="849.34" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (11 samples, 0.13%)</title><rect x="973.0" y="3333" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="976.03" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.assoc (3 samples, 0.04%)</title><rect x="733.9" y="4213" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="736.89" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="995.2" y="2709" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.20" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/parse (1,107 samples, 13.51%)</title><rect x="202.2" y="4677" width="159.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="205.20" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >instaparse.gll/parse</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.DefaultChannelPipeline.touch (4 samples, 0.05%)</title><rect x="693.3" y="4757" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="696.29" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$BranchConn.match (6 samples, 0.07%)</title><rect x="795.2" y="4357" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="798.23" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (8 samples, 0.10%)</title><rect x="978.1" y="3237" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipColon (2 samples, 0.02%)</title><rect x="96.8" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="99.82" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (15 samples, 0.18%)</title><rect x="810.9" y="4021" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="813.92" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="982.7" y="3221" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="985.68" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (40 samples, 0.49%)</title><rect x="961.8" y="3605" width="5.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="964.80" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="859.2" y="3685" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="862.15" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="959.9" y="3509" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.93" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (54 samples, 0.66%)</title><rect x="951.1" y="3685" width="7.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="954.15" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (15 samples, 0.18%)</title><rect x="958.9" y="3845" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="961.92" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="886.4" y="3621" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="889.36" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="823.7" y="3781" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="826.73" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="856.8" y="3845" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="859.85" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (15 samples, 0.18%)</title><rect x="852.4" y="3845" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="855.38" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="919.6" y="3461" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (6 samples, 0.07%)</title><rect x="991.7" y="3077" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.75" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.02%)</title><rect x="719.1" y="4373" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="722.07" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="991.2" y="3061" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.17" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="923.2" y="3573" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="926.22" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="892.8" y="3701" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="895.84" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="995.9" y="3285" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.92" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (15 samples, 0.18%)</title><rect x="1002.0" y="3077" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.97" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="985.4" y="3029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="988.41" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (12 samples, 0.15%)</title><rect x="1004.1" y="2869" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.13" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (25 samples, 0.31%)</title><rect x="845.8" y="4357" width="3.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="848.76" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="975.0" y="3269" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.05" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.server/parse-log-and-hash (2 samples, 0.02%)</title><rect x="1057.7" y="4949" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1060.69" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="999.4" y="2981" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1002.38" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="959.2" y="3397" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.21" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="954.5" y="3445" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="957.46" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="848.1" y="3797" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.06" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="947.7" y="3413" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.equiv (4 samples, 0.05%)</title><rect x="67.2" y="5029" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="70.16" y="5039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken (2 samples, 0.02%)</title><rect x="99.0" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="101.98" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>CProjNode::is_CFG() const (2 samples, 0.02%)</title><rect x="1166.0" y="4837" width="0.2" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text text-anchor="" x="1168.96" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="865.2" y="3685" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="984.6" y="2981" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="987.55" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client-middleware/parse-url (37 samples, 0.45%)</title><rect x="728.0" y="4421" width="5.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="730.99" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="963.7" y="3205" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="966.67" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seqFrom (2 samples, 0.02%)</title><rect x="312.8" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="315.77" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="959.1" y="3413" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.07" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="915.2" y="3493" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="918.16" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyResponse.valAt (3 samples, 0.04%)</title><rect x="377.3" y="4789" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="380.27" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Matcher.group (5 samples, 0.06%)</title><rect x="1056.7" y="5029" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1059.68" y="5039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="1011.5" y="2133" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="869.2" y="3909" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.23" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (27 samples, 0.33%)</title><rect x="779.1" y="4261" width="3.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1016.7" y="1365" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.66" y="1375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="813.5" y="3765" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="923.9" y="3733" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="926.94" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentVector$TransientVector.persistent (2 samples, 0.02%)</title><rect x="99.4" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="102.41" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="760.4" y="3125" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.39" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (33 samples, 0.40%)</title><rect x="868.8" y="4309" width="4.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="871.80" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="996.2" y="2901" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.21" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (5 samples, 0.06%)</title><rect x="975.6" y="3317" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="978.62" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-message (5 samples, 0.06%)</title><rect x="210.8" y="4549" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="213.84" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="883.5" y="3605" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="886.48" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.gt (2 samples, 0.02%)</title><rect x="913.4" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="916.43" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (5 samples, 0.06%)</title><rect x="945.1" y="3173" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="948.10" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (71 samples, 0.87%)</title><rect x="1010.0" y="2741" width="10.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1013.03" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (8 samples, 0.10%)</title><rect x="760.2" y="3589" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (40 samples, 0.49%)</title><rect x="803.3" y="4101" width="5.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="806.29" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="817.4" y="3797" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.40" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (16 samples, 0.20%)</title><rect x="834.7" y="4005" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="837.68" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1007.6" y="2501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1010.59" y="2511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="903.8" y="3349" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="906.78" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.default.Stream.take (2 samples, 0.02%)</title><rect x="724.0" y="4229" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="726.96" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (42 samples, 0.51%)</title><rect x="828.1" y="4181" width="6.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="831.05" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="841.4" y="3461" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="844.44" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.misc.Unsafe.park (82 samples, 1.00%)</title><rect x="701.5" y="4517" width="11.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="704.50" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.DefaultHttpHeaders.&lt;init&gt; (2 samples, 0.02%)</title><rect x="720.4" y="4101" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="723.36" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.equal (2 samples, 0.02%)</title><rect x="927.7" y="3781" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="930.68" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="967.6" y="3333" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (17 samples, 0.21%)</title><rect x="996.8" y="3189" width="2.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.79" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="872.0" y="3749" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.96" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="886.4" y="3701" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="889.36" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="973.8" y="3237" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="976.75" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (5 samples, 0.06%)</title><rect x="177.2" y="4341" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="180.15" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="814.7" y="3797" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="817.66" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.add (2 samples, 0.02%)</title><rect x="844.8" y="4085" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="847.75" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="984.0" y="3029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="815.4" y="3669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="818.38" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (3 samples, 0.04%)</title><rect x="879.9" y="3701" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="882.88" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (33 samples, 0.40%)</title><rect x="749.2" y="3173" width="4.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="869.2" y="3941" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.23" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (3 samples, 0.04%)</title><rect x="834.8" y="3845" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="837.82" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="886.4" y="3605" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="889.36" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$TransientHashMap.doAssoc (5 samples, 0.06%)</title><rect x="338.8" y="4389" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="341.83" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="990.5" y="2933" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="993.45" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="983.0" y="2997" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="985.97" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="931.0" y="3429" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="933.99" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.MessageToMessageEncoder.write (6 samples, 0.07%)</title><rect x="692.4" y="4709" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="695.43" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextAfterName (2 samples, 0.02%)</title><rect x="122.0" y="4597" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="125.01" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (14 samples, 0.17%)</title><rect x="172.7" y="4117" width="2.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="959.9" y="3381" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="962.93" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (30 samples, 0.37%)</title><rect x="876.1" y="3893" width="4.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="879.14" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="987.7" y="2677" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.default.Stream.take (2 samples, 0.02%)</title><rect x="478.2" y="4277" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="481.20" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="813.7" y="3637" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.66" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="996.2" y="2981" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.21" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (7 samples, 0.09%)</title><rect x="962.1" y="3557" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="865.6" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (13 samples, 0.16%)</title><rect x="842.3" y="3893" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.31" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (2 samples, 0.02%)</title><rect x="178.0" y="4341" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="181.02" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="923.4" y="3445" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="926.36" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (8 samples, 0.10%)</title><rect x="334.4" y="4549" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="337.37" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.swap (10 samples, 0.12%)</title><rect x="313.2" y="4533" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="316.21" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (367 samples, 4.48%)</title><rect x="969.3" y="3797" width="52.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="972.29" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >cloju..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentVector$ChunkedSeq.next (3 samples, 0.04%)</title><rect x="1030.0" y="4421" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1033.05" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::sleep(Thread*, long, bool) (60 samples, 0.73%)</title><rect x="1039.1" y="4933" width="8.7" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text text-anchor="" x="1042.12" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="285.4" y="4405" width="0.3" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text text-anchor="" x="288.42" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Long.stringSize (2 samples, 0.02%)</title><rect x="895.4" y="3781" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="898.43" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (1,615 samples, 19.70%)</title><rect x="800.4" y="4565" width="232.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="803.41" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.client/rand-json-objec..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="884.1" y="3701" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="887.06" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (2 samples, 0.02%)</title><rect x="509.6" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="512.59" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (2 samples, 0.02%)</title><rect x="736.1" y="4549" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="739.05" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/catch' (3 samples, 0.04%)</title><rect x="735.5" y="4501" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="738.48" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (4 samples, 0.05%)</title><rect x="368.9" y="4805" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="371.92" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (24 samples, 0.29%)</title><rect x="834.4" y="4101" width="3.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="837.39" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (5 samples, 0.06%)</title><rect x="843.3" y="3749" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.31" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.AbstractList.&lt;init&gt; (11 samples, 0.13%)</title><rect x="192.0" y="4549" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="194.98" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpUtil.isKeepAlive (2 samples, 0.02%)</title><rect x="377.4" y="4741" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="380.42" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (9 samples, 0.11%)</title><rect x="983.7" y="3189" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.69" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1006.4" y="2309" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.43" y="2319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (12 samples, 0.15%)</title><rect x="1002.0" y="2885" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.97" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="905.4" y="3333" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="908.37" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.getMethods (2 samples, 0.02%)</title><rect x="849.8" y="4325" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="852.79" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="935.2" y="3637" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="938.17" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.nio.SelectedSelectionKeySetSelector.wakeup (31 samples, 0.38%)</title><rect x="363.0" y="4581" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="366.02" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client-middleware/wrap-request/fn--18254 (123 samples, 1.50%)</title><rect x="717.8" y="4501" width="17.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="720.77" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/assoc! (3 samples, 0.04%)</title><rect x="117.1" y="4597" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="120.12" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (4 samples, 0.05%)</title><rect x="179.0" y="4437" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="182.02" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1005.6" y="2421" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1008.57" y="2431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (3 samples, 0.04%)</title><rect x="320.1" y="4421" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="323.12" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (7 samples, 0.09%)</title><rect x="922.9" y="3717" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="946.3" y="3365" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.createHT (5 samples, 0.06%)</title><rect x="733.9" y="4293" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="736.89" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="765.7" y="3669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="768.71" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>StoreNode::Ideal(PhaseGVN*, bool) (2 samples, 0.02%)</title><rect x="1171.6" y="4837" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text text-anchor="" x="1174.57" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="808.0" y="3909" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="811.04" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1014.2" y="1989" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1017.21" y="1999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (3 samples, 0.04%)</title><rect x="304.7" y="4453" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="307.71" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (17 samples, 0.21%)</title><rect x="946.7" y="3589" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.69" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (8 samples, 0.10%)</title><rect x="867.5" y="4053" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="870.50" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (19 samples, 0.23%)</title><rect x="766.9" y="4005" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="769.86" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.equiv (2 samples, 0.02%)</title><rect x="747.3" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="750.28" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (102 samples, 1.24%)</title><rect x="875.0" y="4197" width="14.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="877.99" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.&lt;init&gt; (2 samples, 0.02%)</title><rect x="78.4" y="4677" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="81.39" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Curly.match0 (16 samples, 0.20%)</title><rect x="309.6" y="4501" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="312.61" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (12 samples, 0.15%)</title><rect x="1002.0" y="2933" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1004.97" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (7 samples, 0.09%)</title><rect x="936.6" y="3525" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="939.61" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="939.8" y="3669" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken (4 samples, 0.05%)</title><rect x="100.0" y="4485" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="102.98" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (806 samples, 9.83%)</title><rect x="910.0" y="4213" width="116.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="912.97" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.client..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (7 samples, 0.09%)</title><rect x="337.5" y="4501" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="340.54" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (7 samples, 0.09%)</title><rect x="985.3" y="3397" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="988.27" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="1006.9" y="2885" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.87" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="348.6" y="4357" width="0.3" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text text-anchor="" x="351.62" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="933.0" y="3397" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="936.01" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/generate-request (1,985 samples, 24.22%)</title><rect x="748.0" y="4629" width="285.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.00" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.client/generate-request</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="982.7" y="3189" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="985.68" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="884.9" y="3573" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="887.92" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="832.8" y="3781" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="835.80" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.AFn.applyToHelper (10 samples, 0.12%)</title><rect x="743.1" y="4565" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="746.11" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="749.3" y="725" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="1004.3" y="2709" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.28" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::Parse(JVMState*, ciMethod*, float) (13 samples, 0.16%)</title><rect x="1172.4" y="4789" width="1.9" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text text-anchor="" x="1175.44" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="890.7" y="3637" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="893.68" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.nio.ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="507.3" y="4245" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="510.28" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>NodeHash::hash_find_insert(Node*) (2 samples, 0.02%)</title><rect x="1170.7" y="4837" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text text-anchor="" x="1173.71" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.success (62 samples, 0.76%)</title><rect x="483.7" y="3973" width="8.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="486.67" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1010.3" y="2245" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1013.32" y="2255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="1005.4" y="2597" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1008.43" y="2607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannel$AbstractUnsafe.flush0 (84 samples, 1.02%)</title><rect x="680.2" y="4581" width="12.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.19" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="988.9" y="3045" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (8 samples, 0.10%)</title><rect x="776.7" y="4021" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="779.65" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.getMethods (27 samples, 0.33%)</title><rect x="188.0" y="4565" width="3.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="190.95" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (7 samples, 0.09%)</title><rect x="994.9" y="2901" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="991.2" y="2997" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="994.17" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (14 samples, 0.17%)</title><rect x="904.6" y="3717" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.65" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (4 samples, 0.05%)</title><rect x="760.2" y="3237" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="991.5" y="2581" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.46" y="2591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="937.2" y="3221" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="940.18" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (2 samples, 0.02%)</title><rect x="1033.5" y="4581" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1036.50" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.internal.ObjectPool$RecyclerObjectPool.get (2 samples, 0.02%)</title><rect x="474.6" y="4597" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.60" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="818.7" y="3813" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="821.69" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (278 samples, 3.39%)</title><rect x="85.3" y="4661" width="40.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="88.30" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >che..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (127 samples, 1.55%)</title><rect x="717.8" y="4533" width="18.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="720.77" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeMatchingMethod (3 samples, 0.04%)</title><rect x="801.7" y="4501" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="804.71" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="992.0" y="2949" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.04" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (17 samples, 0.21%)</title><rect x="838.4" y="4037" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="841.42" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="986.7" y="3141" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="989.71" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (12 samples, 0.15%)</title><rect x="917.7" y="3717" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="920.75" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (16 samples, 0.20%)</title><rect x="993.6" y="3157" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="996.62" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::WXWriteFromExecSetter::~WXWriteFromExecSetter() (2 samples, 0.02%)</title><rect x="470.4" y="4853" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text text-anchor="" x="473.42" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="939.8" y="3349" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (31 samples, 0.38%)</title><rect x="821.4" y="4421" width="4.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="824.43" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (5 samples, 0.06%)</title><rect x="1019.0" y="1301" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1021.96" y="1311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="943.1" y="3429" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="946.09" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="837.3" y="3861" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="840.27" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="1004.9" y="2533" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.85" y="2543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (9 samples, 0.11%)</title><rect x="963.4" y="3237" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="966.39" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.contains (2 samples, 0.02%)</title><rect x="482.1" y="4341" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="485.09" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (5 samples, 0.06%)</title><rect x="878.6" y="3637" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="881.59" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="940.1" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="943.06" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (17 samples, 0.21%)</title><rect x="886.2" y="3829" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="889.22" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="929.0" y="3381" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="931.98" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.addAll (2 samples, 0.02%)</title><rect x="813.8" y="3557" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.80" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="892.8" y="3669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="895.84" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (8 samples, 0.10%)</title><rect x="884.6" y="3781" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="887.63" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="885.5" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="888.50" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (7 samples, 0.09%)</title><rect x="936.6" y="3541" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="939.61" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.fireChannelRead (263 samples, 3.21%)</title><rect x="474.5" y="4805" width="37.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.46" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (17 samples, 0.21%)</title><rect x="881.5" y="3717" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="884.47" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="888.4" y="3733" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="891.38" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="940.4" y="3669" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="943.35" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="822.3" y="3877" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.29" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (6 samples, 0.07%)</title><rect x="783.9" y="4069" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.85" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (3 samples, 0.04%)</title><rect x="784.1" y="3941" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="787.14" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="841.4" y="3637" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="844.44" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartObject (3 samples, 0.04%)</title><rect x="788.3" y="4565" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="791.32" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (4 samples, 0.05%)</title><rect x="305.3" y="4533" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="308.29" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="752.5" y="2693" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.47" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="782.3" y="4053" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="785.27" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="879.5" y="3557" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="882.45" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (7 samples, 0.09%)</title><rect x="1007.9" y="2549" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.87" y="2559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="935.7" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="938.74" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="991.5" y="2645" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="994.46" y="2655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.UTF_8$Encoder.encode (5 samples, 0.06%)</title><rect x="672.3" y="4757" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.27" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (17 samples, 0.21%)</title><rect x="996.8" y="3045" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.79" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (25 samples, 0.31%)</title><rect x="928.7" y="3797" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="931.69" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="1010.8" y="2293" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (9 samples, 0.11%)</title><rect x="999.8" y="3109" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1002.81" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="965.4" y="3221" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="968.40" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="848.5" y="3957" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.50" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>nmethod::new_nmethod(methodHandle, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (4 samples, 0.05%)</title><rect x="1176.9" y="4837" width="0.6" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text text-anchor="" x="1179.90" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/non-terminal-full-parse (6 samples, 0.07%)</title><rect x="208.7" y="4581" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="211.68" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="914.0" y="3749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="917.00" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (8 samples, 0.10%)</title><rect x="343.0" y="4453" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="346.01" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parker::park(bool, long) (583 samples, 7.11%)</title><rect x="385.9" y="4869" width="83.9" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text text-anchor="" x="388.91" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Parker::p..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (13 samples, 0.16%)</title><rect x="970.2" y="3461" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="973.15" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="837.3" y="3813" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="840.27" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>byte_streams.pushback_stream.SynchronizedPushbackByteStream.take (4 samples, 0.05%)</title><rect x="82.7" y="4485" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="85.71" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.invoke (15 samples, 0.18%)</title><rect x="336.4" y="4549" width="2.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="339.39" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="997.8" y="2549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (7 samples, 0.09%)</title><rect x="765.6" y="3797" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="768.57" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (10 samples, 0.12%)</title><rect x="917.7" y="3573" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="920.75" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (12 samples, 0.15%)</title><rect x="942.1" y="3525" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="945.08" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="1008.9" y="2645" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (1,248 samples, 15.23%)</title><rect x="849.4" y="4453" width="179.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="852.36" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.client/rand-jso..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (6 samples, 0.07%)</title><rect x="900.2" y="3493" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="903.18" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="1007.6" y="2581" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.59" y="2591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="866.3" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="869.35" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$BmpCharProperty.match (2 samples, 0.02%)</title><rect x="310.5" y="4341" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="313.47" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$7.isSatisfiedBy (2 samples, 0.02%)</title><rect x="731.4" y="3973" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="734.45" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="926.1" y="3493" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="929.10" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (5 samples, 0.06%)</title><rect x="841.3" y="3797" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="844.30" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="981.8" y="2821" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="984.82" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="988.3" y="3093" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.29" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="988.9" y="3029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="900.8" y="3365" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="903.76" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (3 samples, 0.04%)</title><rect x="767.3" y="3717" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.30" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/swap! (17 samples, 0.21%)</title><rect x="298.5" y="4533" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="301.52" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="908.8" y="3445" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="497.3" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="500.35" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1007.9" y="2341" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1010.87" y="2351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="987.1" y="3189" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.14" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1017.4" y="1221" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="988.0" y="2869" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="991.01" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (28 samples, 0.34%)</title><rect x="922.9" y="4005" width="4.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (14 samples, 0.17%)</title><rect x="749.2" y="2453" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (11 samples, 0.13%)</title><rect x="1007.3" y="2725" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.30" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand (2 samples, 0.02%)</title><rect x="796.8" y="4581" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="799.81" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="1012.8" y="2277" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1015.77" y="2287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="993.0" y="3077" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.05" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (12 samples, 0.15%)</title><rect x="994.2" y="3077" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.20" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="775.2" y="3765" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.21" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method (2 samples, 0.02%)</title><rect x="900.8" y="3317" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="903.76" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="822.0" y="4005" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (25 samples, 0.31%)</title><rect x="895.7" y="3941" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="898.72" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="1015.5" y="2101" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.51" y="2111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (10 samples, 0.12%)</title><rect x="887.2" y="3749" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="890.23" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken (5 samples, 0.06%)</title><rect x="123.2" y="4629" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="126.16" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.Recycler$DefaultHandle.recycle (2 samples, 0.02%)</title><rect x="514.2" y="4677" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="517.19" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="342.7" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="345.72" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="1015.9" y="1989" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.94" y="1999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand-int (2 samples, 0.02%)</title><rect x="958.1" y="3461" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="961.06" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="985.4" y="3205" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="988.41" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (24 samples, 0.29%)</title><rect x="1016.4" y="2101" width="3.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.37" y="2111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="811.4" y="3765" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="814.35" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PoolArena.freeChunk (2 samples, 0.02%)</title><rect x="509.9" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="512.87" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="977.6" y="3205" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="980.64" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (4 samples, 0.05%)</title><rect x="76.2" y="4693" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="79.23" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="974.8" y="3269" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (132 samples, 1.61%)</title><rect x="717.3" y="4565" width="19.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="720.34" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="988.9" y="3445" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (10 samples, 0.12%)</title><rect x="823.2" y="4085" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="826.16" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.replace (6 samples, 0.07%)</title><rect x="731.9" y="4373" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="734.88" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (10 samples, 0.12%)</title><rect x="766.9" y="3909" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="769.86" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="807.6" y="3797" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="810.61" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="815.4" y="3813" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="818.38" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentVector$TransientVector.persistent (2 samples, 0.02%)</title><rect x="98.7" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="101.69" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (7 samples, 0.09%)</title><rect x="809.0" y="4229" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="812.05" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers$LongOps.equiv (2 samples, 0.02%)</title><rect x="900.3" y="3333" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="903.33" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="1018.7" y="1253" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="864.8" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="867.77" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.containsKey (2 samples, 0.02%)</title><rect x="66.0" y="4917" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="69.01" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (10 samples, 0.12%)</title><rect x="807.3" y="3989" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="810.32" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.server/handle-request/fn--16614 (3 samples, 0.04%)</title><rect x="505.6" y="4469" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="508.55" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.copyMethods (2 samples, 0.02%)</title><rect x="996.9" y="2677" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.93" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="859.3" y="3557" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="862.29" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="1016.9" y="1941" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="1951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.copyMethods (2 samples, 0.02%)</title><rect x="852.0" y="3797" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="854.95" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (323 samples, 3.94%)</title><rect x="975.3" y="3733" width="46.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.34" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >exam..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="966.1" y="3221" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="969.12" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (54 samples, 0.66%)</title><rect x="951.1" y="3749" width="7.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="954.15" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.meta (2 samples, 0.02%)</title><rect x="278.5" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="281.51" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="1008.2" y="2389" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.16" y="2399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (7 samples, 0.09%)</title><rect x="922.9" y="3653" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="978.9" y="3173" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.94" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.matcher (2 samples, 0.02%)</title><rect x="728.6" y="4341" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="731.57" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.more (2 samples, 0.02%)</title><rect x="773.8" y="3909" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="776.78" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (17 samples, 0.21%)</title><rect x="881.5" y="3781" width="2.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="884.47" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/total-success? (5 samples, 0.06%)</title><rect x="305.1" y="4549" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="308.14" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="1013.2" y="2117" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="2127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Double.valueOf (3 samples, 0.04%)</title><rect x="1029.0" y="4389" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1032.04" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (12 samples, 0.15%)</title><rect x="817.7" y="4005" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="820.69" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="983.3" y="3029" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.26" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="921.1" y="3237" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="924.06" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="946.3" y="3413" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="1002.5" y="2645" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1005.55" y="2655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (48 samples, 0.59%)</title><rect x="813.4" y="4165" width="6.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.37" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="996.2" y="2821" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.21" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="832.8" y="3797" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="835.80" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="994.9" y="2773" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Start.match (9 samples, 0.11%)</title><rect x="740.8" y="4501" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="743.81" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="817.4" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.40" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyResponse.valAt (3 samples, 0.04%)</title><rect x="377.3" y="4805" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="380.27" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="913.0" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="916.00" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="933.3" y="3413" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="936.30" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="929.6" y="3413" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="932.55" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.assoc (2 samples, 0.02%)</title><rect x="72.3" y="4965" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="75.34" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (9 samples, 0.11%)</title><rect x="890.0" y="3893" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="994.5" y="2725" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.49" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (13 samples, 0.16%)</title><rect x="829.9" y="3749" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="832.92" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (5 samples, 0.06%)</title><rect x="1006.1" y="2597" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (6 samples, 0.07%)</title><rect x="901.2" y="3621" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="904.19" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="861.6" y="3797" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="864.60" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="947.7" y="3285" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="980.2" y="3269" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="983.23" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (54 samples, 0.66%)</title><rect x="749.0" y="3573" width="7.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="933.0" y="3269" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="936.01" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.copyMethods (7 samples, 0.09%)</title><rect x="135.5" y="4613" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="138.54" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="846.3" y="3797" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="849.34" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.aleph.dirigiste.Executor.execute (6 samples, 0.07%)</title><rect x="382.5" y="4725" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="385.46" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="767.3" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.30" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hasheq (4 samples, 0.05%)</title><rect x="351.4" y="4389" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="354.36" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="984.3" y="2853" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="987.26" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (14 samples, 0.17%)</title><rect x="749.2" y="2437" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (10 samples, 0.12%)</title><rect x="981.2" y="3221" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="984.24" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractPooledDerivedByteBuf.deallocate (6 samples, 0.07%)</title><rect x="509.9" y="4485" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="512.87" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="900.2" y="3429" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="903.18" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (8 samples, 0.10%)</title><rect x="951.9" y="3557" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="954.87" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (101 samples, 1.23%)</title><rect x="187.1" y="4597" width="14.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="190.09" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (20 samples, 0.24%)</title><rect x="870.7" y="4085" width="2.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="873.67" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="786.7" y="4133" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="789.73" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (6 samples, 0.07%)</title><rect x="939.8" y="3717" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="859.3" y="3541" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="862.29" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="989.4" y="3013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.45" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_jit_write_protect_np (6 samples, 0.07%)</title><rect x="12.2" y="4981" width="0.8" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text text-anchor="" x="15.16" y="4991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="890.0" y="3781" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (78 samples, 0.95%)</title><rect x="749.0" y="3733" width="11.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractReferenceCountedByteBuf$1.unsafeOffset (2 samples, 0.02%)</title><rect x="498.4" y="4517" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="501.36" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="1014.6" y="2165" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1017.64" y="2175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (2 samples, 0.02%)</title><rect x="359.1" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="362.13" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="902.8" y="3621" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="905.77" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>foward_copy_longs (57 samples, 0.70%)</title><rect x="38.9" y="5013" width="8.2" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text text-anchor="" x="41.94" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="872.7" y="3781" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (77 samples, 0.94%)</title><rect x="87.5" y="4469" width="11.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="90.46" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (10 samples, 0.12%)</title><rect x="823.2" y="4165" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="826.16" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (12 samples, 0.15%)</title><rect x="817.7" y="4021" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.69" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.doEquiv (2 samples, 0.02%)</title><rect x="207.7" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="210.67" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="978.4" y="2901" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="981.36" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="866.2" y="3637" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="869.21" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1016.7" y="1445" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.66" y="1455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/subscribe--11925/fn--11926 (75 samples, 0.92%)</title><rect x="482.7" y="4389" width="10.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="485.66" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="936.0" y="3397" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="939.03" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (5 samples, 0.06%)</title><rect x="928.0" y="3781" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="930.97" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (7 samples, 0.09%)</title><rect x="1004.9" y="2725" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.85" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (54 samples, 0.66%)</title><rect x="951.1" y="3733" width="7.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="954.15" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.chrono.IsoChronology.zonedDateTime (2 samples, 0.02%)</title><rect x="799.5" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="802.55" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (4 samples, 0.05%)</title><rect x="785.7" y="4101" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.72" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (10 samples, 0.12%)</title><rect x="807.3" y="4021" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="810.32" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (17 samples, 0.21%)</title><rect x="810.9" y="4197" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="813.92" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/slurp (40 samples, 0.49%)</title><rect x="742.2" y="4613" width="5.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="745.24" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.10%)</title><rect x="1172.9" y="4709" width="1.1" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text text-anchor="" x="1175.87" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (6 samples, 0.07%)</title><rect x="837.0" y="3909" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="839.98" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Murmur3.hashUnordered (6 samples, 0.07%)</title><rect x="328.2" y="4389" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="331.18" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (126 samples, 1.54%)</title><rect x="748.7" y="4053" width="18.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.72" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (15 samples, 0.18%)</title><rect x="749.2" y="2549" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="765.0" y="3637" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (40 samples, 0.49%)</title><rect x="803.3" y="4181" width="5.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="806.29" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyRequest.get__9 (2 samples, 0.02%)</title><rect x="73.6" y="4725" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="76.64" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="929.0" y="3429" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="931.98" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (13 samples, 0.16%)</title><rect x="878.4" y="3765" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="881.44" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (13 samples, 0.16%)</title><rect x="965.4" y="3349" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="968.40" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/subscribe--11925/fn--11926 (13 samples, 0.16%)</title><rect x="371.8" y="4901" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="374.80" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::sleep(Thread*, long, bool) (41 samples, 0.50%)</title><rect x="1049.9" y="4933" width="5.9" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text text-anchor="" x="1052.91" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.AFn.&lt;init&gt; (2 samples, 0.02%)</title><rect x="78.4" y="4661" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="81.39" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (5 samples, 0.06%)</title><rect x="843.3" y="3765" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="846.31" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.GeneratedMethodAccessor49 (9 samples, 0.11%)</title><rect x="798.7" y="4533" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="801.68" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (8 samples, 0.10%)</title><rect x="1027.9" y="4389" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1030.89" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="506.4" y="4469" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="509.42" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="1006.3" y="2517" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.29" y="2527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (34 samples, 0.41%)</title><rect x="851.5" y="3941" width="4.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="854.52" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="939.8" y="3429" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="901.8" y="3541" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="904.77" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue$TransferStack.transfer (609 samples, 7.43%)</title><rect x="383.9" y="4949" width="87.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="386.90" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="953.0" y="3541" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.02" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/success! (35 samples, 0.43%)</title><rect x="378.3" y="4869" width="5.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="381.28" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (12 samples, 0.15%)</title><rect x="185.4" y="4581" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="188.36" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (91 samples, 1.11%)</title><rect x="749.0" y="3781" width="13.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="995.6" y="2261" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand-int (2 samples, 0.02%)</title><rect x="899.5" y="3877" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="902.46" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="1004.9" y="2549" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.85" y="2559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="785.3" y="4085" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.29" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="813.1" y="4037" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.08" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="840.0" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="843.00" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="953.0" y="3557" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.02" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (75 samples, 0.92%)</title><rect x="927.7" y="3861" width="10.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="930.68" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (10 samples, 0.12%)</title><rect x="749.2" y="2261" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="997.4" y="2949" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.36" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="930.4" y="3349" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="933.42" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1006.4" y="2357" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.43" y="2367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (5 samples, 0.06%)</title><rect x="1005.1" y="2645" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1008.14" y="2655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (9 samples, 0.11%)</title><rect x="350.9" y="4485" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="353.93" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (7 samples, 0.09%)</title><rect x="930.3" y="3541" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="933.27" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (7 samples, 0.09%)</title><rect x="984.0" y="3109" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand-int (2 samples, 0.02%)</title><rect x="980.7" y="3317" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="983.66" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="936.0" y="3413" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="939.03" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.Callback.put (2 samples, 0.02%)</title><rect x="479.4" y="4213" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="482.35" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="822.3" y="3925" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.29" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="1008.9" y="2661" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (42 samples, 0.51%)</title><rect x="828.1" y="4197" width="6.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="831.05" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.ZonedDateTime.ofInstant (2 samples, 0.02%)</title><rect x="969.6" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.58" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="935.2" y="3381" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="938.17" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (3 samples, 0.04%)</title><rect x="67.3" y="4981" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="70.30" y="4991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (6 samples, 0.07%)</title><rect x="887.5" y="3701" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="890.51" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.assoc (2 samples, 0.02%)</title><rect x="208.0" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="210.96" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="1000.7" y="2725" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1003.68" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="946.3" y="3557" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (48 samples, 0.59%)</title><rect x="813.4" y="4197" width="6.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.37" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="852.5" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="855.53" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http/eval18308/request--18312/fn--18314/fn--18317/fn--18322/fn--18327/fn--18330 (6 samples, 0.07%)</title><rect x="376.8" y="4837" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="379.84" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="925.1" y="3589" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="928.09" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1009.6" y="2325" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1012.60" y="2335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="1010.2" y="2373" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.18" y="2383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="993.9" y="2901" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="996.91" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="962.7" y="3285" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="965.67" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (55 samples, 0.67%)</title><rect x="941.5" y="3909" width="7.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="944.50" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="969.9" y="3461" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="865.2" y="3733" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="848.1" y="3973" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="851.06" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (24 samples, 0.29%)</title><rect x="816.0" y="4085" width="3.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="818.96" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeMatchingMethod (2 samples, 0.02%)</title><rect x="878.9" y="3413" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="881.88" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="822.7" y="4069" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (25 samples, 0.31%)</title><rect x="845.8" y="4405" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="848.76" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (20 samples, 0.24%)</title><rect x="88.5" y="4373" width="2.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="91.47" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="990.5" y="2965" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="993.45" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (54 samples, 0.66%)</title><rect x="941.6" y="3781" width="7.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="944.65" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (34 samples, 0.41%)</title><rect x="969.9" y="3493" width="4.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Matcher.reset (2 samples, 0.02%)</title><rect x="740.4" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="743.37" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="843.6" y="3621" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.60" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (6 samples, 0.07%)</title><rect x="846.0" y="4005" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.05" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.SocketChannelImpl.write (78 samples, 0.95%)</title><rect x="681.1" y="4549" width="11.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="684.06" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="823.7" y="3765" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="826.73" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="850.9" y="4085" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="853.94" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (12 samples, 0.15%)</title><rect x="865.2" y="3845" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeHandler (2 samples, 0.02%)</title><rect x="694.0" y="4645" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="697.01" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>write (29 samples, 0.35%)</title><rect x="363.3" y="4517" width="4.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text text-anchor="" x="366.31" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="980.2" y="3381" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="983.23" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="890.7" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="893.68" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="902.8" y="3717" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="905.77" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.AFn.run (6,674 samples, 81.43%)</title><rect x="73.5" y="5013" width="960.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="76.49" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.lang.AFn.run</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken (5 samples, 0.06%)</title><rect x="91.6" y="4373" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="94.63" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.ZonedDateTime.ofInstant (2 samples, 0.02%)</title><rect x="799.5" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="802.55" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="965.5" y="3093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="968.55" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern.matcher (2 samples, 0.02%)</title><rect x="77.1" y="4725" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="80.09" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="814.2" y="3685" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="817.23" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (5 samples, 0.06%)</title><rect x="752.8" y="2821" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.76" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="995.5" y="2805" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="998.49" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1014.2" y="1893" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1017.21" y="1903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="750.0" y="1813" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="753.02" y="1823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (8 samples, 0.10%)</title><rect x="1000.0" y="2997" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1002.96" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="978.1" y="3077" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (15 samples, 0.18%)</title><rect x="852.4" y="3861" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="855.38" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/swap! (104 samples, 1.27%)</title><rect x="187.1" y="4645" width="15.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="190.09" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.locks.LockSupport.unpark (4 samples, 0.05%)</title><rect x="371.2" y="4773" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="374.23" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannel$AbstractUnsafe.flush0 (24 samples, 0.29%)</title><rect x="673.0" y="4469" width="3.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (9 samples, 0.11%)</title><rect x="890.0" y="3925" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="952.6" y="3349" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="955.59" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="771.8" y="3653" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="774.76" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="818.7" y="3861" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="821.69" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (7 samples, 0.09%)</title><rect x="780.5" y="4101" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="783.54" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (92 samples, 1.12%)</title><rect x="927.5" y="4021" width="13.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="930.54" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (24 samples, 0.29%)</title><rect x="989.9" y="3381" width="3.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.88" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.InputStreamReader.&lt;init&gt; (5 samples, 0.06%)</title><rect x="79.8" y="4597" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="82.83" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseIFG::effective_degree(unsigned int) const (2 samples, 0.02%)</title><rect x="1119.9" y="4837" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text text-anchor="" x="1122.89" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (6 samples, 0.07%)</title><rect x="34.3" y="5013" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="37.33" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (20 samples, 0.24%)</title><rect x="284.7" y="4453" width="2.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="287.70" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="935.2" y="3525" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="938.17" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (8 samples, 0.10%)</title><rect x="951.9" y="3477" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="954.87" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (15 samples, 0.18%)</title><rect x="810.9" y="4117" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="813.92" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="896.9" y="3509" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="899.87" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="860.2" y="3589" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="863.16" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeMatchingMethod (3 samples, 0.04%)</title><rect x="942.5" y="3429" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="945.51" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol (3 samples, 0.04%)</title><rect x="109.9" y="4517" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="112.92" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (6 samples, 0.07%)</title><rect x="774.6" y="3941" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (32 samples, 0.39%)</title><rect x="980.7" y="3493" width="4.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="983.66" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="984.3" y="2869" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="987.26" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (7 samples, 0.09%)</title><rect x="994.9" y="2965" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method.&lt;init&gt; (11 samples, 0.13%)</title><rect x="190.1" y="4485" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="193.11" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (6 samples, 0.07%)</title><rect x="901.2" y="3589" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="904.19" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentVector$TransientVector.persistent (4 samples, 0.05%)</title><rect x="105.2" y="4517" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="108.17" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (10 samples, 0.12%)</title><rect x="887.2" y="3797" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="890.23" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.cons (7 samples, 0.09%)</title><rect x="313.5" y="4485" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="316.49" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (6 samples, 0.07%)</title><rect x="947.7" y="3381" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (8 samples, 0.10%)</title><rect x="1011.5" y="2341" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="1009.5" y="2485" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1012.46" y="2495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractByteBuf.readRetainedSlice (2 samples, 0.02%)</title><rect x="474.6" y="4661" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.60" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (13 samples, 0.16%)</title><rect x="756.8" y="3557" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (3 samples, 0.04%)</title><rect x="750.7" y="2421" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="753.74" y="2431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="869.2" y="3989" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.23" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (2 samples, 0.02%)</title><rect x="751.9" y="2741" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="754.89" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1019.4" y="885" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.39" y="895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="946.0" y="3381" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="948.97" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="935.5" y="3365" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="938.46" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="925.1" y="3637" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="928.09" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="839.3" y="3717" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="842.28" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="846.6" y="3957" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.63" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="970.7" y="3013" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="973.73" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="912.3" y="3509" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="915.28" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="759.8" y="3429" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.81" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/str (4 samples, 0.05%)</title><rect x="127.8" y="4725" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="130.77" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.success (59 samples, 0.72%)</title><rect x="483.8" y="3893" width="8.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="486.81" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.find (2 samples, 0.02%)</title><rect x="322.7" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="325.71" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="975.8" y="3061" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.77" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="840.0" y="3477" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="843.00" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="749.3" y="197" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-result (70 samples, 0.85%)</title><rect x="210.0" y="4565" width="10.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="212.98" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="848.5" y="4021" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="851.50" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="929.0" y="3461" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="931.98" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="883.9" y="3877" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="886.91" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll.Tramp$reify__19373.get (2 samples, 0.02%)</title><rect x="298.2" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="301.23" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="866.2" y="3573" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="869.21" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="902.8" y="3733" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="905.77" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (17 samples, 0.21%)</title><rect x="924.5" y="3861" width="2.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="927.51" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.invoke (4 samples, 0.05%)</title><rect x="208.8" y="4533" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.83" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="847.2" y="3845" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="850.20" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.ATransientMap.assoc (4 samples, 0.05%)</title><rect x="733.9" y="4245" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="736.89" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (3 samples, 0.04%)</title><rect x="177.2" y="4277" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="180.15" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (7 samples, 0.09%)</title><rect x="773.1" y="3973" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="776.06" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (16 samples, 0.20%)</title><rect x="770.5" y="3957" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="982.7" y="3173" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="985.68" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="993.8" y="3045" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.77" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (3 samples, 0.04%)</title><rect x="751.3" y="2485" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="754.32" y="2495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="994.9" y="2629" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (16 samples, 0.20%)</title><rect x="838.4" y="3941" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="841.42" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.AFn.run (2,321 samples, 28.32%)</title><rect x="700.2" y="4965" width="334.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="703.20" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.lang.AFn.run</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (5 samples, 0.06%)</title><rect x="185.5" y="4549" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="188.50" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (63 samples, 0.77%)</title><rect x="172.7" y="4517" width="9.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.ByteToMessageDecoder.callDecode (45 samples, 0.55%)</title><rect x="474.5" y="4725" width="6.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.46" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="946.3" y="3253" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (4 samples, 0.05%)</title><rect x="172.7" y="3653" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="1001.1" y="3093" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.format (3 samples, 0.04%)</title><rect x="942.5" y="3365" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="945.51" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (21 samples, 0.26%)</title><rect x="858.6" y="3813" width="3.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="861.57" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="898.7" y="3717" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="901.74" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="984.0" y="2821" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="923.7" y="3573" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="926.65" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (16 samples, 0.20%)</title><rect x="914.9" y="3765" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="917.87" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (2 samples, 0.02%)</title><rect x="332.1" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="335.07" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1009.6" y="2341" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.60" y="2351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.server/hash-total/append--21778/fn--21779 (104 samples, 1.27%)</title><rect x="187.1" y="4613" width="15.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="190.09" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Compiler::compile_method(ciEnv*, ciMethod*, int) (15 samples, 0.18%)</title><rect x="1175.5" y="4917" width="2.1" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text text-anchor="" x="1178.46" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="979.7" y="3589" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="982.66" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (4 samples, 0.05%)</title><rect x="336.4" y="4501" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="339.39" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="919.6" y="3381" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="859.3" y="3621" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="862.29" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="994.9" y="2693" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (28 samples, 0.34%)</title><rect x="922.9" y="3909" width="4.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="749.3" y="1141" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (14 samples, 0.17%)</title><rect x="829.8" y="3893" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="832.78" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (2 samples, 0.02%)</title><rect x="760.4" y="2901" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.39" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (7 samples, 0.09%)</title><rect x="773.1" y="4005" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="776.06" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (4 samples, 0.05%)</title><rect x="172.7" y="3685" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="866.2" y="3605" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="869.21" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="822.0" y="4117" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.access$700 (2 samples, 0.02%)</title><rect x="733.9" y="4197" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="736.89" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="992.6" y="3253" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="995.61" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (5 samples, 0.06%)</title><rect x="841.3" y="3733" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="844.30" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="994.9" y="2789" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/atom (2 samples, 0.02%)</title><rect x="342.1" y="4533" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="345.14" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="890.7" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="893.68" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="976.1" y="3045" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.06" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (4 samples, 0.05%)</title><rect x="1032.3" y="4485" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1035.35" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="1007.6" y="2533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1010.59" y="2543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (7 samples, 0.09%)</title><rect x="929.0" y="3509" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="931.98" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="749.3" y="133" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="843.3" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.31" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (2 samples, 0.02%)</title><rect x="207.7" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="210.67" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.copyMethods (27 samples, 0.33%)</title><rect x="188.0" y="4549" width="3.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="190.95" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="848.1" y="3861" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="851.06" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="838.7" y="3605" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="841.71" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Long.toString (2 samples, 0.02%)</title><rect x="127.8" y="4661" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="130.77" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format (2 samples, 0.02%)</title><rect x="900.8" y="3237" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="903.76" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (4 samples, 0.05%)</title><rect x="766.0" y="3685" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="769.00" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.addAll (2 samples, 0.02%)</title><rect x="804.6" y="3973" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="807.59" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (42 samples, 0.51%)</title><rect x="749.0" y="3381" width="6.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (19 samples, 0.23%)</title><rect x="972.0" y="3477" width="2.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="975.03" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="822.7" y="3893" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/conj--5407 (4 samples, 0.05%)</title><rect x="74.6" y="4597" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="77.64" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (2 samples, 0.02%)</title><rect x="182.2" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="185.19" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="905.4" y="3445" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="908.37" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (2 samples, 0.02%)</title><rect x="314.1" y="4357" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="317.07" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (5 samples, 0.06%)</title><rect x="949.4" y="3733" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (16 samples, 0.20%)</title><rect x="907.7" y="4101" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="910.67" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="985.4" y="3125" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="988.41" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.default.Stream.take (2 samples, 0.02%)</title><rect x="724.0" y="4213" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="726.96" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.GeneratedMethodAccessor49 (2 samples, 0.02%)</title><rect x="878.9" y="3365" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="881.88" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (11 samples, 0.13%)</title><rect x="939.2" y="3765" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.20" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="760.4" y="2949" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.39" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="885.8" y="3765" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="888.79" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="817.8" y="3909" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.83" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (2 samples, 0.02%)</title><rect x="940.4" y="3637" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="943.35" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (4 samples, 0.05%)</title><rect x="779.1" y="4021" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (9 samples, 0.11%)</title><rect x="959.8" y="3653" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.79" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (228 samples, 2.78%)</title><rect x="1068.5" y="4949" width="32.8" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text text-anchor="" x="1071.49" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Pa..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="340.7" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="343.71" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="981.8" y="3045" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="984.82" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="785.0" y="4053" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.00" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="885.8" y="3669" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="888.79" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.DefaultHttpHeaders.set (2 samples, 0.02%)</title><rect x="476.9" y="4645" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="479.90" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="1014.6" y="2261" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1017.64" y="2271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.DefaultHeaders.addObject (2 samples, 0.02%)</title><rect x="476.6" y="4629" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="479.62" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (4 samples, 0.05%)</title><rect x="752.2" y="2837" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.18" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.ARef.notifyWatches (2 samples, 0.02%)</title><rect x="209.5" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="212.55" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (2 samples, 0.02%)</title><rect x="174.4" y="4085" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="177.42" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="843.3" y="3557" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="846.31" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (40 samples, 0.49%)</title><rect x="803.3" y="4133" width="5.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="806.29" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.netty/bufs-&gt;array (17 samples, 0.21%)</title><rect x="506.4" y="4533" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="509.42" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_jit_write_protect_np (6 samples, 0.07%)</title><rect x="303.6" y="4389" width="0.8" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text text-anchor="" x="306.56" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.DefaultChannelPipeline$HeadContext.read (3 samples, 0.04%)</title><rect x="513.0" y="4661" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="516.04" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="843.6" y="3429" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.60" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (13 samples, 0.16%)</title><rect x="878.4" y="3781" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="881.44" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (5 samples, 0.06%)</title><rect x="889.0" y="3973" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="891.95" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Double.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1023.3" y="3893" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1026.28" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.get (2 samples, 0.02%)</title><rect x="374.3" y="4837" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="377.25" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (10 samples, 0.12%)</title><rect x="1007.4" y="2677" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1010.44" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.nio.NioEventLoop.wakeup (31 samples, 0.38%)</title><rect x="363.0" y="4597" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="366.02" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (6 samples, 0.07%)</title><rect x="780.5" y="4005" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="783.54" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="885.8" y="3653" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="888.79" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="963.8" y="3125" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="966.82" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="902.1" y="3765" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="905.05" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.assoc (3 samples, 0.04%)</title><rect x="375.5" y="4693" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="378.55" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (2 samples, 0.02%)</title><rect x="752.5" y="2709" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.47" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (10 samples, 0.12%)</title><rect x="887.2" y="3781" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="890.23" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (4 samples, 0.05%)</title><rect x="339.0" y="4373" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="341.98" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parker::unpark() (12 samples, 0.15%)</title><rect x="697.2" y="4709" width="1.7" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text text-anchor="" x="700.18" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (11 samples, 0.13%)</title><rect x="922.9" y="3877" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.get (2 samples, 0.02%)</title><rect x="333.2" y="4581" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="336.22" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.net.URL.&lt;init&gt; (6 samples, 0.07%)</title><rect x="715.9" y="4533" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="718.90" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOfObject (2 samples, 0.02%)</title><rect x="278.8" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="281.80" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="995.9" y="3157" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="998.92" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (37 samples, 0.45%)</title><rect x="828.2" y="4069" width="5.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="831.20" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (5 samples, 0.06%)</title><rect x="320.5" y="4453" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="323.55" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="930.4" y="3381" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="933.42" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (4 samples, 0.05%)</title><rect x="780.5" y="3989" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="783.54" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client-middleware/handle-response-debug (9 samples, 0.11%)</title><rect x="374.0" y="4853" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="376.96" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (16 samples, 0.20%)</title><rect x="986.6" y="3381" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="989.57" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="915.9" y="3509" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="918.88" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="975.0" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.05" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (8 samples, 0.10%)</title><rect x="758.7" y="3509" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="937.0" y="3445" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="940.04" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="988.9" y="3365" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ClassLoaderData::ChunkedHandleList::oops_do(OopClosure*) (4 samples, 0.05%)</title><rect x="1064.2" y="4917" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text text-anchor="" x="1067.17" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (7 samples, 0.09%)</title><rect x="843.2" y="3845" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="846.17" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.invoke (3 samples, 0.04%)</title><rect x="279.1" y="4533" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="282.08" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="890.7" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="893.68" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (5 samples, 0.06%)</title><rect x="172.7" y="3861" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (10 samples, 0.12%)</title><rect x="877.0" y="3637" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="880.00" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="858.9" y="3749" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="861.86" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (12 samples, 0.15%)</title><rect x="914.9" y="3685" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="917.87" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PooledByteBuf.nioBuffer (2 samples, 0.02%)</title><rect x="507.3" y="4325" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="510.28" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="841.4" y="3701" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="844.44" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (13 samples, 0.16%)</title><rect x="829.9" y="3765" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="832.92" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.ChunkedCons.next (2 samples, 0.02%)</title><rect x="332.9" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="335.93" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="900.2" y="3509" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="903.18" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (3 samples, 0.04%)</title><rect x="767.3" y="3733" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.30" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (5 samples, 0.06%)</title><rect x="754.3" y="3237" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (33 samples, 0.40%)</title><rect x="868.8" y="4277" width="4.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="871.80" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.AsciiString.hashCode (2 samples, 0.02%)</title><rect x="377.4" y="4629" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="380.42" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="749.3" y="645" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="986.7" y="3157" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="989.71" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (77 samples, 0.94%)</title><rect x="172.7" y="4533" width="11.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (7 samples, 0.09%)</title><rect x="985.3" y="3349" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="988.27" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="775.1" y="3813" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.07" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="1020.7" y="3093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1023.69" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (11 samples, 0.13%)</title><rect x="944.7" y="3429" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="947.67" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpResponseEncoder.encodeInitialLine (5 samples, 0.06%)</title><rect x="695.3" y="4693" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="698.31" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (1,618 samples, 19.74%)</title><rect x="800.1" y="4613" width="233.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="803.12" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.client/rand-json-object</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (79 samples, 0.96%)</title><rect x="857.3" y="4069" width="11.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="860.28" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="776.8" y="3893" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="779.80" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="971.3" y="2997" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="974.31" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (12 samples, 0.15%)</title><rect x="914.9" y="3733" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="917.87" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Branch.match (6 samples, 0.07%)</title><rect x="741.1" y="4453" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="744.09" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (61 samples, 0.74%)</title><rect x="880.9" y="3989" width="8.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="883.89" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (149 samples, 1.82%)</title><rect x="748.7" y="4133" width="21.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.72" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="904.9" y="3573" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="907.93" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="926.1" y="3589" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="929.10" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="776.8" y="3813" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="779.80" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="1012.8" y="2261" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1015.77" y="2271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (32 samples, 0.39%)</title><rect x="980.7" y="3477" width="4.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="983.66" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.graph/async-send (2 samples, 0.02%)</title><rect x="479.4" y="4229" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="482.35" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="869.9" y="3765" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.95" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1017.4" y="1637" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="892.6" y="3813" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="895.55" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="765.7" y="3685" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="768.71" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http/req (168 samples, 2.05%)</title><rect x="713.6" y="4613" width="24.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="716.59" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >a..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="912.3" y="3445" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="915.28" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.onRealized (2 samples, 0.02%)</title><rect x="718.6" y="4389" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="721.63" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="842.0" y="3877" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="845.02" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="846.3" y="3765" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="849.34" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="968.1" y="3493" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="971.14" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1001.3" y="2677" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.25" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="990.7" y="2885" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="993.74" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1008.9" y="2229" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.misc.Unsafe.unpark (6 samples, 0.07%)</title><rect x="382.5" y="4645" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="385.46" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (89 samples, 1.09%)</title><rect x="894.7" y="4165" width="12.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="897.71" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (3 samples, 0.04%)</title><rect x="758.1" y="3301" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.08" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1015.6" y="1941" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.65" y="1951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="832.2" y="3621" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="835.23" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="765.7" y="3653" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="768.71" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="1003.0" y="2677" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1005.98" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="879.5" y="3525" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="882.45" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.AFn.applyToHelper (4 samples, 0.05%)</title><rect x="496.8" y="4549" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="499.77" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.server/handle-request/fn--16599/f--11256--auto----16600 (2,045 samples, 24.95%)</title><rect x="73.6" y="4949" width="294.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="76.64" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >aleph.http.server/handle-request/fn--16..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hasheq (2 samples, 0.02%)</title><rect x="209.1" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="212.11" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="987.1" y="3125" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.14" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="971.3" y="3141" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="974.31" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="898.5" y="3893" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="901.46" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (80 samples, 0.98%)</title><rect x="834.1" y="4165" width="11.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="837.10" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="923.2" y="3557" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="926.22" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (15 samples, 0.18%)</title><rect x="958.9" y="3685" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="961.92" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (9 samples, 0.11%)</title><rect x="932.6" y="3637" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="935.58" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="1005.4" y="2533" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1008.43" y="2543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (11 samples, 0.13%)</title><rect x="1007.3" y="2741" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1010.30" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="823.6" y="3909" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="826.59" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName (3 samples, 0.04%)</title><rect x="94.5" y="4405" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="97.51" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="935.5" y="3333" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="938.46" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (8 samples, 0.10%)</title><rect x="353.8" y="4469" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="356.81" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (4 samples, 0.05%)</title><rect x="749.3" y="1541" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>nrepl.middleware.interruptible-eval/evaluate (2,321 samples, 28.32%)</title><rect x="700.2" y="4933" width="334.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="703.20" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >nrepl.middleware.interruptible-eval/evaluate</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="840.3" y="3717" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="843.29" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/step (1,084 samples, 13.23%)</title><rect x="204.7" y="4629" width="156.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="207.65" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >instaparse.gll/step</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/node-get (2 samples, 0.02%)</title><rect x="210.6" y="4549" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="213.55" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="762.8" y="3349" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.83" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="1011.5" y="2229" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (3 samples, 0.04%)</title><rect x="750.7" y="2405" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="753.74" y="2415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="1006.9" y="2805" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.87" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpObjectDecoder$LineParser.parse (2 samples, 0.02%)</title><rect x="474.9" y="4661" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.89" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (4 samples, 0.05%)</title><rect x="281.7" y="4517" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="284.68" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>GrowableArray&lt;PointsToNode*&gt;::append_if_missing(PointsToNode* const&amp;) (2 samples, 0.02%)</title><rect x="1123.2" y="4789" width="0.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text text-anchor="" x="1126.20" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="973.0" y="3301" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="976.03" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="872.3" y="3605" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.25" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>IndexSetIterator::next() (2 samples, 0.02%)</title><rect x="1121.2" y="4837" width="0.3" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text text-anchor="" x="1124.18" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="775.2" y="3797" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.21" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (11 samples, 0.13%)</title><rect x="997.7" y="2933" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.65" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="953.7" y="2869" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1013.2" y="1813" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="1823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equivPred (3 samples, 0.04%)</title><rect x="316.5" y="4437" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="319.52" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="959.1" y="3493" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="962.07" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="966.6" y="3237" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="969.55" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="933.0" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="936.01" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.Reader.read (7 samples, 0.09%)</title><rect x="745.6" y="4533" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="748.56" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (14 samples, 0.17%)</title><rect x="302.6" y="4501" width="2.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="305.55" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (9 samples, 0.11%)</title><rect x="987.6" y="3189" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.57" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="865.9" y="3445" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (5 samples, 0.06%)</title><rect x="945.1" y="3221" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="948.10" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="975.0" y="3317" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.05" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="842.4" y="3845" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.45" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (61 samples, 0.74%)</title><rect x="880.9" y="4037" width="8.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="883.89" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.getMethods (2 samples, 0.02%)</title><rect x="852.0" y="3813" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="854.95" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (3 samples, 0.04%)</title><rect x="775.1" y="3909" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.07" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (9 samples, 0.11%)</title><rect x="949.4" y="3813" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="968.4" y="3381" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="971.43" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="953.7" y="3045" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.DefaultChannelPipeline$HeadContext.channelReadComplete (10 samples, 0.12%)</title><rect x="512.3" y="4821" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="515.32" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="980.2" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="983.23" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (5 samples, 0.06%)</title><rect x="1013.8" y="2149" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.78" y="2159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PoolThreadCache.allocateSmall (3 samples, 0.04%)</title><rect x="514.2" y="4741" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="517.19" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="938.5" y="3573" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="763.6" y="3445" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.55" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (6 samples, 0.07%)</title><rect x="871.1" y="3829" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.10" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (10 samples, 0.12%)</title><rect x="749.2" y="2293" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (7 samples, 0.09%)</title><rect x="760.2" y="3525" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="1012.8" y="2213" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.77" y="2223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/assoc--5433 (2 samples, 0.02%)</title><rect x="65.6" y="4997" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="68.57" y="5007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (3 samples, 0.04%)</title><rect x="292.3" y="4309" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="295.33" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.format (2 samples, 0.02%)</title><rect x="969.9" y="3381" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="968.1" y="3301" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="971.14" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.CountDownLatch.countDown (16 samples, 0.20%)</title><rect x="368.9" y="4885" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="371.92" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="894.4" y="4213" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="897.42" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/assoc--5433 (6 samples, 0.07%)</title><rect x="499.4" y="4485" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="502.36" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.nio.NioEventLoop.processSelectedKeys (385 samples, 4.70%)</title><rect x="473.2" y="4933" width="55.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="476.16" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io.ne..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="351.1" y="4437" width="0.3" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text text-anchor="" x="354.07" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="933.6" y="3381" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="936.58" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (5 samples, 0.06%)</title><rect x="886.4" y="3573" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="889.36" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (54 samples, 0.66%)</title><rect x="941.6" y="3829" width="7.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="944.65" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (103 samples, 1.26%)</title><rect x="874.8" y="4245" width="14.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="877.84" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="749.3" y="181" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (13 samples, 0.16%)</title><rect x="1018.0" y="1813" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.95" y="1823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (9 samples, 0.11%)</title><rect x="949.4" y="3765" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="959.2" y="3365" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="962.21" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="904.9" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.93" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (92 samples, 1.12%)</title><rect x="1007.3" y="2933" width="13.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.30" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="823.6" y="3845" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="826.59" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="757.7" y="3221" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.65" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="771.6" y="3733" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="774.62" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="880.5" y="3797" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (15 samples, 0.18%)</title><rect x="932.6" y="3685" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="935.58" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (10 samples, 0.12%)</title><rect x="172.7" y="3973" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="872.7" y="3877" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (572 samples, 6.98%)</title><rect x="940.9" y="3989" width="82.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="943.93" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="753.6" y="3077" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="756.62" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (18 samples, 0.22%)</title><rect x="928.7" y="3701" width="2.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="931.69" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.KeywordLookupSite$1.get (3 samples, 0.04%)</title><rect x="377.3" y="4821" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="380.27" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>LIR_Assembler::emit_code(BlockList*) (4 samples, 0.05%)</title><rect x="1175.9" y="4837" width="0.6" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text text-anchor="" x="1178.89" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="858.6" y="3781" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="861.57" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.equal (2 samples, 0.02%)</title><rect x="376.4" y="4693" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="379.41" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="921.6" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="924.63" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (3 samples, 0.04%)</title><rect x="1117.7" y="4837" width="0.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text text-anchor="" x="1120.73" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="950.1" y="3461" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="953.14" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="978.4" y="2917" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="981.36" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="985.4" y="3253" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="988.41" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="987.7" y="2917" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.grow (2 samples, 0.02%)</title><rect x="858.1" y="3941" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="861.14" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (7 samples, 0.09%)</title><rect x="912.3" y="3605" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="915.28" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1004.9" y="2501" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.85" y="2511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="920.1" y="3429" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.05" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (7 samples, 0.09%)</title><rect x="922.9" y="3701" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (5 samples, 0.06%)</title><rect x="897.6" y="3685" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="900.59" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (4 samples, 0.05%)</title><rect x="770.5" y="3685" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol (3 samples, 0.04%)</title><rect x="92.6" y="4357" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="95.64" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="939.8" y="3461" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (194 samples, 2.37%)</title><rect x="86.0" y="4581" width="27.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="89.02" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="833.8" y="3717" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="836.81" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="904.9" y="3605" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.93" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="909.4" y="3669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="912.40" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="966.3" y="3029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="969.27" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RestFn.invoke (1,108 samples, 13.52%)</title><rect x="202.1" y="4709" width="159.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="205.06" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.lang.RestFn...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.DelegatingMethodAccessorImpl (2 samples, 0.02%)</title><rect x="878.0" y="3461" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="881.01" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannel$AbstractUnsafe.recvBufAllocHandle (2 samples, 0.02%)</title><rect x="473.7" y="4869" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="476.74" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/with-bindings* (2,321 samples, 28.32%)</title><rect x="700.2" y="4805" width="334.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="703.20" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.core/with-bindings*</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="863.0" y="3669" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="866.04" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (12 samples, 0.15%)</title><rect x="981.2" y="3317" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="984.24" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="904.2" y="3269" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.21" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="968.4" y="3269" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.43" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.append (2 samples, 0.02%)</title><rect x="738.9" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="741.93" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="935.2" y="3429" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="938.17" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="985.4" y="3013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="988.41" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (5 samples, 0.06%)</title><rect x="816.5" y="3813" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="819.53" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="966.6" y="3221" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="969.55" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/swap! (2 samples, 0.02%)</title><rect x="210.8" y="4533" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="213.84" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="909.4" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="912.40" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.util.TextBuffer.contentsAsString (3 samples, 0.04%)</title><rect x="101.1" y="4485" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="104.13" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client/http-connection/fn--16976/fn--16977/f--15883--auto----16981 (38 samples, 0.46%)</title><rect x="672.0" y="4869" width="5.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="674.99" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="938.5" y="3493" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*) (15 samples, 0.18%)</title><rect x="1175.5" y="4901" width="2.1" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text text-anchor="" x="1178.46" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (60 samples, 0.73%)</title><rect x="914.3" y="3861" width="8.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="917.29" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="975.8" y="3077" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.77" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (54 samples, 0.66%)</title><rect x="941.6" y="3813" width="7.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="944.65" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (15 samples, 0.18%)</title><rect x="834.8" y="3893" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="837.82" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="993.8" y="3029" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.77" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (26 samples, 0.32%)</title><rect x="889.8" y="4149" width="3.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="892.82" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (43 samples, 0.52%)</title><rect x="1013.8" y="2453" width="6.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.78" y="2463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.ARef.notifyWatches (2 samples, 0.02%)</title><rect x="205.8" y="4581" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="208.80" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/success! (16 samples, 0.20%)</title><rect x="696.7" y="4869" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="699.75" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="920.8" y="3189" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.77" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (12 samples, 0.15%)</title><rect x="852.4" y="3813" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="855.38" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (30 samples, 0.37%)</title><rect x="749.2" y="3029" width="4.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (3 samples, 0.04%)</title><rect x="211.1" y="4517" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="214.13" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (34 samples, 0.41%)</title><rect x="969.9" y="3653" width="4.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="760.4" y="2981" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.39" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (13 samples, 0.16%)</title><rect x="302.7" y="4469" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="305.70" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="765.0" y="3605" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (15 samples, 0.18%)</title><rect x="941.8" y="3621" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="944.79" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.invoke (14 samples, 0.17%)</title><rect x="296.1" y="4533" width="2.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="299.07" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (30 samples, 0.37%)</title><rect x="821.6" y="4389" width="4.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="824.57" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="979.8" y="3125" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (23 samples, 0.28%)</title><rect x="840.9" y="3973" width="3.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="843.87" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="809.2" y="3989" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="812.19" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (14 samples, 0.17%)</title><rect x="172.7" y="4165" width="2.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred/fn--11768 (6 samples, 0.07%)</title><rect x="382.5" y="4741" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="385.46" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.format (9 samples, 0.11%)</title><rect x="798.7" y="4517" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="801.68" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="980.2" y="3317" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="983.23" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (5 samples, 0.06%)</title><rect x="1005.1" y="2629" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1008.14" y="2639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (2 samples, 0.02%)</title><rect x="68.9" y="4933" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="71.88" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="842.0" y="3829" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.02" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (274 samples, 3.34%)</title><rect x="748.4" y="4453" width="39.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.44" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (8 samples, 0.10%)</title><rect x="749.2" y="2133" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (4 samples, 0.05%)</title><rect x="348.3" y="4373" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="351.34" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>thread_start (915 samples, 11.16%)</title><rect x="1058.3" y="5029" width="131.7" height="15.0" fill="rgb(251,124,124)" rx="2" ry="2" />
<text text-anchor="" x="1061.27" y="5039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >thread_start</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.formatTo (2 samples, 0.02%)</title><rect x="900.8" y="3253" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="903.76" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyResponse.assoc (5 samples, 0.06%)</title><rect x="375.4" y="4821" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="378.40" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="304.7" y="4469" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="307.71" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (4 samples, 0.05%)</title><rect x="1023.9" y="3957" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1026.86" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/node-get (5 samples, 0.06%)</title><rect x="315.8" y="4549" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="318.80" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.flush (24 samples, 0.29%)</title><rect x="673.0" y="4661" width="3.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (18 samples, 0.22%)</title><rect x="928.7" y="3717" width="2.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="931.69" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.BufferedReader.read1 (5 samples, 0.06%)</title><rect x="745.8" y="4501" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="748.84" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (10 samples, 0.12%)</title><rect x="877.0" y="3573" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="880.00" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="904.2" y="3429" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.21" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="780.5" y="3909" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="783.54" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="967.6" y="3525" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyResponse.get_STAR_ (2 samples, 0.02%)</title><rect x="377.4" y="4773" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="380.42" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="824.3" y="3909" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="827.31" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="994.5" y="2709" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="997.49" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="968.1" y="3525" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.14" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (7 samples, 0.09%)</title><rect x="765.6" y="3733" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="768.57" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (7 samples, 0.09%)</title><rect x="881.9" y="3621" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="884.90" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (9 samples, 0.11%)</title><rect x="963.4" y="3349" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="966.39" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="843.6" y="3477" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="846.60" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeFlush0 (31 samples, 0.38%)</title><rect x="673.0" y="4709" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="846.3" y="3861" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="849.34" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (38 samples, 0.46%)</title><rect x="953.5" y="3589" width="5.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.45" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (26 samples, 0.32%)</title><rect x="889.8" y="4229" width="3.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="892.82" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseCCP::do_transform() (2 samples, 0.02%)</title><rect x="1165.7" y="4869" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text text-anchor="" x="1168.67" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="968.7" y="3493" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.71" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.netty/eval15865/append-to-buf!--15866 (5 samples, 0.06%)</title><rect x="679.3" y="4805" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="682.33" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1019.4" y="965" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.39" y="975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/assoc--5433 (2 samples, 0.02%)</title><rect x="847.6" y="4069" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="850.63" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.getMethods (2 samples, 0.02%)</title><rect x="941.2" y="3925" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="944.22" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.flush (24 samples, 0.29%)</title><rect x="673.0" y="4565" width="3.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="950.1" y="3621" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="953.14" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (5 samples, 0.06%)</title><rect x="752.8" y="2949" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.76" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.assoc (25 samples, 0.31%)</title><rect x="284.0" y="4485" width="3.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="286.98" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/hash (57 samples, 0.70%)</title><rect x="211.8" y="4517" width="8.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="214.85" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.CombinedChannelDuplexHandler.write (6 samples, 0.07%)</title><rect x="692.4" y="4725" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="695.43" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.string/replace-by (23 samples, 0.28%)</title><rect x="728.6" y="4373" width="3.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="731.57" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>fwd_copy_again (6 samples, 0.07%)</title><rect x="1067.6" y="4917" width="0.9" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text text-anchor="" x="1070.62" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="812.4" y="3861" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="815.36" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (7 samples, 0.09%)</title><rect x="871.0" y="4053" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="873.96" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.AbstractList.&lt;init&gt; (15 samples, 0.18%)</title><rect x="153.4" y="4613" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="156.40" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="959.9" y="3365" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.93" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="759.2" y="3301" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.23" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (9 samples, 0.11%)</title><rect x="776.7" y="4037" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="779.65" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="856.4" y="3941" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="859.42" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="984.0" y="2933" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0 (84 samples, 1.02%)</title><rect x="680.2" y="4597" width="12.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.19" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (26 samples, 0.32%)</title><rect x="889.8" y="4165" width="3.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.82" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.MultiFn.getFn (9 samples, 0.11%)</title><rect x="746.7" y="4549" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="749.71" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.GeneratedMethodAccessor49 (2 samples, 0.02%)</title><rect x="969.6" y="3653" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.58" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="1008.9" y="2373" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="781.1" y="3909" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="784.12" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="755.5" y="3237" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.49" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (5 samples, 0.06%)</title><rect x="1010.0" y="2645" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.03" y="2655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="908.0" y="3797" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="910.96" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (17 samples, 0.21%)</title><rect x="996.8" y="3029" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.79" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (8 samples, 0.10%)</title><rect x="749.2" y="1893" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="1903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="783.3" y="4069" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.28" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (20 samples, 0.24%)</title><rect x="779.1" y="4181" width="2.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (4 samples, 0.05%)</title><rect x="757.9" y="3397" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.94" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="983.3" y="3157" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="986.26" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (30 samples, 0.37%)</title><rect x="774.2" y="4229" width="4.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.21" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (2 samples, 0.02%)</title><rect x="1033.5" y="4597" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1036.50" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Curly.match0 (6 samples, 0.07%)</title><rect x="741.1" y="4405" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="744.09" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (3 samples, 0.04%)</title><rect x="172.7" y="3461" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="923.4" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="926.36" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="842.0" y="3909" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.02" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$CharProperty.match (2 samples, 0.02%)</title><rect x="795.5" y="4277" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="798.51" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="749.3" y="773" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="946.3" y="3221" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (9 samples, 0.11%)</title><rect x="852.8" y="3605" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="855.82" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="872.3" y="3685" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="875.25" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead (263 samples, 3.21%)</title><rect x="474.5" y="4821" width="37.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.46" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="865.2" y="3637" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.format (2 samples, 0.02%)</title><rect x="963.8" y="2869" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="966.82" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (63 samples, 0.77%)</title><rect x="172.7" y="4501" width="9.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.GeneratedMethodAccessor49 (2 samples, 0.02%)</title><rect x="878.0" y="3445" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="881.01" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="924.2" y="3605" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="927.23" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="988.9" y="3253" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="809.2" y="3909" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="812.19" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="902.8" y="3765" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="905.77" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.ChannelOutboundBuffer.removeBytes (6 samples, 0.07%)</title><rect x="680.2" y="4549" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.19" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Thread.run (6,828 samples, 83.31%)</title><rect x="73.5" y="5029" width="983.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="76.49" y="5039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.Thread.run</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (13 samples, 0.16%)</title><rect x="760.2" y="3669" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="989.2" y="3253" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.16" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (8 samples, 0.10%)</title><rect x="862.8" y="3749" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="865.75" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (161 samples, 1.96%)</title><rect x="850.4" y="4373" width="23.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="853.37" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >e..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred/fn--11768 (4 samples, 0.05%)</title><rect x="371.2" y="4853" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="374.23" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (8 samples, 0.10%)</title><rect x="749.2" y="1909" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="1919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/apply (18 samples, 0.22%)</title><rect x="495.0" y="4581" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="498.04" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="904.9" y="3557" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="907.93" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1174.3" y="4805" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text text-anchor="" x="1177.31" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="972.5" y="3125" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="975.46" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.net.URL.&lt;init&gt; (6 samples, 0.07%)</title><rect x="715.9" y="4517" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="718.90" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (80 samples, 0.98%)</title><rect x="911.4" y="3893" width="11.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="914.41" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/-parse (2 samples, 0.02%)</title><rect x="47.6" y="5013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="50.58" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="753.9" y="3013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="756.91" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (2 samples, 0.02%)</title><rect x="185.6" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="188.65" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="753.0" y="2629" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="756.04" y="2639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hasheq (2 samples, 0.02%)</title><rect x="343.6" y="4293" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="346.58" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="839.3" y="3509" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="842.28" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="902.8" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="905.77" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="817.4" y="3637" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="820.40" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseIdealLoop::PhaseIdealLoop(PhaseIterGVN&amp;, bool, bool) (32 samples, 0.39%)</title><rect x="1166.0" y="4869" width="4.6" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text text-anchor="" x="1168.96" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (25 samples, 0.31%)</title><rect x="779.1" y="4229" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="896.9" y="3685" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="899.87" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (7 samples, 0.09%)</title><rect x="998.2" y="2917" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1001.23" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (2 samples, 0.02%)</title><rect x="176.6" y="4293" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="179.58" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="974.8" y="3429" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="978.4" y="2885" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.36" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (4 samples, 0.05%)</title><rect x="172.7" y="3781" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="840.0" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="843.00" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="956.5" y="3349" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="959.48" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.create (19 samples, 0.23%)</title><rect x="317.1" y="4405" width="2.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="320.09" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/-full-parse (492 samples, 6.00%)</title><rect x="206.5" y="4597" width="70.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="209.52" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >instapar..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (47 samples, 0.57%)</title><rect x="838.0" y="4117" width="6.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="840.99" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.ATransientMap.assoc (2 samples, 0.02%)</title><rect x="125.3" y="4629" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="128.32" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="975.6" y="3157" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.62" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (6 samples, 0.07%)</title><rect x="900.2" y="3397" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="903.18" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="939.8" y="3365" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (11 samples, 0.13%)</title><rect x="884.6" y="3877" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="887.63" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (35 samples, 0.43%)</title><rect x="749.2" y="3221" width="5.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>StealTask::do_it(GCTaskManager*, unsigned int) (264 samples, 3.22%)</title><rect x="1066.9" y="4965" width="38.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text text-anchor="" x="1069.90" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Ste..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.GeneratedMethodAccessor49 (2 samples, 0.02%)</title><rect x="963.8" y="2885" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="966.82" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PerfLongVariant::sample() (2 samples, 0.02%)</title><rect x="1184.0" y="4949" width="0.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text text-anchor="" x="1186.95" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="495.3" y="4469" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="498.33" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (71 samples, 0.87%)</title><rect x="1010.0" y="2757" width="10.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.03" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand-int (2 samples, 0.02%)</title><rect x="896.0" y="3701" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="899.01" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="848.5" y="3909" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="851.50" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.ArraySeq.first (2 samples, 0.02%)</title><rect x="496.8" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="499.77" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="1012.9" y="2181" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.91" y="2191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="1007.6" y="2469" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.59" y="2479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PoolArena.allocate (3 samples, 0.04%)</title><rect x="694.6" y="4629" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="697.59" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="865.2" y="3669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="904.1" y="3493" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.07" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-message (3 samples, 0.04%)</title><rect x="48.6" y="5013" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="51.58" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JavaThread::oops_do(OopClosure*, CLDClosure*, CodeBlobClosure*) (11 samples, 0.13%)</title><rect x="1104.9" y="4949" width="1.6" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text text-anchor="" x="1107.91" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="916.6" y="3637" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="919.60" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.02%)</title><rect x="10.3" y="4997" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text text-anchor="" x="13.29" y="5007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigInteger.valueOf (3 samples, 0.04%)</title><rect x="201.6" y="4597" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="204.63" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="954.6" y="3189" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="957.60" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="814.2" y="3637" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="817.23" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="859.3" y="3653" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="862.29" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.fireChannelReadComplete (2 samples, 0.02%)</title><rect x="512.5" y="4709" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="515.46" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (31 samples, 0.38%)</title><rect x="884.5" y="3941" width="4.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="887.49" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::WXWriteFromExecSetter::WXWriteFromExecSetter() (2 samples, 0.02%)</title><rect x="491.6" y="3733" width="0.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text text-anchor="" x="494.59" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="776.2" y="3957" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="779.22" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (54 samples, 0.66%)</title><rect x="941.6" y="3877" width="7.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="944.65" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::WXWriteFromExecSetter::WXWriteFromExecSetter() (4 samples, 0.05%)</title><rect x="469.8" y="4869" width="0.6" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text text-anchor="" x="472.85" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="861.6" y="3989" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="864.60" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>CodeBuffer::relocate_code_to(CodeBuffer*) const (3 samples, 0.04%)</title><rect x="1177.0" y="4773" width="0.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text text-anchor="" x="1180.04" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (41 samples, 0.50%)</title><rect x="851.4" y="4085" width="5.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="854.38" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (4 samples, 0.05%)</title><rect x="766.0" y="3669" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="769.00" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/conj--5407 (9 samples, 0.11%)</title><rect x="313.2" y="4517" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="316.21" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="815.2" y="3861" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="818.24" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.deref (4 samples, 0.05%)</title><rect x="280.2" y="4533" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="283.24" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (4 samples, 0.05%)</title><rect x="76.2" y="4725" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="79.23" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="945.1" y="3141" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="948.10" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="966.6" y="3205" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="969.55" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="869.4" y="3701" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.37" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="1008.9" y="2581" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="771.6" y="3717" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="774.62" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (8 samples, 0.10%)</title><rect x="1011.5" y="2293" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (12 samples, 0.15%)</title><rect x="823.2" y="4197" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="826.16" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="997.8" y="2629" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>byte_streams$convert.invoke (14 samples, 0.17%)</title><rect x="477.9" y="4421" width="2.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="480.91" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="843.6" y="3573" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="846.60" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="981.8" y="2917" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="984.82" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="821.1" y="4261" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="824.14" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (126 samples, 1.54%)</title><rect x="827.6" y="4277" width="18.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="830.62" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (134 samples, 1.63%)</title><rect x="802.1" y="4469" width="19.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="805.14" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (3 samples, 0.04%)</title><rect x="755.9" y="3253" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.92" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.cons (5 samples, 0.06%)</title><rect x="375.4" y="4725" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="378.40" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="1010.2" y="2517" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1013.18" y="2527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>byte_streams$convert.invokeStatic (14 samples, 0.17%)</title><rect x="477.9" y="4405" width="2.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="480.91" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (8 samples, 0.10%)</title><rect x="1006.1" y="2917" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpClientCodec$Encoder.encode (5 samples, 0.06%)</title><rect x="676.7" y="4565" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="679.74" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="811.8" y="3717" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="814.78" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (3 samples, 0.04%)</title><rect x="958.5" y="3525" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="961.49" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.assoc (2 samples, 0.02%)</title><rect x="355.4" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="358.39" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (8 samples, 0.10%)</title><rect x="1011.5" y="2453" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (4 samples, 0.05%)</title><rect x="1022.6" y="3909" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1025.56" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (10 samples, 0.12%)</title><rect x="890.0" y="4053" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="994.9" y="2661" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (15 samples, 0.18%)</title><rect x="810.9" y="4037" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="813.92" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="1004.3" y="2501" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.28" y="2511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="767.9" y="3685" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.87" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (220 samples, 2.68%)</title><rect x="989.7" y="3429" width="31.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.73" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ex..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="885.1" y="3381" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="888.07" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="869.2" y="3973" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.23" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (147 samples, 1.79%)</title><rect x="86.3" y="4549" width="21.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="89.31" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (5 samples, 0.06%)</title><rect x="992.6" y="3365" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.61" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="863.9" y="3877" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="866.90" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (12 samples, 0.15%)</title><rect x="942.1" y="3509" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="945.08" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (67 samples, 0.82%)</title><rect x="749.0" y="3621" width="9.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="919.6" y="3493" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (6 samples, 0.07%)</title><rect x="968.4" y="3541" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="971.43" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="983.7" y="3077" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="986.69" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (115 samples, 1.40%)</title><rect x="1004.1" y="3077" width="16.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.13" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="968.7" y="3205" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.71" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="954.6" y="3221" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="957.60" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="947.7" y="3205" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$7.isSatisfiedBy (7 samples, 0.09%)</title><rect x="730.9" y="4053" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="733.87" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.DefaultHeaders.valueIterator (2 samples, 0.02%)</title><rect x="377.4" y="4693" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="380.42" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (40 samples, 0.49%)</title><rect x="803.3" y="4117" width="5.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="806.29" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="991.5" y="2821" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.46" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (10 samples, 0.12%)</title><rect x="766.9" y="3925" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="769.86" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush (24 samples, 0.29%)</title><rect x="673.0" y="4581" width="3.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (9 samples, 0.11%)</title><rect x="831.9" y="3877" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="834.94" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeFlush0 (24 samples, 0.29%)</title><rect x="673.0" y="4533" width="3.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (5 samples, 0.06%)</title><rect x="1006.1" y="2885" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="900.2" y="3445" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="903.18" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RestFn.invoke (12 samples, 0.15%)</title><rect x="733.5" y="4421" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="736.46" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="930.4" y="3285" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="933.42" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="978.4" y="2949" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.36" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (6 samples, 0.07%)</title><rect x="1012.8" y="2245" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.77" y="2255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (10 samples, 0.12%)</title><rect x="847.6" y="4133" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="850.63" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (132 samples, 1.61%)</title><rect x="802.4" y="4293" width="19.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="805.43" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="883.9" y="3733" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="886.91" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (17 samples, 0.21%)</title><rect x="907.5" y="4149" width="2.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="910.53" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="994.2" y="2981" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.20" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="936.0" y="3445" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="939.03" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (9 samples, 0.11%)</title><rect x="1007.6" y="2661" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1010.59" y="2671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="869.9" y="3685" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.95" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.grow (2 samples, 0.02%)</title><rect x="839.3" y="3445" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="842.28" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="869.9" y="3829" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.95" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (40 samples, 0.49%)</title><rect x="803.3" y="4149" width="5.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="806.29" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="890.7" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="893.68" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="892.8" y="3781" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="895.84" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RestFn.invoke (2,321 samples, 28.32%)</title><rect x="700.2" y="4821" width="334.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="703.20" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.lang.RestFn.invoke</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (5 samples, 0.06%)</title><rect x="749.3" y="1765" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="1007.9" y="2517" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.87" y="2527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="957.3" y="3205" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="960.34" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="970.7" y="3109" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="973.73" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="996.9" y="2933" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.93" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.ChannelOutboundHandlerAdapter.flush (24 samples, 0.29%)</title><rect x="673.0" y="4597" width="3.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.pcequiv (2 samples, 0.02%)</title><rect x="208.8" y="4373" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.83" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (284 samples, 3.47%)</title><rect x="980.5" y="3589" width="40.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="983.52" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >exa..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (7 samples, 0.09%)</title><rect x="1004.9" y="2709" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.85" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="1016.4" y="1925" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.37" y="1935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (3 samples, 0.04%)</title><rect x="279.1" y="4501" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="282.08" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (2 samples, 0.02%)</title><rect x="771.8" y="3637" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="774.76" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (16 samples, 0.20%)</title><rect x="899.8" y="3829" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="902.75" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="807.0" y="3813" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="810.03" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (32 samples, 0.39%)</title><rect x="980.7" y="3461" width="4.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="983.66" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (3 samples, 0.04%)</title><rect x="751.3" y="2565" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="754.32" y="2575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="920.1" y="3541" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.05" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="749.3" y="53" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (43 samples, 0.52%)</title><rect x="1013.8" y="2405" width="6.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.78" y="2415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOfRange (2 samples, 0.02%)</title><rect x="102.4" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="105.43" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="894.4" y="4197" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="897.42" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="920.1" y="3349" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.05" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol (2 samples, 0.02%)</title><rect x="116.7" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="119.68" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="995.6" y="2421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="756.8" y="3173" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Double.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1029.0" y="4373" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1032.04" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (10 samples, 0.12%)</title><rect x="981.2" y="3077" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="984.24" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatterBuilder$NumberPrinterParser.format (2 samples, 0.02%)</title><rect x="895.4" y="3813" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="898.43" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util$4.equiv (3 samples, 0.04%)</title><rect x="277.9" y="4453" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="280.93" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="749.3" y="1125" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (27 samples, 0.33%)</title><rect x="770.2" y="4053" width="3.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.18" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="848.5" y="3765" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.50" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="822.7" y="4053" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="887.2" y="3685" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="890.23" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="973.3" y="3301" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="976.32" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.02%)</title><rect x="1172.6" y="4725" width="0.3" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text text-anchor="" x="1175.58" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimePrintContext.adjust (3 samples, 0.04%)</title><rect x="799.4" y="4469" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="802.40" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (34 samples, 0.41%)</title><rect x="944.2" y="3653" width="4.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="947.24" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="840.0" y="3381" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="843.00" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.invoke (3 samples, 0.04%)</title><rect x="277.9" y="4533" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="280.93" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="994.9" y="2709" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="966.1" y="3061" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="969.12" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.format (47 samples, 0.57%)</title><rect x="790.0" y="4581" width="6.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="793.04" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (7 samples, 0.09%)</title><rect x="1007.9" y="2581" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.87" y="2591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="919.6" y="3413" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (8 samples, 0.10%)</title><rect x="905.4" y="3621" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="908.37" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (102 samples, 1.24%)</title><rect x="875.0" y="4085" width="14.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="877.99" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$BranchConn.match (4 samples, 0.05%)</title><rect x="741.4" y="4373" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="744.38" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (13 samples, 0.16%)</title><rect x="842.3" y="3909" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.31" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="955.6" y="3381" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="958.61" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (4 samples, 0.05%)</title><rect x="1024.6" y="4021" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1027.58" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (8 samples, 0.10%)</title><rect x="865.6" y="3733" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="938.5" y="3621" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (9 samples, 0.11%)</title><rect x="949.4" y="3797" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="983.0" y="3093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="985.97" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (2 samples, 0.02%)</title><rect x="940.4" y="3621" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="943.35" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (3 samples, 0.04%)</title><rect x="879.9" y="3717" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="882.88" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.server/date-header-value (2 samples, 0.02%)</title><rect x="696.5" y="4853" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="699.46" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (44 samples, 0.54%)</title><rect x="838.0" y="4053" width="6.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="840.99" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="991.2" y="2981" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="994.17" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (88 samples, 1.07%)</title><rect x="894.9" y="4053" width="12.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="897.86" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.cons (5 samples, 0.06%)</title><rect x="499.5" y="4357" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="502.51" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="1009.3" y="2565" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.31" y="2575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.executor/thread-factory/reify--11138/f--11139 (4,353 samples, 53.11%)</title><rect x="73.5" y="4997" width="626.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="76.49" y="5007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >manifold.executor/thread-factory/reify--11138/f--11139</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (5 samples, 0.06%)</title><rect x="994.2" y="2997" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.20" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="999.2" y="3093" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1002.24" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>compojure.core/route-request (21 samples, 0.26%)</title><rect x="74.5" y="4805" width="3.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="77.50" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="977.6" y="3141" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="980.64" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="976.9" y="3141" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="979.92" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyResponse.assoc_STAR_ (4 samples, 0.05%)</title><rect x="481.5" y="4357" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="484.51" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="757.7" y="3349" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.65" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (11 samples, 0.13%)</title><rect x="892.0" y="3957" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.98" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$7.isSatisfiedBy (11 samples, 0.13%)</title><rect x="730.3" y="4149" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="733.30" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="1015.9" y="2005" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.94" y="2015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="887.2" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="890.23" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.gt (3 samples, 0.04%)</title><rect x="828.6" y="3941" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="831.63" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (7 samples, 0.09%)</title><rect x="841.3" y="3957" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="844.30" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (27 samples, 0.33%)</title><rect x="1015.9" y="2181" width="3.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.94" y="2191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="933.0" y="3301" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="936.01" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="945.5" y="3093" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="948.53" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="92.6" y="4341" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="95.64" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="1019.2" y="1237" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.25" y="1247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (9 samples, 0.11%)</title><rect x="890.0" y="3973" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="750.3" y="2085" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="753.31" y="2095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (7 samples, 0.09%)</title><rect x="957.1" y="3365" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="960.05" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1008.9" y="2261" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (8 samples, 0.10%)</title><rect x="1018.5" y="1557" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.53" y="1567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="782.3" y="4005" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="785.27" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (16 samples, 0.20%)</title><rect x="986.6" y="3429" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="989.57" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOfObject (3 samples, 0.04%)</title><rect x="284.3" y="4421" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="287.27" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (17 samples, 0.21%)</title><rect x="928.8" y="3621" width="2.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="931.83" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (30 samples, 0.37%)</title><rect x="876.1" y="3877" width="4.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="879.14" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (8 samples, 0.10%)</title><rect x="767.2" y="3845" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.15" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (7 samples, 0.09%)</title><rect x="922.9" y="3829" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="902.8" y="3653" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="905.77" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (921 samples, 11.24%)</title><rect x="893.6" y="4229" width="132.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="896.56" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.client/r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (3 samples, 0.04%)</title><rect x="172.7" y="3525" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (5 samples, 0.06%)</title><rect x="1010.0" y="2629" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1013.03" y="2639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Object.hashCode (10 samples, 0.12%)</title><rect x="318.2" y="4277" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="321.25" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="913.3" y="3557" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="916.28" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.server$ring_handler$reify__16656.channelRead (19 samples, 0.23%)</title><rect x="477.8" y="4533" width="2.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="480.77" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (40 samples, 0.49%)</title><rect x="803.3" y="4165" width="5.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="806.29" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RestFn.invoke (11 samples, 0.13%)</title><rect x="74.5" y="4773" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="77.50" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (1,248 samples, 15.23%)</title><rect x="849.4" y="4421" width="179.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="852.36" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.lang.LongRange...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="994.9" y="2645" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.java.io/fn--11446/G--11422--11453 (9 samples, 0.11%)</title><rect x="79.3" y="4629" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="82.25" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="983.0" y="3109" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="985.97" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (9 samples, 0.11%)</title><rect x="890.0" y="3957" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentVector.reduce (66 samples, 0.81%)</title><rect x="725.7" y="4469" width="9.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="728.69" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken (5 samples, 0.06%)</title><rect x="125.8" y="4661" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="128.75" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="973.3" y="3317" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="976.32" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="1004.3" y="2469" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.28" y="2479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (5 samples, 0.06%)</title><rect x="990.3" y="3093" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="993.31" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.nio.ByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="507.3" y="4261" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="510.28" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers$LongOps.combine (2 samples, 0.02%)</title><rect x="880.9" y="3925" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="883.89" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (3 samples, 0.04%)</title><rect x="937.9" y="3717" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="940.90" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="864.8" y="3621" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="867.77" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="854.8" y="3765" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="857.83" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Double.valueOf (2 samples, 0.02%)</title><rect x="1021.4" y="3509" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1024.41" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="1013.2" y="2101" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="2111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (5 samples, 0.06%)</title><rect x="955.6" y="3397" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="958.61" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="865.6" y="3429" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::enable_wx_from_write(WXMode) (2 samples, 0.02%)</title><rect x="381.6" y="4677" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text text-anchor="" x="384.59" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="905.8" y="3509" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="908.80" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_new_array_Java (3 samples, 0.04%)</title><rect x="10.3" y="5013" width="0.4" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text text-anchor="" x="13.29" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="846.0" y="4037" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="849.05" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="909.4" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="912.40" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long) (2 samples, 0.02%)</title><rect x="1067.3" y="4917" width="0.3" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text text-anchor="" x="1070.34" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (15 samples, 0.18%)</title><rect x="810.9" y="3989" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="813.92" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (4 samples, 0.05%)</title><rect x="749.3" y="1333" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (5 samples, 0.06%)</title><rect x="1019.0" y="1317" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.96" y="1327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ThreadRootsTask::do_it(GCTaskManager*, unsigned int) (11 samples, 0.13%)</title><rect x="1104.9" y="4965" width="1.6" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text text-anchor="" x="1107.91" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (15 samples, 0.18%)</title><rect x="749.2" y="2565" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.charAt (43 samples, 0.52%)</title><rect x="248.4" y="4437" width="6.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="251.42" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter$FormatSpecifier.print (8 samples, 0.10%)</title><rect x="790.3" y="4485" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="793.33" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method (2 samples, 0.02%)</title><rect x="822.7" y="3749" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core/ring-request-&gt;netty-request (8 samples, 0.10%)</title><rect x="719.6" y="4165" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="722.64" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (19 samples, 0.23%)</title><rect x="989.9" y="3365" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.88" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (8 samples, 0.10%)</title><rect x="758.7" y="3525" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.nio.MappedByteBuffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="507.3" y="4277" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="510.28" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpHeadersEncoder.writeAscii (4 samples, 0.05%)</title><rect x="676.7" y="4501" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="679.74" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (12 samples, 0.15%)</title><rect x="967.6" y="3653" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="892.1" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="895.12" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (77 samples, 0.94%)</title><rect x="810.1" y="4245" width="11.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="813.06" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="757.4" y="3093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.36" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="988.9" y="3061" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="752.2" y="2773" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.18" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (682 samples, 8.32%)</title><rect x="927.0" y="4101" width="98.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="929.96" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.lan..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="880.5" y="3877" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyResponse.get_STAR_ (3 samples, 0.04%)</title><rect x="492.6" y="3909" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="495.60" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="953.0" y="3509" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.02" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="1017.4" y="1605" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="865.6" y="3717" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PoolArena.allocate (3 samples, 0.04%)</title><rect x="514.2" y="4773" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="517.19" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.AbstractList.&lt;init&gt; (2 samples, 0.02%)</title><rect x="911.8" y="3557" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="914.84" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Keyword.intern (2 samples, 0.02%)</title><rect x="73.6" y="4693" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="76.64" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="953.0" y="3573" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.02" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="997.4" y="2885" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.36" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client-middleware/eval17697/opt--17700 (2 samples, 0.02%)</title><rect x="727.3" y="4421" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="730.27" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="984.0" y="3013" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="847.1" y="4069" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="850.06" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (5 samples, 0.06%)</title><rect x="886.4" y="3637" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="889.36" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="1015.5" y="2117" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.51" y="2127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="965.5" y="3109" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="968.55" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap$TransientArrayMap.indexOf (2 samples, 0.02%)</title><rect x="125.3" y="4597" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="128.32" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (6 samples, 0.07%)</title><rect x="986.7" y="3237" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.71" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="978.4" y="3013" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="981.36" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (11 samples, 0.13%)</title><rect x="785.7" y="4261" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.72" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (3 samples, 0.04%)</title><rect x="777.4" y="3941" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="780.37" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (12 samples, 0.15%)</title><rect x="956.3" y="3413" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="959.33" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::PlatformEvent::park() (4 samples, 0.05%)</title><rect x="1058.3" y="4901" width="0.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text text-anchor="" x="1061.27" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="771.8" y="3621" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="774.76" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="944.8" y="3381" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="947.81" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (208 samples, 2.54%)</title><rect x="748.6" y="4277" width="29.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.58" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >cl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (4 samples, 0.05%)</title><rect x="780.5" y="3973" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="783.54" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="994.2" y="2853" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.20" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>byte_streams.InputStream.read (6 samples, 0.07%)</title><rect x="82.7" y="4517" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="85.71" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._loadMore (2 samples, 0.02%)</title><rect x="127.0" y="4645" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="130.05" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="947.7" y="3077" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>CodeBuffer::copy_code_to(CodeBlob*) (4 samples, 0.05%)</title><rect x="1174.9" y="4821" width="0.6" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text text-anchor="" x="1177.88" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="962.1" y="3205" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.misc.Unsafe.unpark (15 samples, 0.18%)</title><rect x="696.9" y="4741" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="699.89" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="785.3" y="4053" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.29" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="890.7" y="3669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="893.68" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="909.4" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="912.40" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="1007.6" y="2565" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.59" y="2575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="992.8" y="3109" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.76" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="1019.2" y="1125" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.25" y="1135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PoolThreadCache$MemoryRegionCache.add (2 samples, 0.02%)</title><rect x="510.2" y="4389" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="513.16" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="979.7" y="3429" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="982.66" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyRequest.valAt (2 samples, 0.02%)</title><rect x="73.6" y="4773" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="76.64" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (4 samples, 0.05%)</title><rect x="765.0" y="3653" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="865.2" y="3781" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="887.2" y="3653" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="890.23" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="998.4" y="2837" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1001.37" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.assoc (3 samples, 0.04%)</title><rect x="284.3" y="4469" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="287.27" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="869.9" y="3717" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.95" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (6 samples, 0.07%)</title><rect x="988.9" y="3301" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="1007.6" y="2437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1010.59" y="2447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (5 samples, 0.06%)</title><rect x="1001.1" y="3125" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Unsafe_Unpark (33 samples, 0.40%)</title><rect x="500.4" y="4389" width="4.7" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text text-anchor="" x="503.37" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1006.4" y="2213" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.43" y="2223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="854.1" y="3797" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="857.11" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="908.8" y="3637" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.assoc (7 samples, 0.09%)</title><rect x="733.9" y="4309" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="736.89" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.java.io/inputstream-&gt;reader (8 samples, 0.10%)</title><rect x="743.1" y="4501" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="746.11" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred/fn--11768/fn--11769 (100 samples, 1.22%)</title><rect x="368.9" y="4933" width="14.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="371.92" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="987.7" y="2997" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.invoke (3 samples, 0.04%)</title><rect x="316.5" y="4517" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="319.52" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="985.8" y="3237" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="988.85" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="957.3" y="3109" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="960.34" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="837.6" y="3829" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="840.55" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="917.9" y="3237" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="920.89" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="959.9" y="3333" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="962.93" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (29 samples, 0.35%)</title><rect x="975.5" y="3429" width="4.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.48" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (5 samples, 0.06%)</title><rect x="912.3" y="3541" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="915.28" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="861.6" y="3973" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="864.60" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (4 samples, 0.05%)</title><rect x="749.3" y="1413" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="1016.9" y="1781" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="1791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.locks.ReentrantLock.lock (2 samples, 0.02%)</title><rect x="483.0" y="4101" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="485.95" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="331.3" y="4469" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="334.35" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="865.9" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (26 samples, 0.32%)</title><rect x="774.4" y="4149" width="3.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.35" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="978.1" y="2933" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.containsKey (2 samples, 0.02%)</title><rect x="482.1" y="4309" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="485.09" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1015.2" y="1893" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.22" y="1903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseIdealLoop::Dominators() (4 samples, 0.05%)</title><rect x="1167.0" y="4837" width="0.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text text-anchor="" x="1169.96" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (11 samples, 0.13%)</title><rect x="884.6" y="3845" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="887.63" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (5 samples, 0.06%)</title><rect x="752.8" y="2981" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.76" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="979.8" y="3109" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (17 samples, 0.21%)</title><rect x="834.5" y="4021" width="2.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="837.53" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (4 samples, 0.05%)</title><rect x="752.8" y="2773" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.76" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (503 samples, 6.14%)</title><rect x="950.7" y="3973" width="72.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="953.72" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$TransientHashMap.&lt;init&gt; (2 samples, 0.02%)</title><rect x="339.6" y="4373" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="342.55" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="987.7" y="2949" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="786.7" y="4149" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="789.73" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (18 samples, 0.22%)</title><rect x="779.1" y="4149" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="908.8" y="3669" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (1,428 samples, 17.42%)</title><rect x="825.9" y="4517" width="205.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="828.89" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.core/reduce</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="918.5" y="3461" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="921.47" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (3 samples, 0.04%)</title><rect x="345.5" y="4533" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="348.46" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="754.3" y="3077" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.grow (2 samples, 0.02%)</title><rect x="806.2" y="3669" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="809.17" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (5 samples, 0.06%)</title><rect x="1019.0" y="1397" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.96" y="1407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (25 samples, 0.31%)</title><rect x="749.2" y="2997" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="756.8" y="3109" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="934.0" y="3461" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="937.02" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.access$700 (2 samples, 0.02%)</title><rect x="68.9" y="4965" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="71.88" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="909.4" y="3637" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="912.40" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (4 samples, 0.05%)</title><rect x="749.3" y="1317" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (13 samples, 0.16%)</title><rect x="878.4" y="3733" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="881.44" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="917.9" y="3333" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="920.89" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.add (3 samples, 0.04%)</title><rect x="853.2" y="3557" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="856.25" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="782.3" y="4037" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="785.27" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.releaseShared (16 samples, 0.20%)</title><rect x="368.9" y="4869" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="371.92" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.System.currentTimeMillis (4 samples, 0.05%)</title><rect x="1033.8" y="4645" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1036.79" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="965.4" y="3189" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="968.40" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (15 samples, 0.18%)</title><rect x="810.9" y="4101" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="813.92" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="977.2" y="3125" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="980.21" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (5 samples, 0.06%)</title><rect x="352.2" y="4501" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="355.22" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="1006.1" y="2757" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1006.4" y="2261" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.43" y="2271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="929.0" y="3333" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="931.98" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="917.9" y="3365" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="920.89" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="1004.3" y="2741" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.28" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/query-server (2,310 samples, 28.18%)</title><rect x="701.2" y="4645" width="332.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="704.21" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.client/query-server</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="959.9" y="3461" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.93" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (12 samples, 0.15%)</title><rect x="765.0" y="3909" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (31 samples, 0.38%)</title><rect x="963.1" y="3557" width="4.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="966.10" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureExplicitCapacity (37 samples, 0.45%)</title><rect x="158.6" y="4597" width="5.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="161.58" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (15 samples, 0.18%)</title><rect x="958.9" y="3829" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="961.92" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ObjectStartArray::object_start(HeapWord*) const (5 samples, 0.06%)</title><rect x="1059.8" y="4933" width="0.8" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text text-anchor="" x="1062.85" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PooledSlicedByteBuf.nioBuffers (2 samples, 0.02%)</title><rect x="507.3" y="4357" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="510.28" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="962.1" y="3413" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (7 samples, 0.09%)</title><rect x="765.6" y="3781" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="768.57" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (3 samples, 0.04%)</title><rect x="784.1" y="3957" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="787.14" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers$DoubleOps.multiply (2 samples, 0.02%)</title><rect x="1021.4" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1024.41" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (9 samples, 0.11%)</title><rect x="816.4" y="4037" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="819.39" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="1010.2" y="2357" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.18" y="2367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="959.9" y="3269" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.93" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="818.8" y="3701" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="821.84" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (1,428 samples, 17.42%)</title><rect x="825.9" y="4533" width="205.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="828.89" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.client/rand-json-ob..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="936.8" y="3445" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="939.75" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1006.4" y="2389" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.43" y="2399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (9 samples, 0.11%)</title><rect x="999.8" y="3045" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.81" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.disjoin (3 samples, 0.04%)</title><rect x="376.3" y="4773" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="379.27" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="901.3" y="3429" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="904.33" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (18 samples, 0.22%)</title><rect x="770.5" y="4005" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="752.2" y="2725" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.18" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="983.0" y="3013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="985.97" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="786.0" y="4053" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="789.01" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (5 samples, 0.06%)</title><rect x="347.0" y="4549" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="350.04" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="833.8" y="3621" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="836.81" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="959.1" y="3477" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="962.07" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="995.6" y="2277" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="959.1" y="3541" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="962.07" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (10 samples, 0.12%)</title><rect x="981.2" y="3141" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="984.24" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (4 samples, 0.05%)</title><rect x="765.0" y="3685" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.cons (10 samples, 0.12%)</title><rect x="347.9" y="4501" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="350.90" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (7 samples, 0.09%)</title><rect x="903.6" y="3685" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="906.64" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (5 samples, 0.06%)</title><rect x="775.5" y="3957" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.50" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (12 samples, 0.15%)</title><rect x="967.6" y="3685" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (54 samples, 0.66%)</title><rect x="951.1" y="3765" width="7.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="954.15" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="342.7" y="4565" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="345.72" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (25 samples, 0.31%)</title><rect x="845.8" y="4261" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="848.76" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="839.3" y="3685" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="842.28" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1001.5" y="2901" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1004.54" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (6 samples, 0.07%)</title><rect x="892.6" y="3893" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="895.55" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="1008.9" y="2725" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="939.2" y="3701" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.20" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.locks.LockSupport.park (82 samples, 1.00%)</title><rect x="701.5" y="4533" width="11.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="704.50" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.writeAndFlush (95 samples, 1.16%)</title><rect x="680.2" y="4805" width="13.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.19" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (19 samples, 0.23%)</title><rect x="935.0" y="3685" width="2.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="938.02" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue$TransferStack.transfer (12 samples, 0.15%)</title><rect x="371.9" y="4789" width="1.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="374.95" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (16 samples, 0.20%)</title><rect x="838.4" y="3925" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="841.42" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="756.8" y="3077" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (7 samples, 0.09%)</title><rect x="809.0" y="4149" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="812.05" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (8 samples, 0.10%)</title><rect x="884.6" y="3637" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="887.63" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (2 samples, 0.02%)</title><rect x="174.7" y="4069" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="177.70" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JVM_Sleep (46 samples, 0.56%)</title><rect x="1049.5" y="4949" width="6.6" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text text-anchor="" x="1052.48" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="933.0" y="3237" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="936.01" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_pthread_mutex_firstfit_lock_slow (35 samples, 0.43%)</title><rect x="464.1" y="4837" width="5.0" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text text-anchor="" x="467.09" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (9 samples, 0.11%)</title><rect x="890.0" y="3989" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1012.2" y="2101" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.19" y="2111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="937.2" y="3301" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="940.18" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (3 samples, 0.04%)</title><rect x="88.5" y="4213" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="91.47" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="913.0" y="3445" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="916.00" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (76 samples, 0.93%)</title><rect x="1009.3" y="2837" width="11.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.31" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (35 samples, 0.43%)</title><rect x="851.4" y="4021" width="5.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="854.38" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (4 samples, 0.05%)</title><rect x="749.3" y="1669" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.aleph.dirigiste.Pool.acquire (5 samples, 0.06%)</title><rect x="713.6" y="4533" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="716.59" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="998.8" y="2741" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1001.80" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentSet.contains (2 samples, 0.02%)</title><rect x="499.5" y="4341" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="502.51" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (50 samples, 0.61%)</title><rect x="1012.8" y="2517" width="7.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.77" y="2527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="994.9" y="2677" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="862.5" y="3957" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="865.46" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (427 samples, 5.21%)</title><rect x="961.1" y="3845" width="61.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="964.08" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >exampl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (3 samples, 0.04%)</title><rect x="924.7" y="3797" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="927.66" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="1015.2" y="2165" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.22" y="2175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (5 samples, 0.06%)</title><rect x="886.4" y="3749" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="889.36" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.System.currentTimeMillis (2 samples, 0.02%)</title><rect x="1038.5" y="4965" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1041.54" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (5 samples, 0.06%)</title><rect x="754.3" y="3285" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (81 samples, 0.99%)</title><rect x="911.3" y="3957" width="11.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="914.27" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="822.7" y="4149" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString (2 samples, 0.02%)</title><rect x="103.6" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="106.58" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (244 samples, 2.98%)</title><rect x="986.3" y="3557" width="35.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.28" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >cl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__psynch_mutexwait (4 samples, 0.05%)</title><rect x="381.0" y="4677" width="0.6" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text text-anchor="" x="384.02" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>attach_listener_thread_entry(JavaThread*, Thread*) (2 samples, 0.02%)</title><rect x="1181.6" y="4949" width="0.3" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text text-anchor="" x="1184.65" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="913.0" y="3429" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="916.00" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="823.7" y="3717" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="826.73" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Compile::init_buffer(unsigned int*) (6 samples, 0.07%)</title><rect x="1107.5" y="4853" width="0.9" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text text-anchor="" x="1110.50" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1017.4" y="1173" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (9 samples, 0.11%)</title><rect x="963.4" y="3301" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="966.39" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (23 samples, 0.28%)</title><rect x="816.1" y="4053" width="3.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="819.10" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.&lt;init&gt; (2 samples, 0.02%)</title><rect x="132.4" y="4645" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="135.38" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (7 samples, 0.09%)</title><rect x="953.5" y="3493" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.45" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="902.8" y="3557" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="905.77" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken (8 samples, 0.10%)</title><rect x="112.8" y="4565" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="115.80" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred/fn--11768 (74 samples, 0.90%)</title><rect x="482.8" y="4229" width="10.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="485.81" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="978.1" y="2917" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="865.6" y="3621" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (4 samples, 0.05%)</title><rect x="766.0" y="3701" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="769.00" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="964.7" y="3269" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (5 samples, 0.06%)</title><rect x="784.9" y="4213" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="787.86" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="833.7" y="3733" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="836.67" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="860.4" y="3637" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="863.45" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (29 samples, 0.35%)</title><rect x="876.1" y="3797" width="4.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="879.14" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="885.5" y="3621" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="888.50" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.category (2 samples, 0.02%)</title><rect x="945.2" y="3093" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="948.25" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="983.7" y="3093" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="986.69" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="763.6" y="3525" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.55" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="760.4" y="3093" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.39" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (6 samples, 0.07%)</title><rect x="953.6" y="3301" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.60" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll.Segment.toString (5 samples, 0.06%)</title><rect x="1056.7" y="5013" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1059.68" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="816.5" y="3797" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="819.53" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (2 samples, 0.02%)</title><rect x="1175.5" y="4805" width="0.2" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text text-anchor="" x="1178.46" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="996.9" y="2757" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.93" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="862.5" y="3941" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="865.46" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="998.7" y="2789" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1001.66" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand (2 samples, 0.02%)</title><rect x="896.0" y="3685" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="899.01" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (29 samples, 0.35%)</title><rect x="975.5" y="3509" width="4.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.48" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpObjectDecoder.splitHeader (2 samples, 0.02%)</title><rect x="475.9" y="4645" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="478.90" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="985.4" y="3141" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="988.41" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (6 samples, 0.07%)</title><rect x="990.3" y="3141" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="993.31" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="946.3" y="3397" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (18 samples, 0.22%)</title><rect x="834.4" y="4053" width="2.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="837.39" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="848.5" y="4053" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.50" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (2 samples, 0.02%)</title><rect x="499.5" y="4309" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="502.51" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="933.9" y="3653" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="936.87" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="904.2" y="3381" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="907.21" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.server/handle-request/fn--16599 (35 samples, 0.43%)</title><rect x="500.2" y="4501" width="5.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="503.23" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/merge-with/merge-entry--5980 (9 samples, 0.11%)</title><rect x="74.5" y="4693" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="77.50" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="375.0" y="4789" width="0.3" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text text-anchor="" x="377.97" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="902.8" y="3669" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="905.77" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (54 samples, 0.66%)</title><rect x="951.1" y="3829" width="7.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="954.15" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (5 samples, 0.06%)</title><rect x="1006.1" y="2805" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (5 samples, 0.06%)</title><rect x="1001.1" y="3045" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="891.4" y="3877" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="894.40" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (14 samples, 0.17%)</title><rect x="128.9" y="4677" width="2.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="131.92" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (4 samples, 0.05%)</title><rect x="766.0" y="3653" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="769.00" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (33 samples, 0.40%)</title><rect x="868.8" y="4325" width="4.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="871.80" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOfObject (3 samples, 0.04%)</title><rect x="302.1" y="4485" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="305.12" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (682 samples, 8.32%)</title><rect x="927.0" y="4117" width="98.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="929.96" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.cor..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="959.9" y="3397" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="962.93" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="952.2" y="3253" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="955.16" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (3 samples, 0.04%)</title><rect x="924.7" y="3813" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="927.66" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/subscribe--11925/fn--11926 (65 samples, 0.79%)</title><rect x="483.2" y="4101" width="9.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="486.24" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="886.5" y="3429" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="889.51" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="855.3" y="3781" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="858.26" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="965.4" y="3205" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="968.40" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (4 samples, 0.05%)</title><rect x="172.7" y="3733" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (3 samples, 0.04%)</title><rect x="855.8" y="3797" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="858.84" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="483.2" y="3973" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="486.24" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="817.3" y="3877" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="820.25" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="75.5" y="4661" width="0.3" height="15.0" fill="rgb(232,96,96)" rx="2" ry="2" />
<text text-anchor="" x="78.51" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="806.9" y="3925" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="809.89" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Listener.onSuccess (60 samples, 0.73%)</title><rect x="483.7" y="3941" width="8.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="486.67" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (7 samples, 0.09%)</title><rect x="812.1" y="3909" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="815.07" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="846.3" y="3733" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.34" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (9 samples, 0.11%)</title><rect x="805.6" y="3845" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="808.59" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (6 samples, 0.07%)</title><rect x="978.1" y="3141" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="908.8" y="3653" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PooledByteBuf.nioBuffers (2 samples, 0.02%)</title><rect x="507.3" y="4341" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="510.28" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="1018.7" y="1381" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1012.2" y="2197" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.19" y="2207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="1021.0" y="3189" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1023.98" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (133 samples, 1.62%)</title><rect x="1001.8" y="3141" width="19.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1004.83" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (3 samples, 0.04%)</title><rect x="835.5" y="3605" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="838.54" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.add (2 samples, 0.02%)</title><rect x="844.8" y="4101" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="847.75" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="843.3" y="3717" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.31" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::current_thread_enable_wx_impl(WXMode) (2 samples, 0.02%)</title><rect x="491.9" y="3685" width="0.3" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text text-anchor="" x="494.88" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="861.7" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="864.74" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="823.6" y="3893" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="826.59" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (5 samples, 0.06%)</title><rect x="897.6" y="3701" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="900.59" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="921.1" y="3381" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="924.06" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="979.8" y="3269" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (4 samples, 0.05%)</title><rect x="749.3" y="1445" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/persistent! (2 samples, 0.02%)</title><rect x="103.3" y="4517" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="106.29" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (12 samples, 0.15%)</title><rect x="829.9" y="3717" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="832.92" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0 (24 samples, 0.29%)</title><rect x="673.0" y="4485" width="3.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="1016.5" y="1797" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.51" y="1807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (19 samples, 0.23%)</title><rect x="895.7" y="3845" width="2.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="898.72" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="1010.8" y="2373" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="813.1" y="3925" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.08" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::current_thread_enable_wx(WXMode) (2 samples, 0.02%)</title><rect x="373.2" y="4661" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text text-anchor="" x="376.24" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)1, 131072u&gt;, (MemoryType)1&gt;::steal(unsigned int, int*, StarTask&amp;) (2 samples, 0.02%)</title><rect x="1066.9" y="4949" width="0.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text text-anchor="" x="1069.90" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (2 samples, 0.02%)</title><rect x="182.2" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="185.19" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="846.0" y="4101" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="849.05" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (35 samples, 0.43%)</title><rect x="944.2" y="3685" width="5.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="947.24" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="882.2" y="3493" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="885.19" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="811.4" y="3909" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="814.35" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="1015.9" y="1925" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.94" y="1935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::WXWriteFromExecSetter::~WXWriteFromExecSetter() (2 samples, 0.02%)</title><rect x="470.4" y="4869" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text text-anchor="" x="473.42" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (31 samples, 0.38%)</title><rect x="884.5" y="3909" width="4.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="887.49" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (16 samples, 0.20%)</title><rect x="88.5" y="4341" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="91.47" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="983.7" y="3157" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.69" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (13 samples, 0.16%)</title><rect x="760.2" y="3653" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (12 samples, 0.15%)</title><rect x="914.9" y="3701" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="917.87" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="979.2" y="3253" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="982.22" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="995.6" y="2437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (4 samples, 0.05%)</title><rect x="752.2" y="2901" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.18" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeFlush0 (24 samples, 0.29%)</title><rect x="673.0" y="4629" width="3.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="925.1" y="3669" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="928.09" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.ThreadLocal.get (2 samples, 0.02%)</title><rect x="719.1" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="722.07" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Branch.match (13 samples, 0.16%)</title><rect x="794.7" y="4453" width="1.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="797.65" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="123.5" y="4581" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="126.45" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$CharProperty$1.isSatisfiedBy (2 samples, 0.02%)</title><rect x="309.3" y="4485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="312.32" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/format (51 samples, 0.62%)</title><rect x="789.5" y="4597" width="7.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="792.47" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.CombinedChannelDuplexHandler.channelRead (2 samples, 0.02%)</title><rect x="512.0" y="4741" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="515.03" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="939.8" y="3637" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="979.7" y="3477" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="982.66" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.&lt;init&gt; (4 samples, 0.05%)</title><rect x="745.0" y="4501" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="747.98" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="955.6" y="3365" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="958.61" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (5 samples, 0.06%)</title><rect x="926.1" y="3637" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="929.10" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (25 samples, 0.31%)</title><rect x="749.2" y="2949" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/cons--5393 (4 samples, 0.05%)</title><rect x="742.2" y="4565" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="745.24" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="281.8" y="4437" width="0.3" height="15.0" fill="rgb(250,124,124)" rx="2" ry="2" />
<text text-anchor="" x="284.82" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.conj (2 samples, 0.02%)</title><rect x="509.2" y="4517" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="512.15" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (4 samples, 0.05%)</title><rect x="958.3" y="3557" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="961.35" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="1015.2" y="2149" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.22" y="2159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="904.2" y="3365" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="907.21" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hasheq (3 samples, 0.04%)</title><rect x="337.7" y="4453" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="340.68" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (7 samples, 0.09%)</title><rect x="922.9" y="3733" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Var.getRawRoot (2 samples, 0.02%)</title><rect x="497.9" y="4613" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="500.92" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>CodeBlob::CodeBlob(char const*, CodeBuffer*, int, int, int, int, OopMapSet*) (3 samples, 0.04%)</title><rect x="1177.0" y="4805" width="0.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text text-anchor="" x="1180.04" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="985.4" y="3157" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="988.41" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.WrappedByteBuf.setCharSequence (3 samples, 0.04%)</title><rect x="676.9" y="4485" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="679.88" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (6 samples, 0.07%)</title><rect x="886.4" y="3797" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="889.36" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (6 samples, 0.07%)</title><rect x="953.6" y="3269" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.60" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seqFrom (3 samples, 0.04%)</title><rect x="315.1" y="4549" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="318.08" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="752.5" y="2757" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.47" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (294 samples, 3.59%)</title><rect x="1123.1" y="4837" width="42.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text text-anchor="" x="1126.05" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Con..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="953.7" y="3061" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentVector.nth (3 samples, 0.04%)</title><rect x="128.3" y="4709" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="131.35" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (11 samples, 0.13%)</title><rect x="908.4" y="3845" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="911.39" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (26 samples, 0.32%)</title><rect x="858.4" y="4021" width="3.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="861.43" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="935.5" y="3349" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="938.46" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.BufferedReader.&lt;init&gt; (2 samples, 0.02%)</title><rect x="79.5" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="82.54" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hasheq (4 samples, 0.05%)</title><rect x="328.3" y="4293" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="331.32" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="934.0" y="3429" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="937.02" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (12 samples, 0.15%)</title><rect x="967.6" y="3605" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName (4 samples, 0.05%)</title><rect x="104.2" y="4501" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="107.16" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (5 samples, 0.06%)</title><rect x="779.7" y="3925" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.68" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="905.8" y="3429" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="908.80" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.&lt;init&gt; (2 samples, 0.02%)</title><rect x="116.7" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="119.68" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="954.6" y="3029" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="957.60" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="956.5" y="3269" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="959.48" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clout.core/path-info (2 samples, 0.02%)</title><rect x="76.8" y="4757" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="79.80" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/disj (3 samples, 0.04%)</title><rect x="376.3" y="4789" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="379.27" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (18 samples, 0.22%)</title><rect x="834.4" y="4069" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="837.39" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (8 samples, 0.10%)</title><rect x="749.2" y="2101" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.gt (2 samples, 0.02%)</title><rect x="826.8" y="4437" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="829.76" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="842.4" y="3861" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.45" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.write (7 samples, 0.09%)</title><rect x="676.4" y="4661" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="679.45" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JVM_IHashCode (10 samples, 0.12%)</title><rect x="318.2" y="4261" width="1.5" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text text-anchor="" x="321.25" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="936.0" y="3429" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="939.03" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="935.2" y="3541" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="938.17" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.socket.nio.NioSocketChannel.doReadBytes (94 samples, 1.15%)</title><rect x="515.1" y="4869" width="13.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="518.06" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (12 samples, 0.15%)</title><rect x="350.5" y="4517" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="353.50" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="861.7" y="3637" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="864.74" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="967.0" y="3333" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="969.99" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="1016.4" y="1973" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.37" y="1983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (12 samples, 0.15%)</title><rect x="1002.0" y="2869" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.97" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (100 samples, 1.22%)</title><rect x="1006.1" y="2949" width="14.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Long.toString (2 samples, 0.02%)</title><rect x="790.3" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="793.33" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="822.0" y="3781" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>CodeBlob::CodeBlob(char const*, CodeBuffer*, int, int, int, int, OopMapSet*) (4 samples, 0.05%)</title><rect x="1174.9" y="4837" width="0.6" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text text-anchor="" x="1177.88" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (17 samples, 0.21%)</title><rect x="1017.4" y="1861" width="2.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="841.4" y="3557" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="844.44" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (12 samples, 0.15%)</title><rect x="994.2" y="3045" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="997.20" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (30 samples, 0.37%)</title><rect x="821.6" y="4357" width="4.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="824.57" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="863.9" y="3813" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="866.90" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="752.9" y="2709" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.90" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="848.1" y="3957" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="851.06" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.concurrent.AbstractScheduledEventExecutor.peekScheduledTask (3 samples, 0.04%)</title><rect x="671.3" y="4917" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="674.27" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.main/repl/read-eval-print--9110 (2,321 samples, 28.32%)</title><rect x="700.2" y="4869" width="334.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="703.20" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.main/repl/read-eval-print--9110</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (10 samples, 0.12%)</title><rect x="813.5" y="4037" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName (2 samples, 0.02%)</title><rect x="100.3" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="103.27" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::current_thread_enable_wx(WXMode) (2 samples, 0.02%)</title><rect x="491.6" y="3701" width="0.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text text-anchor="" x="494.59" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (210 samples, 2.56%)</title><rect x="748.6" y="4293" width="30.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.58" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ch..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="926.5" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="929.53" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1017.4" y="1269" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PeriodicTask::real_time_tick(int) (8 samples, 0.10%)</title><rect x="1183.7" y="4965" width="1.1" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text text-anchor="" x="1186.67" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (5 samples, 0.06%)</title><rect x="945.1" y="3253" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="948.10" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.auto_flatten_seq.AutoFlattenSeq.conj_flat (2 samples, 0.02%)</title><rect x="47.3" y="5013" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="50.29" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.reduction/apply-reduction (8 samples, 0.10%)</title><rect x="345.2" y="4565" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="348.17" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/success! (40 samples, 0.49%)</title><rect x="362.3" y="4837" width="5.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="365.30" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (15 samples, 0.18%)</title><rect x="958.9" y="3669" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="961.92" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="860.4" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="863.45" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="968.7" y="3461" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="971.71" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="833.5" y="3973" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="836.52" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.StreamDecoder.&lt;init&gt; (2 samples, 0.02%)</title><rect x="80.1" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="83.11" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RestFn.invoke (22 samples, 0.27%)</title><rect x="744.8" y="4597" width="3.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="747.84" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (18 samples, 0.22%)</title><rect x="749.2" y="2693" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="815.0" y="3957" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="817.95" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="972.5" y="3157" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="975.46" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.StreamDecoder.forInputStreamReader (3 samples, 0.04%)</title><rect x="743.8" y="4469" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="746.83" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (5 samples, 0.06%)</title><rect x="185.5" y="4565" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="188.50" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="838.9" y="3525" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="841.85" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.SelectorImpl.select (988 samples, 12.05%)</title><rect x="529.0" y="4901" width="142.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="532.02" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.nio.ch.Selecto..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (14 samples, 0.17%)</title><rect x="999.8" y="3157" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.81" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (4 samples, 0.05%)</title><rect x="765.0" y="3781" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (145 samples, 1.77%)</title><rect x="748.7" y="4085" width="20.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.72" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (5 samples, 0.06%)</title><rect x="925.1" y="3813" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="928.09" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (92 samples, 1.12%)</title><rect x="87.3" y="4501" width="13.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="90.31" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (2 samples, 0.02%)</title><rect x="880.0" y="3685" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="883.03" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1013.2" y="1829" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="1839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="815.4" y="3701" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="818.38" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="749.3" y="1061" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="779.1" y="3877" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="299.4" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="302.39" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="811.4" y="3829" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="814.35" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="988.0" y="2853" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.01" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (3 samples, 0.04%)</title><rect x="758.1" y="3285" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.08" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="957.3" y="3125" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="960.34" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="865.2" y="3765" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="935.5" y="3381" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="938.46" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="994.9" y="2741" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="971.6" y="3109" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="974.59" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (7 samples, 0.09%)</title><rect x="1018.7" y="1461" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (11 samples, 0.13%)</title><rect x="831.9" y="3893" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="834.94" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractReferenceCountedByteBuf.handleRelease (2 samples, 0.02%)</title><rect x="498.4" y="4597" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="501.36" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="996.2" y="2949" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.21" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1015.2" y="1941" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.22" y="1951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="939.2" y="3605" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.20" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="749.3" y="389" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (20 samples, 0.24%)</title><rect x="864.2" y="3941" width="2.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="867.19" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="999.2" y="3205" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.24" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="950.1" y="3493" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="953.14" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.ReflectionFactory.copyMethod (2 samples, 0.02%)</title><rect x="941.2" y="3893" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="944.22" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="971.6" y="3189" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="974.59" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="809.6" y="4037" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="812.62" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1008.9" y="2357" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (52 samples, 0.63%)</title><rect x="961.8" y="3781" width="7.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="964.80" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="882.9" y="3621" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="885.91" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (2 samples, 0.02%)</title><rect x="179.6" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="182.60" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="886.5" y="3477" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="889.51" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (91 samples, 1.11%)</title><rect x="749.0" y="3797" width="13.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="971.3" y="3125" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="974.31" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/keyword (2 samples, 0.02%)</title><rect x="73.6" y="4709" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="76.64" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (4 samples, 0.05%)</title><rect x="749.3" y="1573" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (15 samples, 0.18%)</title><rect x="958.9" y="3717" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="961.92" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="754.3" y="2789" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="997.4" y="2789" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.36" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="813.7" y="3621" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.66" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (11 samples, 0.13%)</title><rect x="1018.2" y="1685" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.24" y="1695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="976.9" y="3093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.92" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.formatTo (2 samples, 0.02%)</title><rect x="969.6" y="3621" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.58" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (9 samples, 0.11%)</title><rect x="999.8" y="3077" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1002.81" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="995.6" y="2293" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (7 samples, 0.09%)</title><rect x="812.1" y="3941" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="815.07" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseIterGVN::transform_old(Node*) (9 samples, 0.11%)</title><rect x="1170.6" y="4853" width="1.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text text-anchor="" x="1173.56" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="991.5" y="2789" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.46" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (5 samples, 0.06%)</title><rect x="783.9" y="4021" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.85" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (16 samples, 0.20%)</title><rect x="986.6" y="3285" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.57" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="759.8" y="3365" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.81" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Matcher.search (20 samples, 0.24%)</title><rect x="793.6" y="4501" width="2.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="796.64" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="836.5" y="3717" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="839.55" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SpinPause (25 samples, 0.31%)</title><rect x="1101.3" y="4949" width="3.6" height="15.0" fill="rgb(242,111,111)" rx="2" ry="2" />
<text text-anchor="" x="1104.31" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="904.9" y="3461" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="907.93" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="943.4" y="3461" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="946.37" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.swap (2 samples, 0.02%)</title><rect x="72.3" y="4997" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="75.34" y="5007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="976.9" y="3205" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="979.92" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (8 samples, 0.10%)</title><rect x="749.2" y="2117" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="865.2" y="3653" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="995.6" y="2517" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (5 samples, 0.06%)</title><rect x="1006.1" y="2853" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (24 samples, 0.29%)</title><rect x="816.0" y="4069" width="3.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="818.96" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.write (3 samples, 0.04%)</title><rect x="693.9" y="4677" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="696.87" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="995.2" y="2773" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="998.20" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (5 samples, 0.06%)</title><rect x="878.6" y="3541" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="881.59" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1018.7" y="1093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="1001.1" y="2741" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (4 samples, 0.05%)</title><rect x="765.0" y="3701" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="995.5" y="2757" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.49" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (16 samples, 0.20%)</title><rect x="899.8" y="3685" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="902.75" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (8 samples, 0.10%)</title><rect x="823.4" y="3973" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="826.45" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (8 samples, 0.10%)</title><rect x="862.8" y="3861" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="865.75" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/eval22182/fn--22183 (2,321 samples, 28.32%)</title><rect x="700.2" y="4661" width="334.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="703.20" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.client/eval22182/fn--22183</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (14 samples, 0.17%)</title><rect x="944.7" y="3621" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="947.67" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="839.3" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="842.28" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="985.8" y="3205" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="988.85" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="376.4" y="4709" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="379.41" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="933.3" y="3445" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="936.30" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="751.3" y="2517" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="754.32" y="2527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (3 samples, 0.04%)</title><rect x="172.7" y="3573" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="1017.4" y="1733" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>compojure.core/route-matches (9 samples, 0.11%)</title><rect x="76.2" y="4789" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="79.23" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (10 samples, 0.12%)</title><rect x="963.2" y="3413" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="966.24" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding.encode (2 samples, 0.02%)</title><rect x="679.8" y="4773" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="682.76" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (5 samples, 0.06%)</title><rect x="859.2" y="3733" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="862.15" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="872.0" y="3733" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.96" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1019.4" y="789" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.39" y="799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="1010.8" y="2309" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (133 samples, 1.62%)</title><rect x="802.3" y="4437" width="19.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="805.28" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (16 samples, 0.20%)</title><rect x="899.8" y="3717" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="902.75" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce1 (2 samples, 0.02%)</title><rect x="73.9" y="4757" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="76.92" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (2 samples, 0.02%)</title><rect x="482.1" y="4293" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="485.09" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="822.3" y="3989" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.29" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (8 samples, 0.10%)</title><rect x="951.9" y="3445" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="954.87" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="819.1" y="3973" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="822.13" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="879.5" y="3541" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="882.45" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="1005.9" y="2821" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1008.86" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="770.5" y="3605" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.equal (2 samples, 0.02%)</title><rect x="802.6" y="4261" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="805.57" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpObjectEncoder.encode (12 samples, 0.15%)</title><rect x="694.4" y="4709" width="1.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="697.45" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="905.4" y="3525" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="908.37" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="1018.7" y="1333" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="971.6" y="3221" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="974.59" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="749.3" y="757" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="964.7" y="3237" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="975.0" y="3333" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.05" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (7 samples, 0.09%)</title><rect x="812.1" y="3893" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="815.07" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimePrintContext.adjust (2 samples, 0.02%)</title><rect x="969.6" y="3589" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.58" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="954.6" y="3157" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="957.60" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="921.1" y="3189" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="924.06" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="869.4" y="3637" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.37" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (10 samples, 0.12%)</title><rect x="877.0" y="3685" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="880.00" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (3 samples, 0.04%)</title><rect x="929.1" y="3285" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="932.12" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.math.BigInteger.toString (4 samples, 0.05%)</title><rect x="127.8" y="4693" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="130.77" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (3 samples, 0.04%)</title><rect x="180.2" y="4405" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="183.18" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>trampoline_stub_Relocation::get_trampoline_for(unsigned char*, nmethod*) (3 samples, 0.04%)</title><rect x="1177.0" y="4741" width="0.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text text-anchor="" x="1180.04" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="988.9" y="3109" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1013.2" y="1941" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="1951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="1003.7" y="2837" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1006.70" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$7.isSatisfiedBy (5 samples, 0.06%)</title><rect x="731.0" y="4021" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="734.02" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Curly.match (4 samples, 0.05%)</title><rect x="310.2" y="4421" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="313.18" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (20 samples, 0.24%)</title><rect x="1016.9" y="2037" width="2.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="2047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/assoc--5433 (6 samples, 0.07%)</title><rect x="736.8" y="4581" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="739.77" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.hashCode (2 samples, 0.02%)</title><rect x="180.3" y="4373" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="183.32" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (4 samples, 0.05%)</title><rect x="339.0" y="4357" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="341.98" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (14 samples, 0.17%)</title><rect x="762.7" y="3765" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.69" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.ATransientMap.assoc (3 samples, 0.04%)</title><rect x="117.1" y="4581" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="120.12" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="891.4" y="3957" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.40" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (8 samples, 0.10%)</title><rect x="854.7" y="3797" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="857.69" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText (3 samples, 0.04%)</title><rect x="97.7" y="4453" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="100.68" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseCCP::transform(Node*) (2 samples, 0.02%)</title><rect x="1165.7" y="4853" width="0.3" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text text-anchor="" x="1168.67" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (10 samples, 0.12%)</title><rect x="813.5" y="3893" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (10 samples, 0.12%)</title><rect x="803.9" y="4005" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="806.87" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="859.3" y="3605" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="862.29" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (13 samples, 0.16%)</title><rect x="770.5" y="3925" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="751.9" y="2773" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="754.89" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="494.3" y="4565" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="497.32" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="759.8" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.81" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="814.2" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="817.23" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Listener.onSuccess (6 samples, 0.07%)</title><rect x="492.6" y="4021" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="495.60" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (2 samples, 0.02%)</title><rect x="279.8" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="282.80" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="933.0" y="3253" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="936.01" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$GroupHead.match (3 samples, 0.04%)</title><rect x="796.1" y="4437" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="799.09" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (10 samples, 0.12%)</title><rect x="807.3" y="3973" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="810.32" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (21 samples, 0.26%)</title><rect x="870.5" y="4101" width="3.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="873.52" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle.allocate (8 samples, 0.10%)</title><rect x="513.8" y="4869" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="516.76" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>compojure.core/wrap-response/fn--20619 (1,971 samples, 24.05%)</title><rect x="77.8" y="4773" width="283.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="80.81" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >compojure.core/wrap-response/fn--20619</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (5 samples, 0.06%)</title><rect x="896.9" y="3701" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="899.87" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::WXWriteFromExecSetter::WXWriteFromExecSetter() (2 samples, 0.02%)</title><rect x="373.2" y="4693" width="0.3" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text text-anchor="" x="376.24" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="919.6" y="3525" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="943.4" y="3429" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="946.37" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JavaThread::check_and_wait_while_suspended() (2 samples, 0.02%)</title><rect x="1039.1" y="4917" width="0.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text text-anchor="" x="1042.12" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="825.2" y="4085" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="828.17" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (5 samples, 0.06%)</title><rect x="775.5" y="3925" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.50" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="822.0" y="3877" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="751.3" y="2533" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="754.32" y="2543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Character.codePointAt (5 samples, 0.06%)</title><rect x="311.0" y="4469" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="314.05" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="983.7" y="3125" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.69" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.swap (2 samples, 0.02%)</title><rect x="210.8" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="213.84" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="954.6" y="3141" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="957.60" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="1001.1" y="2997" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="1004.3" y="2517" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.28" y="2527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="832.2" y="3637" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="835.23" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="953.6" y="3237" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.60" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (35 samples, 0.43%)</title><rect x="851.4" y="4037" width="5.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="854.38" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="954.6" y="3093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="957.60" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="332.9" y="4565" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="335.93" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="946.8" y="3493" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="949.83" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (5 samples, 0.06%)</title><rect x="955.6" y="3333" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="958.61" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="954.6" y="3061" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="957.60" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="902.8" y="3701" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="905.77" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (15 samples, 0.18%)</title><rect x="838.6" y="3829" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="841.56" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode.tryMatch (12 samples, 0.15%)</title><rect x="371.9" y="4773" width="1.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="374.95" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="939.8" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter.parse (35 samples, 0.43%)</title><rect x="791.6" y="4533" width="5.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="794.63" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (5 samples, 0.06%)</title><rect x="878.6" y="3477" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="881.59" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="920.1" y="3397" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="923.05" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PooledSlicedByteBuf.newInstance0 (2 samples, 0.02%)</title><rect x="474.6" y="4613" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.60" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (88 samples, 1.07%)</title><rect x="894.9" y="3973" width="12.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="897.86" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ParseGenerator::generate(JVMState*) (13 samples, 0.16%)</title><rect x="1172.4" y="4805" width="1.9" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text text-anchor="" x="1175.44" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hasheq (13 samples, 0.16%)</title><rect x="302.7" y="4453" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="305.70" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (12 samples, 0.15%)</title><rect x="829.9" y="3733" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="832.92" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/conj--5407 (5 samples, 0.06%)</title><rect x="375.4" y="4773" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="378.40" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format (2 samples, 0.02%)</title><rect x="969.9" y="3349" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (7 samples, 0.09%)</title><rect x="994.9" y="2981" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="830.2" y="3685" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="833.21" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="995.6" y="2645" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="284.4" y="4389" width="0.3" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text text-anchor="" x="287.41" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PoolArena$DirectArena.newByteBuf (2 samples, 0.02%)</title><rect x="513.9" y="4773" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="516.90" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (503 samples, 6.14%)</title><rect x="950.7" y="3957" width="72.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="953.72" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-full-listener (5 samples, 0.06%)</title><rect x="325.2" y="4581" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="328.16" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.conj (2 samples, 0.02%)</title><rect x="312.5" y="4485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="315.49" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (126 samples, 1.54%)</title><rect x="827.6" y="4261" width="18.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="830.62" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.net.URI$Parser.parseHostname (2 samples, 0.02%)</title><rect x="715.0" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="718.03" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="971.3" y="3173" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="974.31" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (3 samples, 0.04%)</title><rect x="375.5" y="4709" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="378.55" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (2 samples, 0.02%)</title><rect x="181.9" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="184.90" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.read (7 samples, 0.09%)</title><rect x="512.8" y="4757" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="515.75" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/total-success? (3 samples, 0.04%)</title><rect x="360.0" y="4565" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="363.00" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (19 samples, 0.23%)</title><rect x="88.5" y="4357" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="91.47" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="996.2" y="2853" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.21" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="982.4" y="3061" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="985.39" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/success! (90 samples, 1.10%)</title><rect x="481.2" y="4565" width="13.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="484.22" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="978.1" y="3013" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="846.3" y="3829" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.34" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.format (2 samples, 0.02%)</title><rect x="878.9" y="3349" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="881.88" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1015.6" y="1909" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.65" y="1919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="1004.9" y="2517" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.85" y="2527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (125 samples, 1.53%)</title><rect x="850.7" y="4213" width="18.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="853.66" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="861.6" y="3877" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="864.60" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="864.3" y="3685" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="867.33" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-listener (10 samples, 0.12%)</title><rect x="207.2" y="4565" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="210.24" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="988.9" y="3157" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>zero_longs (27 samples, 0.33%)</title><rect x="61.1" y="5013" width="3.9" height="15.0" fill="rgb(227,89,89)" rx="2" ry="2" />
<text text-anchor="" x="64.11" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="963.8" y="3109" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="966.82" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.CombinedChannelDuplexHandler.write (16 samples, 0.20%)</title><rect x="693.9" y="4741" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="696.87" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="936.0" y="3541" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="939.03" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (5 samples, 0.06%)</title><rect x="1001.1" y="3109" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (4 samples, 0.05%)</title><rect x="176.6" y="4325" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="179.58" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.GeneratedMethodAccessor49 (2 samples, 0.02%)</title><rect x="896.6" y="3621" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="899.58" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="817.4" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.40" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.more (3 samples, 0.04%)</title><rect x="494.6" y="4581" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="497.61" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (3 samples, 0.04%)</title><rect x="761.7" y="3589" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="764.68" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (2 samples, 0.02%)</title><rect x="768.4" y="3733" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="771.45" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (19 samples, 0.23%)</title><rect x="972.0" y="3445" width="2.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="975.03" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ConnectionGraph::add_fields_to_worklist(FieldNode*, PointsToNode*) (3 samples, 0.04%)</title><rect x="1164.8" y="4805" width="0.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text text-anchor="" x="1167.80" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (9 samples, 0.11%)</title><rect x="852.8" y="3589" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="855.82" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (64 samples, 0.78%)</title><rect x="941.5" y="3957" width="9.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="944.50" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (20 samples, 0.24%)</title><rect x="1016.9" y="2021" width="2.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="2031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="987.1" y="3013" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.14" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (30 samples, 0.37%)</title><rect x="749.2" y="3045" width="4.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="915.2" y="3509" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="918.16" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="869.9" y="3669" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.95" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (87 samples, 1.06%)</title><rect x="172.7" y="4581" width="12.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.DelegatingMethodAccessorImpl (2 samples, 0.02%)</title><rect x="973.0" y="3253" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="976.03" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (5 samples, 0.06%)</title><rect x="992.6" y="3269" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="995.61" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (78 samples, 0.95%)</title><rect x="749.0" y="3701" width="11.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (5 samples, 0.06%)</title><rect x="955.6" y="3429" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="958.61" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (6 samples, 0.07%)</title><rect x="957.2" y="3269" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="960.20" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="968.1" y="3317" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.14" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName (2 samples, 0.02%)</title><rect x="98.1" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="101.11" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (5 samples, 0.06%)</title><rect x="348.2" y="4437" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="351.19" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (4 samples, 0.05%)</title><rect x="749.3" y="1477" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="749.3" y="869" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (36 samples, 0.44%)</title><rect x="828.3" y="4053" width="5.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="831.34" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (8 samples, 0.10%)</title><rect x="756.8" y="3365" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="908.8" y="3605" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue.offer (58 samples, 0.71%)</title><rect x="484.0" y="3845" width="8.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="486.96" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (7 samples, 0.09%)</title><rect x="780.5" y="4037" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="783.54" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.success (6 samples, 0.07%)</title><rect x="492.6" y="4053" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="495.60" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="979.8" y="3381" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="1012.8" y="2309" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.77" y="2319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (101 samples, 1.23%)</title><rect x="875.1" y="4069" width="14.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="878.13" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Listener.onSuccess (74 samples, 0.90%)</title><rect x="482.8" y="4213" width="10.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="485.81" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (5 samples, 0.06%)</title><rect x="1001.1" y="3029" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.SuccessDeferred.successValue (4 samples, 0.05%)</title><rect x="493.5" y="4421" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="496.46" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.copyMethods (2 samples, 0.02%)</title><rect x="849.8" y="4309" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="852.79" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (20 samples, 0.24%)</title><rect x="779.1" y="4213" width="2.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.success (16 samples, 0.20%)</title><rect x="696.7" y="4853" width="2.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="699.75" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (50 samples, 0.61%)</title><rect x="1012.8" y="2469" width="7.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.77" y="2479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="1013.9" y="2101" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.92" y="2111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (8 samples, 0.10%)</title><rect x="749.2" y="2005" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (9 samples, 0.11%)</title><rect x="890.0" y="3861" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="989.4" y="2949" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.45" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (19 samples, 0.23%)</title><rect x="976.8" y="3365" width="2.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="979.78" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (6 samples, 0.07%)</title><rect x="780.5" y="4021" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="783.54" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="892.0" y="3685" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.98" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="758.9" y="3333" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.95" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (6 samples, 0.07%)</title><rect x="979.7" y="3445" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="982.66" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="759.2" y="3269" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.23" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (4 samples, 0.05%)</title><rect x="878.7" y="3429" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="881.73" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="973.9" y="3141" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="976.90" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util$4.equiv (3 samples, 0.04%)</title><rect x="336.5" y="4469" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="339.53" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="836.5" y="3781" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="839.55" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentVector.cons (3 samples, 0.04%)</title><rect x="300.2" y="4469" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="303.25" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.DefaultHeaders.&lt;init&gt; (2 samples, 0.02%)</title><rect x="720.4" y="4053" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="723.36" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="762.7" y="3573" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.69" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="765.0" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/node-get (7 samples, 0.09%)</title><rect x="278.5" y="4549" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="281.51" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (24 samples, 0.29%)</title><rect x="903.5" y="3781" width="3.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="906.49" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.success (38 samples, 0.46%)</title><rect x="362.3" y="4741" width="5.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="365.30" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (12 samples, 0.15%)</title><rect x="967.6" y="3637" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="919.6" y="3221" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (8 samples, 0.10%)</title><rect x="884.6" y="3797" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="887.63" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="905.4" y="3493" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="908.37" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (6 samples, 0.07%)</title><rect x="874.0" y="4293" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="876.98" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="988.9" y="3189" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (23 samples, 0.28%)</title><rect x="796.8" y="4613" width="3.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="799.81" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="872.7" y="3669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (276 samples, 3.37%)</title><rect x="748.4" y="4517" width="39.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.44" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (16 samples, 0.20%)</title><rect x="986.6" y="3365" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.57" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead (214 samples, 2.61%)</title><rect x="481.1" y="4661" width="30.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="484.08" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.toUpperCase (3 samples, 0.04%)</title><rect x="719.9" y="4133" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="722.93" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="968.4" y="3253" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.43" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="813.5" y="3829" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="882.2" y="3509" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="885.19" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="757.9" y="3349" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.94" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName (5 samples, 0.06%)</title><rect x="109.6" y="4533" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="112.63" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="854.3" y="3637" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="857.26" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="816.4" y="3861" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="819.39" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>RelocIterator::set_limits(unsigned char*, unsigned char*) (3 samples, 0.04%)</title><rect x="1177.0" y="4725" width="0.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text text-anchor="" x="1180.04" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (427 samples, 5.21%)</title><rect x="961.1" y="3893" width="61.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="964.08" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >exampl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="1009.5" y="2469" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.46" y="2479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.DefaultLastHttpContent.touch (3 samples, 0.04%)</title><rect x="693.4" y="4725" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="696.44" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (31 samples, 0.38%)</title><rect x="963.1" y="3509" width="4.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="966.10" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="970.4" y="3221" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="973.44" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="775.5" y="3717" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.50" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="969.0" y="3365" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="972.00" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (22 samples, 0.27%)</title><rect x="858.4" y="3957" width="3.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="861.43" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/persistent! (4 samples, 0.05%)</title><rect x="105.2" y="4533" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="108.17" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="962.1" y="3461" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="753.9" y="3045" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="756.91" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatterBuilder$NumberPrinterParser.format (2 samples, 0.02%)</title><rect x="801.7" y="4389" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="804.71" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hasheq (3 samples, 0.04%)</title><rect x="210.0" y="4389" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="212.98" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="1001.1" y="2773" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util$4.equiv (2 samples, 0.02%)</title><rect x="207.7" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="210.67" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/subscribe--11925 (3 samples, 0.04%)</title><rect x="718.6" y="4405" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="721.63" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.DelegatingMethodAccessorImpl (2 samples, 0.02%)</title><rect x="853.7" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="856.68" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="1003.7" y="2981" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1006.70" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="854.1" y="3813" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="857.11" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="923.9" y="3845" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="926.94" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (2 samples, 0.02%)</title><rect x="181.9" y="4389" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="184.90" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="817.4" y="3653" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="820.40" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (5 samples, 0.06%)</title><rect x="752.8" y="2965" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.76" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.append (2 samples, 0.02%)</title><rect x="738.9" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="741.93" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (8 samples, 0.10%)</title><rect x="951.9" y="3461" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="954.87" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/deref (84 samples, 1.02%)</title><rect x="701.5" y="4629" width="12.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="704.50" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="839.3" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="842.28" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (24 samples, 0.29%)</title><rect x="989.9" y="3413" width="3.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.88" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (42 samples, 0.51%)</title><rect x="1013.8" y="2389" width="6.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.78" y="2399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.ATransientMap.assoc (18 samples, 0.22%)</title><rect x="317.1" y="4389" width="2.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="320.09" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.net.URI$Parser.parseServer (3 samples, 0.04%)</title><rect x="714.9" y="4485" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="717.89" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="803.6" y="4021" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="806.58" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.server/fn--21788 (3 samples, 0.04%)</title><rect x="1057.5" y="4965" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1060.55" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>compojure.core/method-matches? (6 samples, 0.07%)</title><rect x="73.6" y="4805" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="76.64" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="843.3" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="846.31" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="977.6" y="2997" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="980.64" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="1008.2" y="2517" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.16" y="2527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (17 samples, 0.21%)</title><rect x="886.2" y="3877" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="889.22" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (12 samples, 0.15%)</title><rect x="770.5" y="3861" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="842.4" y="3797" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="845.45" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="946.3" y="3541" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeMatchingMethod (2 samples, 0.02%)</title><rect x="969.9" y="3445" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="869.8" y="3909" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.80" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/full-listener-exists? (4 samples, 0.05%)</title><rect x="208.8" y="4549" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="211.83" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (6 samples, 0.07%)</title><rect x="836.1" y="3861" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="839.12" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="996.1" y="3029" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.07" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (2 samples, 0.02%)</title><rect x="207.7" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="210.67" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (5 samples, 0.06%)</title><rect x="912.3" y="3573" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="915.28" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (35 samples, 0.43%)</title><rect x="828.5" y="4005" width="5.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="831.48" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.ConcurrentHashMap.get (2 samples, 0.02%)</title><rect x="738.4" y="4453" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="741.36" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/swap! (2 samples, 0.02%)</title><rect x="361.0" y="4613" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="364.01" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="953.7" y="2965" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="987.7" y="3125" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (126 samples, 1.54%)</title><rect x="827.6" y="4389" width="18.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="830.62" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="757.4" y="3237" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.36" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="1010.8" y="2469" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PoolArena.tcacheAllocateSmall (3 samples, 0.04%)</title><rect x="514.2" y="4757" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="517.19" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (8 samples, 0.10%)</title><rect x="762.7" y="3701" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.69" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="811.6" y="3797" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="814.64" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (2 samples, 0.02%)</title><rect x="297.5" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="300.51" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="762.7" y="3541" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.69" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="775.5" y="3781" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.50" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>frame::sender_for_compiled_frame(RegisterMap*) const (5 samples, 0.06%)</title><rect x="138.6" y="4565" width="0.7" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text text-anchor="" x="141.57" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="864.8" y="3573" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="867.77" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="938.5" y="3541" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="1007.9" y="2357" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1010.87" y="2367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="1004.9" y="2661" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.85" y="2671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="954.5" y="3509" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="957.46" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="832.8" y="3749" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="835.80" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (239 samples, 2.92%)</title><rect x="85.4" y="4613" width="34.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="88.44" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ch..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="968.7" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.71" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.net.URL.&lt;init&gt; (2 samples, 0.02%)</title><rect x="733.0" y="4373" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="736.03" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.assoc (2 samples, 0.02%)</title><rect x="321.6" y="4517" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="324.56" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (11 samples, 0.13%)</title><rect x="939.2" y="3797" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.20" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Compiler.eval (2,321 samples, 28.32%)</title><rect x="700.2" y="4693" width="334.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="703.20" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.lang.Compiler.eval</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="1010.8" y="2549" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.KQueueArrayWrapper.interrupt (31 samples, 0.38%)</title><rect x="363.0" y="4533" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="366.02" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (18 samples, 0.22%)</title><rect x="928.7" y="3685" width="2.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="931.69" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="956.5" y="3253" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="959.48" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.aleph.dirigiste.Executor.execute (15 samples, 0.18%)</title><rect x="696.9" y="4821" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="699.89" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="979.7" y="3573" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="982.66" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="822.0" y="4181" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="863.0" y="3589" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="866.04" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="903.6" y="3525" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="906.64" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (10 samples, 0.12%)</title><rect x="847.6" y="4101" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="850.63" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite (3 samples, 0.04%)</title><rect x="788.3" y="4549" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="791.32" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="869.9" y="3653" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.95" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="1008.9" y="2613" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (6 samples, 0.07%)</title><rect x="774.6" y="4021" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (55 samples, 0.67%)</title><rect x="941.5" y="3893" width="7.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="944.50" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (13 samples, 0.16%)</title><rect x="829.9" y="3797" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="832.92" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (4 samples, 0.05%)</title><rect x="779.1" y="3973" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="915.2" y="3445" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="918.16" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (11 samples, 0.13%)</title><rect x="1002.1" y="2821" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1005.12" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="879.5" y="3461" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="882.45" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (12 samples, 0.15%)</title><rect x="994.2" y="3029" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.20" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="1016.7" y="1429" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.66" y="1439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="926.1" y="3557" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="929.10" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (5 samples, 0.06%)</title><rect x="945.1" y="3157" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="948.10" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (12 samples, 0.15%)</title><rect x="765.0" y="3925" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.ChannelInboundHandlerAdapter.channelRead (19 samples, 0.23%)</title><rect x="477.8" y="4597" width="2.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="480.77" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RestFn.invoke (32 samples, 0.39%)</title><rect x="80.5" y="4709" width="4.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="83.55" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (25 samples, 0.31%)</title><rect x="845.8" y="4373" width="3.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="848.76" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (31 samples, 0.38%)</title><rect x="172.7" y="4357" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Monitor::ILock(Thread*) (2 samples, 0.02%)</title><rect x="10.0" y="4949" width="0.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (6 samples, 0.07%)</title><rect x="953.6" y="3253" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.60" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (2 samples, 0.02%)</title><rect x="354.7" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="357.67" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="811.4" y="3925" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="814.35" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="811.4" y="3717" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="814.35" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="348.9" y="4437" width="0.3" height="15.0" fill="rgb(215,73,73)" rx="2" ry="2" />
<text text-anchor="" x="351.91" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="1010.8" y="2581" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (5 samples, 0.06%)</title><rect x="886.4" y="3733" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="889.36" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (10 samples, 0.12%)</title><rect x="779.1" y="4117" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (73 samples, 0.89%)</title><rect x="483.0" y="4181" width="10.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="485.95" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>byte_streams.pushback_stream.SynchronizedPushbackByteStream.put (2 samples, 0.02%)</title><rect x="368.5" y="4789" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="371.49" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.CombinedChannelDuplexHandler.channelReadComplete (3 samples, 0.04%)</title><rect x="512.3" y="4757" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="515.32" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (10 samples, 0.12%)</title><rect x="991.2" y="3109" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.17" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (29 samples, 0.35%)</title><rect x="783.1" y="4373" width="4.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.13" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (5 samples, 0.06%)</title><rect x="1000.4" y="2869" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1003.39" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (5 samples, 0.06%)</title><rect x="752.8" y="2933" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.76" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="755.5" y="3253" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.49" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="763.6" y="3589" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.55" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="840.0" y="3621" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="843.00" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (9 samples, 0.11%)</title><rect x="890.0" y="3845" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/deref (3 samples, 0.04%)</title><rect x="204.8" y="4613" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="207.80" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$BmpCharProperty.match (9 samples, 0.11%)</title><rect x="740.8" y="4485" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="743.81" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (11 samples, 0.13%)</title><rect x="997.7" y="2965" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1000.65" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="904.1" y="3509" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.07" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="861.6" y="3813" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="864.60" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (124 samples, 1.51%)</title><rect x="748.9" y="3989" width="17.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.87" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="883.9" y="3845" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="886.91" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="863.0" y="3557" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="866.04" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1001.5" y="2933" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.54" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (7 samples, 0.09%)</title><rect x="1002.5" y="2709" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1005.55" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="972.5" y="3397" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="975.46" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.KQueueArrayWrapper.interrupt (16 samples, 0.20%)</title><rect x="721.2" y="4085" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="724.22" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="977.6" y="3189" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="980.64" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (18 samples, 0.22%)</title><rect x="919.5" y="3669" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="922.48" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (10 samples, 0.12%)</title><rect x="749.2" y="2325" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (3 samples, 0.04%)</title><rect x="751.3" y="2469" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="754.32" y="2479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (10 samples, 0.12%)</title><rect x="823.2" y="4037" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="826.16" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="923.4" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="926.36" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (503 samples, 6.14%)</title><rect x="950.7" y="3941" width="72.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="953.72" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="872.7" y="3701" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="936.0" y="3461" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="939.03" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="842.0" y="3845" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.02" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/success! (4 samples, 0.05%)</title><rect x="371.2" y="4885" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="374.23" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (18 samples, 0.22%)</title><rect x="964.7" y="3445" width="2.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="977.6" y="3221" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="980.64" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/catch'/fn--12016 (39 samples, 0.48%)</title><rect x="362.3" y="4773" width="5.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="365.30" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.pcequiv (2 samples, 0.02%)</title><rect x="747.3" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="750.28" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="869.9" y="3877" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.95" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="901.3" y="3445" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="904.33" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="759.8" y="3445" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.81" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="984.6" y="3045" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="987.55" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="115.1" y="4549" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="118.10" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="938.5" y="3461" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="749.3" y="421" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>MachNode::rematerialize() const (2 samples, 0.02%)</title><rect x="1116.4" y="4837" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text text-anchor="" x="1119.43" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="1001.1" y="2901" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.KQueueArrayWrapper.poll (571 samples, 6.97%)</title><rect x="529.2" y="4853" width="82.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="532.17" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.nio.c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="865.9" y="3349" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (5 samples, 0.06%)</title><rect x="814.2" y="3845" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="817.23" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (6 samples, 0.07%)</title><rect x="931.3" y="3589" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="934.28" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (36 samples, 0.44%)</title><rect x="1014.6" y="2357" width="5.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1017.64" y="2367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (13 samples, 0.16%)</title><rect x="371.8" y="4885" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="374.80" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (91 samples, 1.11%)</title><rect x="749.0" y="3813" width="13.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.copyMethods (2 samples, 0.02%)</title><rect x="830.6" y="3621" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="833.64" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="929.6" y="3317" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="932.55" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="999.2" y="3045" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.24" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="840.0" y="3509" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="843.00" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.equiv (2 samples, 0.02%)</title><rect x="356.3" y="4453" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="359.25" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (4 samples, 0.05%)</title><rect x="174.7" y="4149" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="177.70" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (126 samples, 1.54%)</title><rect x="827.6" y="4357" width="18.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="830.62" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.IOUtil.read (86 samples, 1.05%)</title><rect x="515.5" y="4805" width="12.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="518.49" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="865.9" y="3397" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (3 samples, 0.04%)</title><rect x="784.1" y="3989" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="787.14" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (6 samples, 0.07%)</title><rect x="836.1" y="3845" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="839.12" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (8 samples, 0.10%)</title><rect x="862.8" y="3845" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="865.75" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="968.7" y="3189" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.71" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="779.7" y="3893" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.68" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="960.5" y="3381" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="963.51" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="848.5" y="3813" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="851.50" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="947.7" y="3109" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (10 samples, 0.12%)</title><rect x="776.7" y="4085" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="779.65" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (109 samples, 1.33%)</title><rect x="749.0" y="3893" width="15.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="754.3" y="2901" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="990.5" y="2917" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="993.45" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.write (16 samples, 0.20%)</title><rect x="693.9" y="4789" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="696.87" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="974.8" y="3365" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (22 samples, 0.27%)</title><rect x="858.4" y="3941" width="3.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="861.43" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="750.0" y="1749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="753.02" y="1759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="780.7" y="3861" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="783.69" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1017.4" y="1445" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1019.4" y="901" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1022.39" y="911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken (4 samples, 0.05%)</title><rect x="126.8" y="4677" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="129.76" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="919.6" y="3605" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="843.3" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="846.31" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="938.5" y="3525" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (35 samples, 0.43%)</title><rect x="851.4" y="4053" width="5.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="854.38" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="943.4" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="946.37" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>jshort_disjoint_arraycopy (2 samples, 0.02%)</title><rect x="782.7" y="4245" width="0.3" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text text-anchor="" x="785.70" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="861.6" y="3717" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="864.60" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AdaptiveRecvByteBufAllocator$HandleImpl.record (2 samples, 0.02%)</title><rect x="474.0" y="4853" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.02" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1016.7" y="1381" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.66" y="1391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (15 samples, 0.18%)</title><rect x="891.4" y="4053" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.40" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="813.7" y="3717" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.66" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol (4 samples, 0.05%)</title><rect x="102.1" y="4469" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="105.14" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (8 samples, 0.10%)</title><rect x="951.9" y="3509" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="954.87" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="902.8" y="3525" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="905.77" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (16 samples, 0.20%)</title><rect x="762.4" y="3845" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.40" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="806.9" y="3957" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="809.89" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ParkCommon(ParkEvent*, long) (4 samples, 0.05%)</title><rect x="1058.8" y="4917" width="0.6" height="15.0" fill="rgb(215,71,71)" rx="2" ry="2" />
<text text-anchor="" x="1061.84" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (6 samples, 0.07%)</title><rect x="837.0" y="4005" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="839.98" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="770.5" y="3637" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Monitor::wait(bool, long, bool) (5 samples, 0.06%)</title><rect x="1058.8" y="4949" width="0.8" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text text-anchor="" x="1061.84" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="860.4" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="863.45" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (5 samples, 0.06%)</title><rect x="749.3" y="1781" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client-middleware/wrap-nested-params (6 samples, 0.07%)</title><rect x="727.0" y="4437" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="729.98" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="754.3" y="2965" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>byte_streams.pushback_stream.SynchronizedPushbackByteStream.read (6 samples, 0.07%)</title><rect x="82.7" y="4501" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="85.71" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11874/deferred--11875 (2 samples, 0.02%)</title><rect x="367.5" y="4613" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="370.48" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Curly.match0 (3 samples, 0.04%)</title><rect x="310.3" y="4405" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="313.33" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (12 samples, 0.15%)</title><rect x="970.2" y="3413" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="973.15" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>byte_streams$to_input_stream.invokeStatic (14 samples, 0.17%)</title><rect x="477.9" y="4469" width="2.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="480.91" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1006.4" y="2421" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.43" y="2431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.chrono.IsoChronology.zonedDateTime (2 samples, 0.02%)</title><rect x="969.6" y="3573" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.58" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (78 samples, 0.95%)</title><rect x="749.0" y="3685" width="11.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::do_call() (2 samples, 0.02%)</title><rect x="1173.6" y="4421" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text text-anchor="" x="1176.59" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.netty/eval15865/to-byte-buf--15868 (7 samples, 0.09%)</title><rect x="672.0" y="4821" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="674.99" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (6 samples, 0.07%)</title><rect x="859.2" y="3781" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="862.15" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="773.8" y="3893" width="0.3" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text text-anchor="" x="776.78" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (8 samples, 0.10%)</title><rect x="340.3" y="4485" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="343.27" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (92 samples, 1.12%)</title><rect x="1007.3" y="2901" width="13.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1010.30" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="892.0" y="3765" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.98" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="1012.8" y="2341" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1015.77" y="2351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="914.9" y="3541" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="917.87" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="902.1" y="3701" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="905.05" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) (2 samples, 0.02%)</title><rect x="1171.6" y="4821" width="0.3" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text text-anchor="" x="1174.57" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (2 samples, 0.02%)</title><rect x="343.6" y="4325" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="346.58" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (6 samples, 0.07%)</title><rect x="313.6" y="4437" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="316.64" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="879.5" y="3621" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="882.45" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (15 samples, 0.18%)</title><rect x="941.8" y="3605" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="944.79" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/assoc--5433 (2 samples, 0.02%)</title><rect x="961.1" y="3829" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="964.08" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (2 samples, 0.02%)</title><rect x="330.9" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="333.92" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JavaThread::thread_main_inner() (523 samples, 6.38%)</title><rect x="1106.6" y="4965" width="75.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text text-anchor="" x="1109.64" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >JavaThre..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/node-get (28 samples, 0.34%)</title><rect x="338.5" y="4565" width="4.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="341.55" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.formatTo (2 samples, 0.02%)</title><rect x="878.9" y="3333" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="881.88" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="991.2" y="2885" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="994.17" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="759.2" y="3285" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.23" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="996.9" y="2805" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.93" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol (2 samples, 0.02%)</title><rect x="100.3" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="103.27" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.assoc (6 samples, 0.07%)</title><rect x="33.5" y="5013" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="36.47" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (5 samples, 0.06%)</title><rect x="897.6" y="3669" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="900.59" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (11 samples, 0.13%)</title><rect x="852.5" y="3637" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="855.53" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOfRange (2 samples, 0.02%)</title><rect x="119.6" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="122.56" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="968.7" y="3269" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.71" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (2 samples, 0.02%)</title><rect x="1033.5" y="4565" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1036.50" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="824.6" y="4053" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="827.60" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (12 samples, 0.15%)</title><rect x="914.9" y="3573" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="917.87" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (3 samples, 0.04%)</title><rect x="287.9" y="4485" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="290.87" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="939.5" y="3573" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="942.49" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (2 samples, 0.02%)</title><rect x="84.9" y="4565" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="87.87" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (6 samples, 0.07%)</title><rect x="979.7" y="3461" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="982.66" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (4 samples, 0.05%)</title><rect x="756.8" y="3237" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Var.invoke (2,001 samples, 24.41%)</title><rect x="73.6" y="4933" width="288.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="76.64" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.lang.Var.invoke</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (75 samples, 0.92%)</title><rect x="927.7" y="3877" width="10.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="930.68" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="987.7" y="2837" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="1004.3" y="2725" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.28" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureExplicitCapacity (2 samples, 0.02%)</title><rect x="858.1" y="3957" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="861.14" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="990.5" y="2949" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="993.45" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.graph/async-connect (2 samples, 0.02%)</title><rect x="479.4" y="4293" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="482.35" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="749.3" y="229" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="966.6" y="3173" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="969.55" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (12 samples, 0.15%)</title><rect x="823.2" y="4213" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="826.16" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="975.6" y="3285" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="978.62" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="871.5" y="3637" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="874.53" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="920.1" y="3365" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="923.05" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.doEquiv (2 samples, 0.02%)</title><rect x="298.5" y="4357" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="301.52" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (12 samples, 0.15%)</title><rect x="852.4" y="3685" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="855.38" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="957.2" y="3253" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="960.20" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="923.2" y="3589" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="926.22" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="902.8" y="3461" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="905.77" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (28 samples, 0.34%)</title><rect x="779.0" y="4325" width="4.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="781.96" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="991.2" y="2917" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="994.17" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.ChannelOutboundBuffer.remove (5 samples, 0.06%)</title><rect x="680.3" y="4533" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.34" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="848.1" y="3733" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.06" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (11 samples, 0.13%)</title><rect x="917.7" y="3605" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="920.75" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Murmur3.hashUnordered (3 samples, 0.04%)</title><rect x="210.0" y="4373" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="212.98" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (3 samples, 0.04%)</title><rect x="859.3" y="3509" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="862.29" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOfObject (5 samples, 0.06%)</title><rect x="326.6" y="4485" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="329.60" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (47 samples, 0.57%)</title><rect x="838.0" y="4069" width="6.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="840.99" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (21 samples, 0.26%)</title><rect x="749.2" y="2853" width="3.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (18 samples, 0.22%)</title><rect x="749.2" y="2677" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (3 samples, 0.04%)</title><rect x="755.9" y="3237" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.92" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="985.8" y="3253" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="988.85" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="983.0" y="3173" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="985.97" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (17 samples, 0.21%)</title><rect x="1017.4" y="1829" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="837.0" y="3989" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="839.98" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="995.5" y="2837" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.49" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="772.3" y="3765" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="775.34" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="1003.0" y="2645" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1005.98" y="2655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="987.7" y="3093" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (12 samples, 0.15%)</title><rect x="994.2" y="3013" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.20" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="931.6" y="3541" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="934.57" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (7 samples, 0.09%)</title><rect x="930.3" y="3509" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="933.27" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead (91 samples, 1.11%)</title><rect x="498.8" y="4597" width="13.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="501.79" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="1000.1" y="2901" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1003.10" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="968.7" y="3365" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.71" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.success (90 samples, 1.10%)</title><rect x="481.2" y="4549" width="13.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="484.22" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (5 samples, 0.06%)</title><rect x="975.6" y="3189" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.62" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="947.7" y="3237" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="842.4" y="3813" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="845.45" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="854.1" y="3701" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="857.11" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (3 samples, 0.04%)</title><rect x="806.2" y="3733" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="809.17" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (6 samples, 0.07%)</title><rect x="953.6" y="3285" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.60" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.server/fn--21788 (1,965 samples, 23.98%)</title><rect x="78.7" y="4757" width="282.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="81.67" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.server/fn--21788</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="770.5" y="3669" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="848.1" y="3909" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.06" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (5 samples, 0.06%)</title><rect x="878.6" y="3573" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="881.59" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client-middleware/wrap-exceptions/fn--17751/fn--17774 (2 samples, 0.02%)</title><rect x="483.0" y="4085" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="485.95" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (5 samples, 0.06%)</title><rect x="782.0" y="4133" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="784.98" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="914.0" y="3797" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="917.00" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (6 samples, 0.07%)</title><rect x="871.1" y="3845" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.10" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.create (19 samples, 0.23%)</title><rect x="317.1" y="4421" width="2.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="320.09" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.core/parse-string (293 samples, 3.57%)</title><rect x="85.2" y="4725" width="42.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="88.15" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >che..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (11 samples, 0.13%)</title><rect x="970.3" y="3269" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="973.30" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="753.6" y="3093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="756.62" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="997.8" y="2661" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (12 samples, 0.15%)</title><rect x="970.2" y="3397" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="973.15" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="807.6" y="3717" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="810.61" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="848.5" y="3829" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.50" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentVector$TransientVector.conj (2 samples, 0.02%)</title><rect x="97.1" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="100.10" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="760.4" y="2869" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.39" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="973.9" y="3077" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="976.90" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.conj (5 samples, 0.06%)</title><rect x="65.9" y="4981" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="68.86" y="4991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (31 samples, 0.38%)</title><rect x="963.1" y="3525" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="966.10" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="824.3" y="3941" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="827.31" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (3 samples, 0.04%)</title><rect x="338.1" y="4453" width="0.4" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text text-anchor="" x="341.11" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.add (25 samples, 0.31%)</title><rect x="193.6" y="4565" width="3.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="196.57" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.cons (3 samples, 0.04%)</title><rect x="69.9" y="5029" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="72.89" y="5039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (12 samples, 0.15%)</title><rect x="318.0" y="4325" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="320.96" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (2 samples, 0.02%)</title><rect x="296.1" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="299.07" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.CombinedChannelDuplexHandler.flush (24 samples, 0.29%)</title><rect x="673.0" y="4613" width="3.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete (3 samples, 0.04%)</title><rect x="512.3" y="4773" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="515.32" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (7 samples, 0.09%)</title><rect x="985.3" y="3493" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="988.27" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::current_thread_enable_wx(WXMode) (2 samples, 0.02%)</title><rect x="491.9" y="3701" width="0.3" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text text-anchor="" x="494.88" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="1000.5" y="2773" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1003.53" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (675 samples, 8.24%)</title><rect x="927.2" y="4069" width="97.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="930.25" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.cli..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.getMethods (2 samples, 0.02%)</title><rect x="945.5" y="3077" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="948.53" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (18 samples, 0.22%)</title><rect x="749.2" y="2709" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="925.1" y="3749" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="928.09" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="911.8" y="3589" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="914.84" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="763.8" y="3589" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.84" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.core/generate-string (284 samples, 3.47%)</title><rect x="748.0" y="4613" width="40.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.00" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >che..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="833.7" y="3845" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="836.67" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.KQueueArrayWrapper.poll (399 samples, 4.87%)</title><rect x="613.4" y="4837" width="57.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="616.39" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.ni..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (13 samples, 0.16%)</title><rect x="829.9" y="3813" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="832.92" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="970.7" y="3029" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="973.73" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred/fn--11768 (13 samples, 0.16%)</title><rect x="371.8" y="4837" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="374.80" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (43 samples, 0.52%)</title><rect x="1013.8" y="2437" width="6.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.78" y="2447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="865.2" y="3749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="1016.9" y="1845" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="1855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (32 samples, 0.39%)</title><rect x="980.7" y="3525" width="4.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="983.66" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (6 samples, 0.07%)</title><rect x="962.1" y="3493" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.equiv (3 samples, 0.04%)</title><rect x="208.3" y="4357" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.25" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill (608 samples, 7.42%)</title><rect x="383.9" y="4933" width="87.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="386.90" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::do_call() (7 samples, 0.09%)</title><rect x="1173.0" y="4661" width="1.0" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text text-anchor="" x="1176.01" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="993.8" y="2981" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="996.77" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="995.6" y="2613" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="908.0" y="3749" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="910.96" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (12 samples, 0.15%)</title><rect x="1004.1" y="2965" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.13" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (6 samples, 0.07%)</title><rect x="765.7" y="3717" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="768.71" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="920.8" y="3381" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.77" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1017.4" y="1333" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="968.4" y="3317" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="971.43" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="847.2" y="3973" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="850.20" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (6 samples, 0.07%)</title><rect x="779.7" y="3957" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.68" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="946.0" y="3349" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="948.97" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Murmur3.hashUnordered (8 samples, 0.10%)</title><rect x="343.0" y="4389" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="346.01" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="869.9" y="3701" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.95" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="1005.9" y="2949" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1008.86" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="996.9" y="2885" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.93" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="762.7" y="3461" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.69" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="974.2" y="3189" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="977.18" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="971.3" y="3109" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="974.31" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.get (2 samples, 0.02%)</title><rect x="344.7" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="347.74" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (1,071 samples, 13.07%)</title><rect x="873.5" y="4373" width="154.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="876.55" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.client/rand..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (124 samples, 1.51%)</title><rect x="850.8" y="4149" width="17.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="853.80" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1019.4" y="917" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.39" y="927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (11 samples, 0.13%)</title><rect x="805.3" y="3957" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="808.31" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (10 samples, 0.12%)</title><rect x="776.7" y="4117" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="779.65" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="992.6" y="3237" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="995.61" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11967/chain---11988 (4 samples, 0.05%)</title><rect x="368.2" y="4821" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="371.20" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1017.4" y="1317" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (7 samples, 0.09%)</title><rect x="348.2" y="4469" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="351.19" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (4 samples, 0.05%)</title><rect x="1119.0" y="4837" width="0.6" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text text-anchor="" x="1122.02" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__psynch_cvwait (75 samples, 0.92%)</title><rect x="702.1" y="4469" width="10.8" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text text-anchor="" x="705.08" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="763.8" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.84" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpHeaders.containsValue (2 samples, 0.02%)</title><rect x="377.4" y="4725" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="380.42" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="970.7" y="2997" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="973.73" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/swap! (11 samples, 0.13%)</title><rect x="347.8" y="4565" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="350.76" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="866.3" y="3477" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="869.35" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.aleph.dirigiste.Pool$Queue.take (3 samples, 0.04%)</title><rect x="713.6" y="4517" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="716.59" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (8 samples, 0.10%)</title><rect x="975.6" y="3397" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.62" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (13 samples, 0.16%)</title><rect x="774.6" y="4037" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="999.2" y="3029" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.24" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (3 samples, 0.04%)</title><rect x="1022.1" y="3813" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1025.13" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.formatTo (2 samples, 0.02%)</title><rect x="822.7" y="3685" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.pcequiv (3 samples, 0.04%)</title><rect x="326.6" y="4453" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="329.60" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hasheq (5 samples, 0.06%)</title><rect x="313.6" y="4389" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="316.64" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (7 samples, 0.09%)</title><rect x="930.3" y="3525" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="933.27" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core/send-contiguous-body (38 samples, 0.46%)</title><rect x="672.0" y="4837" width="5.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="674.99" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Unsafe_Park (598 samples, 7.30%)</title><rect x="385.3" y="4885" width="86.1" height="15.0" fill="rgb(223,84,84)" rx="2" ry="2" />
<text text-anchor="" x="388.34" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Unsafe_Park</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="933.9" y="3557" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="936.87" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (9 samples, 0.11%)</title><rect x="1018.4" y="1589" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.38" y="1599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="987.7" y="2885" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.swap (4 samples, 0.05%)</title><rect x="335.5" y="4549" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="338.52" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.StringWriter.write (2 samples, 0.02%)</title><rect x="84.1" y="4645" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="87.15" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1008.9" y="2245" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hasheq (2 samples, 0.02%)</title><rect x="348.3" y="4341" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="351.34" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (4 samples, 0.05%)</title><rect x="749.3" y="1525" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (6 samples, 0.07%)</title><rect x="760.2" y="3429" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="906.2" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="909.23" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/node-get (8 samples, 0.10%)</title><rect x="326.6" y="4565" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="329.60" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/contains? (4 samples, 0.05%)</title><rect x="75.2" y="4677" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="78.22" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="966.1" y="3237" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="969.12" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (31 samples, 0.38%)</title><rect x="884.5" y="3925" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="887.49" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1017.4" y="1237" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="908.0" y="3685" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="910.96" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="924.2" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="927.23" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Matcher.replaceAll (3 samples, 0.04%)</title><rect x="732.0" y="4357" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="735.02" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PoolThreadCache.allocateSmall (3 samples, 0.04%)</title><rect x="694.6" y="4581" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="697.59" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="869.8" y="4005" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.80" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="903.6" y="3493" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="906.64" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (5 samples, 0.06%)</title><rect x="843.3" y="3781" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.31" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (161 samples, 1.96%)</title><rect x="850.4" y="4341" width="23.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="853.37" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (11 samples, 0.13%)</title><rect x="172.7" y="4085" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="818.0" y="3733" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.97" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.format (2 samples, 0.02%)</title><rect x="875.9" y="3941" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="878.85" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (35 samples, 0.43%)</title><rect x="851.4" y="4069" width="5.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="854.38" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (3 samples, 0.04%)</title><rect x="835.5" y="3589" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="838.54" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (8 samples, 0.10%)</title><rect x="951.9" y="3541" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="954.87" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="848.5" y="3861" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="851.50" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="999.2" y="3157" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1002.24" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="749.3" y="341" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="891.4" y="3813" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="894.40" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (26 samples, 0.32%)</title><rect x="889.8" y="4085" width="3.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.82" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="762.7" y="3525" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.69" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="813.1" y="4085" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.08" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.server/eval16578/send-response--16583/fn--16591 (150 samples, 1.83%)</title><rect x="677.5" y="4885" width="21.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="680.46" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >a..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="1010.2" y="2389" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.18" y="2399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="839.3" y="3653" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="842.28" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="767.3" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.30" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (102 samples, 1.24%)</title><rect x="875.0" y="4149" width="14.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="877.99" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (2 samples, 0.02%)</title><rect x="1021.0" y="3157" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1023.98" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="998.4" y="2805" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1001.37" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/merge-with (11 samples, 0.13%)</title><rect x="74.5" y="4757" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="77.50" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method.copy (29 samples, 0.35%)</title><rect x="148.9" y="4565" width="4.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="151.93" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (17 samples, 0.21%)</title><rect x="783.3" y="4277" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.28" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (9 samples, 0.11%)</title><rect x="959.8" y="3637" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.79" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (23 samples, 0.28%)</title><rect x="955.0" y="3541" width="3.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="958.04" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOfObject (3 samples, 0.04%)</title><rect x="316.5" y="4453" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="319.52" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (147 samples, 1.79%)</title><rect x="999.8" y="3189" width="21.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.81" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (12 samples, 0.15%)</title><rect x="756.8" y="3461" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hasheq (2 samples, 0.02%)</title><rect x="359.1" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="362.13" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="866.3" y="3557" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="869.35" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="947.7" y="3253" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="935.2" y="3589" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="938.17" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="1013.8" y="2261" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1016.78" y="2271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (2 samples, 0.02%)</title><rect x="1021.8" y="3717" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1024.84" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method.&lt;init&gt; (27 samples, 0.33%)</title><rect x="149.2" y="4549" width="3.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="152.22" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::enable_wx_from_write(WXMode) (2 samples, 0.02%)</title><rect x="712.9" y="4453" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text text-anchor="" x="715.87" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (9 samples, 0.11%)</title><rect x="816.4" y="4021" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="819.39" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util$4.equiv (2 samples, 0.02%)</title><rect x="298.5" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="301.52" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="919.6" y="3573" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.fireChannelRead (215 samples, 2.62%)</title><rect x="481.1" y="4693" width="30.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="484.08" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.assoc (2 samples, 0.02%)</title><rect x="298.5" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="301.52" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="832.8" y="3733" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="835.80" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.AFn.applyToHelper (10 samples, 0.12%)</title><rect x="79.1" y="4677" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="82.11" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (8 samples, 0.10%)</title><rect x="975.6" y="3381" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.62" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue.offer (6 samples, 0.07%)</title><rect x="382.5" y="4709" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="385.46" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (38 samples, 0.46%)</title><rect x="932.3" y="3733" width="5.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="935.29" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1018.7" y="1125" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.DelegatingMethodAccessorImpl (2 samples, 0.02%)</title><rect x="896.6" y="3637" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="899.58" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.server/hash-total/append--21778 (104 samples, 1.27%)</title><rect x="187.1" y="4661" width="15.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="190.09" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractByteBuf.forEachByte (2 samples, 0.02%)</title><rect x="474.9" y="4629" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.89" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1013.2" y="1861" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="1871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter.format (23 samples, 0.28%)</title><rect x="738.9" y="4565" width="3.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="741.93" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (10 samples, 0.12%)</title><rect x="847.6" y="4117" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="850.63" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="989.4" y="2997" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.45" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-listener (58 samples, 0.71%)</title><rect x="280.1" y="4565" width="8.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="283.09" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Matcher.find (3 samples, 0.04%)</title><rect x="732.0" y="4341" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="735.02" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="822.0" y="3909" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="913.0" y="3557" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="916.00" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (9 samples, 0.11%)</title><rect x="872.0" y="4037" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.96" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="991.5" y="2773" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.46" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="865.6" y="3669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1015.2" y="2037" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.22" y="2047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.grow (2 samples, 0.02%)</title><rect x="798.1" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="801.11" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="773.6" y="3941" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="776.63" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="996.2" y="2805" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.21" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>byte_streams$to_input_stream.invoke (14 samples, 0.17%)</title><rect x="477.9" y="4485" width="2.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="480.91" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (4 samples, 0.05%)</title><rect x="765.0" y="3797" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="817.4" y="3621" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="820.40" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="918.5" y="3413" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="921.47" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (80 samples, 0.98%)</title><rect x="834.1" y="4149" width="11.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="837.10" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="780.7" y="3893" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="783.69" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (19 samples, 0.23%)</title><rect x="972.0" y="3429" width="2.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="975.03" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="946.3" y="3525" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="1018.0" y="1733" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.95" y="1743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="1017.4" y="1765" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Unsafe_Unpark (15 samples, 0.18%)</title><rect x="696.9" y="4725" width="2.2" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text text-anchor="" x="699.89" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="993.9" y="2885" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="996.91" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="890.7" y="3717" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="893.68" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (5 samples, 0.06%)</title><rect x="912.3" y="3493" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="915.28" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (29 samples, 0.35%)</title><rect x="975.5" y="3525" width="4.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.48" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="946.3" y="3589" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="841.4" y="3621" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="844.44" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (21 samples, 0.26%)</title><rect x="858.6" y="3893" width="3.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="861.57" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="753.9" y="3173" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="756.91" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (42 samples, 0.51%)</title><rect x="749.0" y="3365" width="6.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.assoc (2 samples, 0.02%)</title><rect x="285.7" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="288.71" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="825.2" y="4101" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="828.17" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__psynch_cvwait (4 samples, 0.05%)</title><rect x="1058.3" y="4885" width="0.5" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text text-anchor="" x="1061.27" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (30 samples, 0.37%)</title><rect x="876.1" y="3941" width="4.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="879.14" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="920.8" y="3221" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="923.77" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="1016.4" y="1989" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.37" y="1999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (25 samples, 0.31%)</title><rect x="845.8" y="4277" width="3.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="848.76" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="869.4" y="3653" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.37" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="813.1" y="4117" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.08" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="807.6" y="3749" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="810.61" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="994.9" y="2613" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>CardTableExtension::scavenge_contents_parallel(ObjectStartArray*, MutableSpace*, HeapWord*, PSPromotionManager*, unsigned int, unsigned int) (6 samples, 0.07%)</title><rect x="1059.7" y="4949" width="0.9" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text text-anchor="" x="1062.70" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (32 samples, 0.39%)</title><rect x="980.7" y="3381" width="4.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="983.66" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (3 samples, 0.04%)</title><rect x="67.3" y="4997" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="70.30" y="5007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/str (2 samples, 0.02%)</title><rect x="26.1" y="5013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="29.12" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="968.7" y="3445" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.71" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="908.0" y="3765" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="910.96" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.toUpperCase (3 samples, 0.04%)</title><rect x="719.9" y="4117" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="722.93" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (132 samples, 1.61%)</title><rect x="802.4" y="4357" width="19.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="805.43" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.invoke (3 samples, 0.04%)</title><rect x="315.9" y="4533" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="318.94" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="767.9" y="3653" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.87" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter.getZero (2 samples, 0.02%)</title><rect x="790.0" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="793.04" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="936.0" y="3477" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="939.03" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (6 samples, 0.07%)</title><rect x="856.4" y="3925" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="859.42" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="983.3" y="3173" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="986.26" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1015.6" y="1781" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.65" y="1791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (4 samples, 0.05%)</title><rect x="757.9" y="3381" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.94" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="825.2" y="4117" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="828.17" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="937.2" y="3317" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="940.18" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="939.5" y="3557" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="942.49" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.success (13 samples, 0.16%)</title><rect x="371.8" y="4853" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="374.80" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format (2 samples, 0.02%)</title><rect x="973.0" y="3189" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="976.03" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (5 samples, 0.06%)</title><rect x="1026.9" y="4277" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1029.88" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="984.3" y="2997" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="987.26" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (17 samples, 0.21%)</title><rect x="783.3" y="4309" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.28" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (40 samples, 0.49%)</title><rect x="961.8" y="3637" width="5.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="964.80" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="994.2" y="2917" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="997.20" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (11 samples, 0.13%)</title><rect x="758.7" y="3653" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method.&lt;init&gt; (2 samples, 0.02%)</title><rect x="136.0" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="138.98" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="847.2" y="3957" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="850.20" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client/http-connection/fn--16976/fn--16995/fn--16999 (8 samples, 0.10%)</title><rect x="481.2" y="4469" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="484.22" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="908.8" y="3509" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="946.8" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.83" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>VMThread::run() (10 samples, 0.12%)</title><rect x="1182.2" y="4981" width="1.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text text-anchor="" x="1185.23" y="4991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="966.1" y="3125" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="969.12" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="998.7" y="2773" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1001.66" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="931.3" y="3621" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="934.28" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (20 samples, 0.24%)</title><rect x="356.7" y="4517" width="2.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="359.69" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="939.2" y="3621" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="942.20" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="939.8" y="3413" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.formatTo (2 samples, 0.02%)</title><rect x="875.9" y="3925" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="878.85" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="871.1" y="3893" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="874.10" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.misc.Unsafe.unpark (4 samples, 0.05%)</title><rect x="371.2" y="4757" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="374.23" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="929.0" y="3349" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="931.98" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1017.4" y="1525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (17 samples, 0.21%)</title><rect x="946.7" y="3637" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.69" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (7 samples, 0.09%)</title><rect x="337.5" y="4485" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="340.54" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (4 samples, 0.05%)</title><rect x="752.2" y="2789" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.18" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="977.2" y="3221" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="980.21" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="765.0" y="3765" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeRead (4 samples, 0.05%)</title><rect x="513.0" y="4741" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="516.04" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (54 samples, 0.66%)</title><rect x="941.6" y="3765" width="7.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="944.65" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="981.8" y="2949" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="984.82" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="1016.9" y="1877" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="1887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__psynch_cvsignal (10 samples, 0.12%)</title><rect x="697.2" y="4693" width="1.4" height="15.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text text-anchor="" x="700.18" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (5 samples, 0.06%)</title><rect x="1013.8" y="2325" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.78" y="2335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="955.8" y="3157" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="958.76" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (111 samples, 1.35%)</title><rect x="911.0" y="4133" width="16.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="913.98" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="871.5" y="3653" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.53" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;) (3 samples, 0.04%)</title><rect x="1112.3" y="4837" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text text-anchor="" x="1115.25" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1005.6" y="2437" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1008.57" y="2447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="908.8" y="3749" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (10 samples, 0.12%)</title><rect x="947.4" y="3541" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.41" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="974.8" y="3349" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="1010.2" y="2565" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.18" y="2575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="994.2" y="2933" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="997.20" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (9 samples, 0.11%)</title><rect x="932.6" y="3589" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="935.58" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (5 samples, 0.06%)</title><rect x="822.0" y="4149" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Matcher.&lt;init&gt; (2 samples, 0.02%)</title><rect x="728.6" y="4325" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="731.57" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (3 samples, 0.04%)</title><rect x="827.2" y="4453" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="830.19" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.ReflectionFactory.copyMethod (5 samples, 0.06%)</title><rect x="135.8" y="4597" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="138.83" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="786.0" y="4069" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="789.01" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (6 samples, 0.07%)</title><rect x="179.0" y="4453" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="182.02" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (3 samples, 0.04%)</title><rect x="801.3" y="4501" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="804.27" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (7 samples, 0.09%)</title><rect x="809.0" y="4085" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="812.05" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred/f--11646--auto----11803 (16 samples, 0.20%)</title><rect x="368.9" y="4901" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="371.92" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (89 samples, 1.09%)</title><rect x="894.7" y="4117" width="12.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="897.71" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (10 samples, 0.12%)</title><rect x="760.2" y="3621" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (10 samples, 0.12%)</title><rect x="813.5" y="3909" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="817.8" y="3941" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.83" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="935.2" y="3461" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="938.17" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="775.1" y="3845" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.07" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.conj (3 samples, 0.04%)</title><rect x="300.2" y="4485" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="303.25" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="749.3" y="437" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="947.8" y="3061" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.84" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.MessageToMessageEncoder.write (16 samples, 0.20%)</title><rect x="693.9" y="4725" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="696.87" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="865.6" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="929.7" y="3301" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="932.70" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (13 samples, 0.16%)</title><rect x="965.4" y="3365" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="968.40" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (25 samples, 0.31%)</title><rect x="779.1" y="4245" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (13 samples, 0.16%)</title><rect x="941.9" y="3589" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="944.94" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format (2 samples, 0.02%)</title><rect x="942.5" y="3333" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="945.51" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (6 samples, 0.07%)</title><rect x="844.8" y="4117" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="847.75" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (47 samples, 0.57%)</title><rect x="803.3" y="4245" width="6.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="806.29" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (8 samples, 0.10%)</title><rect x="884.6" y="3685" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="887.63" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="1015.6" y="1813" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.65" y="1823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.formatTo (2 samples, 0.02%)</title><rect x="853.7" y="3493" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="856.68" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (3 samples, 0.04%)</title><rect x="1022.1" y="3797" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1025.13" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="974.8" y="3317" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.doEquiv (29 samples, 0.35%)</title><rect x="27.7" y="5013" width="4.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="30.71" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gettimeofday (3 samples, 0.04%)</title><rect x="1050.2" y="4901" width="0.4" height="15.0" fill="rgb(215,71,71)" rx="2" ry="2" />
<text text-anchor="" x="1053.20" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (5 samples, 0.06%)</title><rect x="975.6" y="3269" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.62" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="1016.4" y="1877" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.37" y="1887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.aleph.dirigiste.Executor.execute (58 samples, 0.71%)</title><rect x="484.0" y="3861" width="8.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="486.96" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="990.0" y="3157" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="993.02" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.02%)</title><rect x="1171.6" y="4805" width="0.3" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text text-anchor="" x="1174.57" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="781.1" y="3957" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="784.12" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (7 samples, 0.09%)</title><rect x="824.9" y="4213" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="827.89" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (12 samples, 0.15%)</title><rect x="318.0" y="4341" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="320.96" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="1006.9" y="2741" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.87" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (13 samples, 0.16%)</title><rect x="935.7" y="3621" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="938.74" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (6 samples, 0.07%)</title><rect x="962.1" y="3349" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="863.0" y="3605" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="866.04" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.doEquiv (2 samples, 0.02%)</title><rect x="278.8" y="4357" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="281.80" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="818.1" y="3637" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="821.12" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="998.9" y="2629" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1001.95" y="2639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="999.2" y="3125" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.24" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (42 samples, 0.51%)</title><rect x="813.5" y="4133" width="6.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (29 samples, 0.35%)</title><rect x="774.4" y="4197" width="4.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.35" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="872.7" y="3685" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.access$400 (3 samples, 0.04%)</title><rect x="286.0" y="4421" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="289.00" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (40 samples, 0.49%)</title><rect x="961.8" y="3701" width="5.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="964.80" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (11 samples, 0.13%)</title><rect x="917.7" y="3653" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="920.75" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="939.2" y="3669" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="942.20" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="984.3" y="2901" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="987.26" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (3 samples, 0.04%)</title><rect x="718.6" y="4421" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="721.63" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.locks.LockSupport.unpark (15 samples, 0.18%)</title><rect x="696.9" y="4757" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="699.89" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (7 samples, 0.09%)</title><rect x="867.6" y="4037" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="870.65" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="997.8" y="2901" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (4 samples, 0.05%)</title><rect x="776.8" y="3989" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="779.80" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractByteBuf.nioBuffers (2 samples, 0.02%)</title><rect x="507.3" y="4373" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="510.28" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.02%)</title><rect x="323.3" y="4389" width="0.3" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text text-anchor="" x="326.28" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (11 samples, 0.13%)</title><rect x="758.7" y="3621" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/with-meta--5437 (3 samples, 0.04%)</title><rect x="304.7" y="4517" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="307.71" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken (3 samples, 0.04%)</title><rect x="92.6" y="4389" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="95.64" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.02%)</title><rect x="1173.6" y="4485" width="0.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text text-anchor="" x="1176.59" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText (7 samples, 0.09%)</title><rect x="105.9" y="4533" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="108.89" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (17 samples, 0.21%)</title><rect x="810.9" y="4181" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="813.92" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.netty/write (16 samples, 0.20%)</title><rect x="693.9" y="4821" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="696.87" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (5 samples, 0.06%)</title><rect x="992.6" y="3285" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.61" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="317.7" y="4341" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="320.67" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentVector$TransientVector.persistent (2 samples, 0.02%)</title><rect x="98.7" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="101.69" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (7 samples, 0.09%)</title><rect x="838.6" y="3749" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="841.56" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="865.9" y="3381" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="843.6" y="3717" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.60" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="927.7" y="3797" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="930.68" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="758.9" y="3301" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.95" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="976.9" y="3189" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.92" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (12 samples, 0.15%)</title><rect x="1002.0" y="2901" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1004.97" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (2 samples, 0.02%)</title><rect x="287.6" y="4485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="290.58" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (34 samples, 0.41%)</title><rect x="88.2" y="4405" width="4.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="91.18" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_new_instance_Java (7 samples, 0.09%)</title><rect x="12.0" y="5013" width="1.0" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text text-anchor="" x="15.02" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (1,428 samples, 17.42%)</title><rect x="825.9" y="4485" width="205.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="828.89" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.client/rand-json-ob..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>InlineTree::check_can_parse(ciMethod*) (2 samples, 0.02%)</title><rect x="1106.6" y="4869" width="0.3" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text text-anchor="" x="1109.64" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="885.8" y="3701" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="888.79" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="976.1" y="3061" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.06" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="966.1" y="3093" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="969.12" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="966.1" y="3189" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="969.12" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (17 samples, 0.21%)</title><rect x="783.3" y="4293" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.28" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="822.3" y="3861" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.29" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (6 samples, 0.07%)</title><rect x="933.9" y="3509" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="936.87" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="843.6" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.60" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="761.8" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="764.83" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="1018.7" y="1189" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.access$700 (2 samples, 0.02%)</title><rect x="317.4" y="4341" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="320.38" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (28 samples, 0.34%)</title><rect x="922.9" y="4037" width="4.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (7 samples, 0.09%)</title><rect x="773.1" y="4021" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="776.06" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="749.3" y="325" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Unsafe_Unpark (6 samples, 0.07%)</title><rect x="382.5" y="4629" width="0.8" height="15.0" fill="rgb(225,86,86)" rx="2" ry="2" />
<text text-anchor="" x="385.46" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (3 samples, 0.04%)</title><rect x="287.9" y="4453" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="290.87" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (286 samples, 3.49%)</title><rect x="980.5" y="3605" width="41.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="983.52" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >exa..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter.&lt;init&gt; (5 samples, 0.06%)</title><rect x="738.2" y="4565" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="741.21" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="760.4" y="3013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.39" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1007.6" y="2421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1010.59" y="2431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="815.4" y="3733" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="818.38" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="872.3" y="3653" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.25" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="765.0" y="3525" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="997.8" y="2837" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="1016.4" y="1813" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.37" y="1823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="754.3" y="3093" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.doEquiv (2 samples, 0.02%)</title><rect x="302.1" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="305.12" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (6 samples, 0.07%)</title><rect x="878.6" y="3685" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="881.59" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="840.3" y="3701" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="843.29" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="987.7" y="2741" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (6 samples, 0.07%)</title><rect x="760.2" y="3365" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.containsKey (2 samples, 0.02%)</title><rect x="499.5" y="4325" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="502.51" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="918.5" y="3445" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="921.47" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="847.1" y="4037" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="850.06" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="953.0" y="3525" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.02" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="983.3" y="3093" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="986.26" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="954.6" y="3253" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="957.60" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="968.7" y="3397" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.71" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="979.8" y="3317" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (5 samples, 0.06%)</title><rect x="768.3" y="3861" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="771.30" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="1016.4" y="2053" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.37" y="2063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="963.8" y="3077" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="966.82" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Branch.match (2 samples, 0.02%)</title><rect x="741.7" y="4341" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="744.67" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1007.9" y="2405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1010.87" y="2415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="843.6" y="3605" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.60" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="843.3" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.31" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.DefaultHttpContent.release (2 samples, 0.02%)</title><rect x="693.0" y="4677" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="696.01" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="833.7" y="3749" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="836.67" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (5 samples, 0.06%)</title><rect x="326.6" y="4517" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="329.60" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (11 samples, 0.13%)</title><rect x="944.7" y="3541" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="947.67" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (40 samples, 0.49%)</title><rect x="961.8" y="3573" width="5.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="964.80" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="936.8" y="3477" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="939.75" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (19 samples, 0.23%)</title><rect x="989.9" y="3269" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.88" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.add (9 samples, 0.11%)</title><rect x="132.7" y="4645" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="135.66" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (6 samples, 0.07%)</title><rect x="846.0" y="4133" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="849.05" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="901.3" y="3477" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="904.33" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="903.6" y="3557" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="906.64" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="758.7" y="3333" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="127.3" y="4693" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="130.34" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (11 samples, 0.13%)</title><rect x="749.2" y="2373" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (22 samples, 0.27%)</title><rect x="870.4" y="4117" width="3.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="873.38" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (16 samples, 0.20%)</title><rect x="907.7" y="4053" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="910.67" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (2 samples, 0.02%)</title><rect x="178.6" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="181.59" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (3 samples, 0.04%)</title><rect x="1022.1" y="3765" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1025.13" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (51 samples, 0.62%)</title><rect x="172.7" y="4469" width="7.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="818.8" y="3765" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="821.84" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="869.2" y="3893" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.23" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureExplicitCapacity (2 samples, 0.02%)</title><rect x="835.7" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="838.68" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers$LongOps.add (3 samples, 0.04%)</title><rect x="288.6" y="4533" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="291.59" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="1012.0" y="2277" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.05" y="2287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hasheq (3 samples, 0.04%)</title><rect x="350.9" y="4453" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="353.93" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="823.6" y="3925" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="826.59" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (24 samples, 0.29%)</title><rect x="834.4" y="4085" width="3.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="837.39" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (12 samples, 0.15%)</title><rect x="765.0" y="3893" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method (3 samples, 0.04%)</title><rect x="942.5" y="3413" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="945.51" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="865.9" y="3621" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (6 samples, 0.07%)</title><rect x="942.2" y="3461" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="945.22" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.assoc (2 samples, 0.02%)</title><rect x="69.5" y="5013" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="72.46" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="813.1" y="3941" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.08" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="750.3" y="2117" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="753.31" y="2127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="923.9" y="3749" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="926.94" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$BmpCharProperty.match (2 samples, 0.02%)</title><rect x="310.5" y="4245" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="313.47" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="332.9" y="4581" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="335.93" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (5 samples, 0.06%)</title><rect x="813.5" y="3797" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText (8 samples, 0.10%)</title><rect x="108.0" y="4549" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="111.05" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Matcher.find (24 samples, 0.29%)</title><rect x="793.1" y="4517" width="3.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="796.07" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="1006.1" y="2741" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="869.8" y="4021" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.80" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="952.2" y="3333" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="955.16" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (10 samples, 0.12%)</title><rect x="783.3" y="4165" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.28" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="962.1" y="3285" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (9 samples, 0.11%)</title><rect x="932.6" y="3621" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="935.58" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="1012.9" y="2197" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.91" y="2207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (193 samples, 2.35%)</title><rect x="993.5" y="3349" width="27.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.48" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >e..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="760.4" y="2933" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.39" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="937.2" y="3093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="940.18" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="1017.4" y="1749" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Compile::Code_Gen() (111 samples, 1.35%)</title><rect x="1106.9" y="4885" width="16.0" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text text-anchor="" x="1109.93" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (3 samples, 0.04%)</title><rect x="827.2" y="4421" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="830.19" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.assoc (3 samples, 0.04%)</title><rect x="68.9" y="5029" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="71.88" y="5039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="963.7" y="3189" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="966.67" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.AFn.applyToHelper (2,321 samples, 28.32%)</title><rect x="700.2" y="4757" width="334.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="703.20" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.lang.AFn.applyToHelper</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (2 samples, 0.02%)</title><rect x="735.2" y="4485" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="738.19" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.server/eval16578/send-response--16583 (37 samples, 0.45%)</title><rect x="362.4" y="4645" width="5.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="365.45" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>nmethod::cleanup_inline_caches() (22 samples, 0.27%)</title><rect x="1178.2" y="4869" width="3.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text text-anchor="" x="1181.19" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="861.6" y="3829" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="864.60" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (3 samples, 0.04%)</title><rect x="820.7" y="4181" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="823.71" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="978.4" y="3029" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.36" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (10 samples, 0.12%)</title><rect x="813.5" y="3941" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="890.0" y="3765" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="950.1" y="3733" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="953.14" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName (2 samples, 0.02%)</title><rect x="764.7" y="3893" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="767.70" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="320.3" y="4405" width="0.2" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text text-anchor="" x="323.26" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parker::park(bool, long) (77 samples, 0.94%)</title><rect x="701.8" y="4485" width="11.1" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text text-anchor="" x="704.79" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="1015.2" y="2197" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.22" y="2207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (165 samples, 2.01%)</title><rect x="802.1" y="4517" width="23.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="805.14" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Curly.match (358 samples, 4.37%)</title><rect x="225.4" y="4517" width="51.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="228.38" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="966.7" y="3013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="969.70" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.assoc (2 samples, 0.02%)</title><rect x="291.5" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="294.47" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (14 samples, 0.17%)</title><rect x="172.7" y="4133" width="2.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="940.4" y="3653" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="943.35" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Long.getChars (2 samples, 0.02%)</title><rect x="929.1" y="3109" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="932.12" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="939.8" y="3381" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="891.4" y="3733" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.40" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (133 samples, 1.62%)</title><rect x="802.3" y="4405" width="19.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="805.28" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (15 samples, 0.18%)</title><rect x="907.8" y="3973" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="910.81" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (75 samples, 0.92%)</title><rect x="927.7" y="3909" width="10.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="930.68" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (2 samples, 0.02%)</title><rect x="184.6" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="187.64" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="772.3" y="3797" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="775.34" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="939.8" y="3509" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="979.8" y="3333" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1000.8" y="2581" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1003.82" y="2591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core/ring-response-&gt;netty-response (2 samples, 0.02%)</title><rect x="362.6" y="4613" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="365.59" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="847.2" y="3813" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="850.20" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="908.8" y="3589" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="901.3" y="3381" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="904.33" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="879.5" y="3509" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="882.45" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="865.6" y="3685" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (12 samples, 0.15%)</title><rect x="1167.7" y="4837" width="1.7" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text text-anchor="" x="1170.68" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (10 samples, 0.12%)</title><rect x="947.4" y="3525" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="950.41" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="759.8" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.81" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util$4.equiv (4 samples, 0.05%)</title><rect x="326.6" y="4469" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="329.60" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (5 samples, 0.06%)</title><rect x="996.1" y="3093" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.07" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.doEquiv (2 samples, 0.02%)</title><rect x="277.9" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="280.93" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="978.4" y="2965" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.36" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter.format (44 samples, 0.54%)</title><rect x="790.3" y="4565" width="6.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="793.33" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (5 samples, 0.06%)</title><rect x="752.8" y="2869" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.76" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1018.7" y="1173" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="824.3" y="3925" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="827.31" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (8 samples, 0.10%)</title><rect x="951.9" y="3525" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="954.87" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="822.0" y="4101" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (128 samples, 1.56%)</title><rect x="850.4" y="4277" width="18.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="853.37" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Character.isHighSurrogate (2 samples, 0.02%)</title><rect x="729.0" y="4277" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="732.00" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="865.9" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (2 samples, 0.02%)</title><rect x="287.6" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="290.58" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="765.3" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="768.28" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (35 samples, 0.43%)</title><rect x="975.5" y="3637" width="5.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.48" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeMatchingMethod (2 samples, 0.02%)</title><rect x="896.6" y="3669" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="899.58" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="957.3" y="2997" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="960.34" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1001.5" y="2885" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.54" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="861.6" y="3781" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="864.60" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="814.2" y="3765" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="817.23" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="890.0" y="3685" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.BufferedReader.fill (18 samples, 0.22%)</title><rect x="81.3" y="4597" width="2.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="84.27" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/second--5409 (2 samples, 0.02%)</title><rect x="127.3" y="4725" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="130.34" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (14 samples, 0.17%)</title><rect x="977.5" y="3317" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="980.50" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.string/replace (30 samples, 0.37%)</title><rect x="728.4" y="4389" width="4.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="731.42" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="887.2" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="890.23" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PooledUnsafeDirectByteBuf.newInstance (2 samples, 0.02%)</title><rect x="513.9" y="4757" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="516.90" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="864.8" y="3525" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="867.77" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (11 samples, 0.13%)</title><rect x="1007.3" y="2789" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1010.30" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred/fn--11768/fn--11769 (6 samples, 0.07%)</title><rect x="368.1" y="4949" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="371.06" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$BmpCharProperty.match (3 samples, 0.04%)</title><rect x="310.3" y="4389" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="313.33" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="987.7" y="2661" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="2671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (5 samples, 0.06%)</title><rect x="841.3" y="3813" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="844.30" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (279 samples, 3.40%)</title><rect x="748.1" y="4565" width="40.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.15" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>RegionNode::Ideal(PhaseGVN*, bool) (2 samples, 0.02%)</title><rect x="1171.3" y="4837" width="0.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text text-anchor="" x="1174.28" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method.&lt;init&gt; (3 samples, 0.04%)</title><rect x="129.2" y="4581" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="132.21" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="984.3" y="2981" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="987.26" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="863.5" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="866.47" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="939.8" y="3653" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>NonSafepointEmitter::emit_non_safepoint() (2 samples, 0.02%)</title><rect x="1108.8" y="4837" width="0.3" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text text-anchor="" x="1111.80" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (5 samples, 0.06%)</title><rect x="172.7" y="3829" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText (4 samples, 0.05%)</title><rect x="95.2" y="4437" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="98.23" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (7 samples, 0.09%)</title><rect x="1002.5" y="2741" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1005.55" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="822.0" y="4037" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$ArrayNode.find (2 samples, 0.02%)</title><rect x="322.7" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="325.71" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="1008.9" y="2677" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (6 samples, 0.07%)</title><rect x="990.3" y="3125" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="993.31" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (3 samples, 0.04%)</title><rect x="316.5" y="4501" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="319.52" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (3 samples, 0.04%)</title><rect x="1022.7" y="3861" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1025.70" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="917.9" y="3317" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="920.89" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="902.1" y="3797" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="905.05" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (30 samples, 0.37%)</title><rect x="876.1" y="3973" width="4.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="879.14" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="989.4" y="3061" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="992.45" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="1010.8" y="2341" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/total-success? (2 samples, 0.02%)</title><rect x="330.9" y="4565" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="333.92" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="1015.5" y="1989" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.51" y="1999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="968.4" y="3397" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="971.43" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="755.9" y="3125" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.92" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="842.0" y="3765" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.02" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="836.5" y="3701" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="839.55" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWSOrEnd (2 samples, 0.02%)</title><rect x="104.7" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="107.73" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="903.1" y="3509" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="906.06" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::do_call() (5 samples, 0.06%)</title><rect x="1173.2" y="4581" width="0.7" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text text-anchor="" x="1176.16" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="871.5" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.53" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="774.6" y="3669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (19 samples, 0.23%)</title><rect x="766.9" y="4053" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="769.86" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="988.9" y="3141" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.ChannelOutboundHandlerAdapter.flush (85 samples, 1.04%)</title><rect x="680.2" y="4709" width="12.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.19" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (7 samples, 0.09%)</title><rect x="838.6" y="3781" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="841.56" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="822.0" y="3829" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ParkCommon(ParkEvent*, long) (4 samples, 0.05%)</title><rect x="1058.3" y="4917" width="0.5" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text text-anchor="" x="1061.27" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="937.2" y="3157" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="940.18" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="962.2" y="3077" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="965.24" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.assoc (2 samples, 0.02%)</title><rect x="74.6" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="77.64" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (3 samples, 0.04%)</title><rect x="918.0" y="3189" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="921.04" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>StatSampler::collect_sample() (4 samples, 0.05%)</title><rect x="1184.2" y="4949" width="0.6" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text text-anchor="" x="1187.24" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="996.9" y="2741" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.93" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (7 samples, 0.09%)</title><rect x="1012.8" y="2453" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.77" y="2463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (77 samples, 0.94%)</title><rect x="810.1" y="4229" width="11.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="813.06" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (112 samples, 1.37%)</title><rect x="748.9" y="3925" width="16.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.87" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (5 samples, 0.06%)</title><rect x="1006.1" y="2629" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (149 samples, 1.82%)</title><rect x="999.8" y="3221" width="21.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1002.81" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="959.2" y="3333" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.21" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="886.4" y="3765" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="889.36" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="754.3" y="2997" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (3 samples, 0.04%)</title><rect x="174.7" y="4101" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="177.70" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (581 samples, 7.09%)</title><rect x="940.8" y="4037" width="83.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="943.78" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="861.6" y="3845" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="864.60" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.success (40 samples, 0.49%)</title><rect x="362.3" y="4821" width="5.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="365.30" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (40 samples, 0.49%)</title><rect x="961.8" y="3653" width="5.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="964.80" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="990.3" y="3045" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="993.31" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="817.4" y="3749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.40" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOfObject (2 samples, 0.02%)</title><rect x="298.5" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="301.52" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-message (48 samples, 0.59%)</title><rect x="353.1" y="4565" width="6.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="356.09" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="882.0" y="3605" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="885.04" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (112 samples, 1.37%)</title><rect x="748.9" y="3957" width="16.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.87" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="989.3" y="3109" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.30" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="1008.2" y="2453" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.16" y="2463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1004.6" y="2453" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.56" y="2463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="925.1" y="3765" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="928.09" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="814.2" y="3621" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="817.23" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (7 samples, 0.09%)</title><rect x="985.3" y="3413" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="988.27" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="994.9" y="2821" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (10 samples, 0.12%)</title><rect x="813.5" y="3989" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.InputStreamReader.read (18 samples, 0.22%)</title><rect x="81.3" y="4581" width="2.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="84.27" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (18 samples, 0.22%)</title><rect x="899.8" y="3845" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="902.75" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (17 samples, 0.21%)</title><rect x="881.5" y="3813" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="884.47" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="865.9" y="3637" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1015.6" y="1653" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.65" y="1663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="833.7" y="3957" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="836.67" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (14 samples, 0.17%)</title><rect x="944.7" y="3637" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="947.67" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (5 samples, 0.06%)</title><rect x="992.6" y="3221" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.61" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="864.3" y="3701" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="867.33" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="983.3" y="3109" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.26" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="764.3" y="3557" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.27" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.atomic.AtomicReference.get (2 samples, 0.02%)</title><rect x="1048.2" y="4965" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1051.19" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="983.7" y="2885" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.69" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="964.7" y="3365" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (12 samples, 0.15%)</title><rect x="1002.0" y="2949" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.97" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="76.2" y="4677" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="79.23" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="988.9" y="3333" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (5 samples, 0.06%)</title><rect x="320.5" y="4469" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="323.55" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="1015.9" y="2133" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.94" y="2143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="807.0" y="3877" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="810.03" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PeriodicTask::real_time_tick(int) (2 samples, 0.02%)</title><rect x="1181.9" y="4981" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text text-anchor="" x="1184.94" y="4991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="818.6" y="3909" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="821.55" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="1003.7" y="2853" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1006.70" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (16 samples, 0.20%)</title><rect x="846.9" y="4181" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="849.91" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="779.4" y="3893" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.39" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="962.1" y="3173" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (125 samples, 1.53%)</title><rect x="748.9" y="4005" width="18.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.87" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (2 samples, 0.02%)</title><rect x="1175.5" y="4821" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text text-anchor="" x="1178.46" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (28 samples, 0.34%)</title><rect x="783.3" y="4325" width="4.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.28" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (54 samples, 0.66%)</title><rect x="951.1" y="3845" width="7.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="954.15" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="919.6" y="3445" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (7 samples, 0.09%)</title><rect x="984.0" y="3125" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (4 samples, 0.05%)</title><rect x="922.4" y="3797" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="925.35" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.longCast (2 samples, 0.02%)</title><rect x="805.7" y="3717" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="808.74" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PooledByteBuf.retainedSlice (2 samples, 0.02%)</title><rect x="474.6" y="4645" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.60" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (8 samples, 0.10%)</title><rect x="862.8" y="3717" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="865.75" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__gettimeofday (2 samples, 0.02%)</title><rect x="1186.3" y="4901" width="0.2" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text text-anchor="" x="1189.26" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue$TransferStack.transfer (4 samples, 0.05%)</title><rect x="371.2" y="4805" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="374.23" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="915.9" y="3493" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="918.88" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (2 samples, 0.02%)</title><rect x="208.8" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.83" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="996.2" y="2965" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.21" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/conj--5407 (3 samples, 0.04%)</title><rect x="210.0" y="4517" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="212.98" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="863.0" y="3621" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="866.04" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-message (2 samples, 0.02%)</title><rect x="72.3" y="5029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="75.34" y="5039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (7 samples, 0.09%)</title><rect x="824.9" y="4165" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="827.89" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="759.2" y="3429" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.23" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (51 samples, 0.62%)</title><rect x="172.7" y="4485" width="7.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (8 samples, 0.10%)</title><rect x="884.6" y="3701" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="887.63" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="760.4" y="2917" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.39" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="985.4" y="3045" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="988.41" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="933.0" y="3349" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="936.01" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/node-get (18 samples, 0.22%)</title><rect x="350.5" y="4565" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="353.50" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JVM_Sleep (2 samples, 0.02%)</title><rect x="10.0" y="5013" width="0.3" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (10 samples, 0.12%)</title><rect x="877.0" y="3653" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="880.00" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (23 samples, 0.28%)</title><rect x="131.1" y="4661" width="3.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="134.08" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="949.7" y="3493" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="952.71" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="976.9" y="3125" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="979.92" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseChaitin::Register_Allocate() (71 samples, 0.87%)</title><rect x="1112.7" y="4869" width="10.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text text-anchor="" x="1115.69" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (12 samples, 0.15%)</title><rect x="1004.1" y="2789" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.13" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="759.8" y="3461" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.81" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ConnectionGraph::add_base(FieldNode*, PointsToNode*) (2 samples, 0.02%)</title><rect x="1123.2" y="4805" width="0.3" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text text-anchor="" x="1126.20" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="814.2" y="3749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="817.23" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (34 samples, 0.41%)</title><rect x="969.9" y="3557" width="4.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (18 samples, 0.22%)</title><rect x="919.5" y="3701" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="922.48" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (19 samples, 0.23%)</title><rect x="989.9" y="3237" width="2.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="992.88" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="822.7" y="4213" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="837.0" y="3941" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="839.98" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="843.6" y="3445" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="846.60" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (67 samples, 0.82%)</title><rect x="725.5" y="4485" width="9.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="728.54" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyResponse.assoc (5 samples, 0.06%)</title><rect x="481.4" y="4389" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="484.37" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (3 samples, 0.04%)</title><rect x="349.6" y="4533" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="352.63" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="929.6" y="3333" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="932.55" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="973.9" y="3189" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="976.90" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="749.3" y="1045" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (14 samples, 0.17%)</title><rect x="904.6" y="3701" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.65" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="999.5" y="2917" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.52" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="936.0" y="3237" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="939.03" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Long.toString (2 samples, 0.02%)</title><rect x="127.8" y="4645" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="130.77" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Branch.match (5 samples, 0.06%)</title><rect x="795.2" y="4309" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="798.23" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (30 samples, 0.37%)</title><rect x="876.1" y="3989" width="4.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="879.14" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (8 samples, 0.10%)</title><rect x="749.2" y="1941" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="1951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="749.3" y="37" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (4 samples, 0.05%)</title><rect x="771.5" y="3765" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="774.47" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.equiv (2 samples, 0.02%)</title><rect x="277.9" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="280.93" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (5 samples, 0.06%)</title><rect x="813.5" y="3781" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="807.6" y="3829" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="810.61" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOfObject (2 samples, 0.02%)</title><rect x="287.6" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="290.58" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (2 samples, 0.02%)</title><rect x="181.9" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="184.90" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="749.3" y="357" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (19 samples, 0.23%)</title><rect x="989.9" y="3173" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.88" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="950.1" y="3573" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="953.14" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (7 samples, 0.09%)</title><rect x="985.3" y="3365" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="988.27" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (11 samples, 0.13%)</title><rect x="495.0" y="4517" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="498.04" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="913.0" y="3461" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="916.00" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/merge (11 samples, 0.13%)</title><rect x="733.6" y="4405" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="736.61" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (8 samples, 0.10%)</title><rect x="762.7" y="3653" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.69" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (12 samples, 0.15%)</title><rect x="970.2" y="3365" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="973.15" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="1006.1" y="2837" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (5 samples, 0.06%)</title><rect x="926.1" y="3717" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="929.10" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (52 samples, 0.63%)</title><rect x="749.0" y="3509" width="7.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.DelegatingMethodAccessorImpl (2 samples, 0.02%)</title><rect x="833.8" y="3557" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="836.81" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="824.6" y="4149" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="827.60" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="979.8" y="3093" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1006.4" y="2277" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.43" y="2287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.gt (2 samples, 0.02%)</title><rect x="913.4" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="916.43" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="785.7" y="4053" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.72" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="873.0" y="3845" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.97" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="860.7" y="3669" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="863.73" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (3 samples, 0.04%)</title><rect x="941.1" y="3957" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="944.07" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeWrite (7 samples, 0.09%)</title><rect x="676.4" y="4629" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="679.45" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (75 samples, 0.92%)</title><rect x="482.7" y="4277" width="10.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="485.66" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (36 samples, 0.44%)</title><rect x="828.3" y="4037" width="5.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="831.34" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>CallGenerator::for_inline(ciMethod*, float) (2 samples, 0.02%)</title><rect x="1106.6" y="4885" width="0.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text text-anchor="" x="1109.64" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (2 samples, 0.02%)</title><rect x="343.6" y="4309" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="346.58" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="865.2" y="3797" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="749.3" y="85" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="848.1" y="3845" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.06" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="917.9" y="3413" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="920.89" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="993.8" y="2933" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.77" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (7 samples, 0.09%)</title><rect x="985.3" y="3429" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="988.27" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="854.1" y="3781" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="857.11" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$ArrayNode.assoc (2 samples, 0.02%)</title><rect x="298.8" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="301.81" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (5 samples, 0.06%)</title><rect x="1010.0" y="2613" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1013.03" y="2623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.append (35 samples, 0.43%)</title><rect x="220.2" y="4501" width="5.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="223.20" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="882.3" y="3445" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="885.33" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection (22 samples, 0.27%)</title><rect x="474.5" y="4709" width="3.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.46" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="979.8" y="3285" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="863.0" y="3653" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="866.04" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (6 samples, 0.07%)</title><rect x="760.2" y="3413" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (5 samples, 0.06%)</title><rect x="928.0" y="3797" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="930.97" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (3 samples, 0.04%)</title><rect x="287.9" y="4501" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="290.87" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (5 samples, 0.06%)</title><rect x="1010.8" y="2613" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="913.0" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="916.00" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="997.8" y="2773" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.internal.InternalThreadLocalMap.get (2 samples, 0.02%)</title><rect x="513.9" y="4693" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="516.90" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="995.6" y="2581" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::PlatformEvent::park(long) (24 samples, 0.29%)</title><rect x="1186.3" y="4917" width="3.4" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text text-anchor="" x="1189.26" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="815.4" y="3685" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="818.38" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (7 samples, 0.09%)</title><rect x="912.3" y="3589" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="915.28" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (2 samples, 0.02%)</title><rect x="180.6" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="183.61" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="993.0" y="3029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.05" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__psynch_mutexwait (34 samples, 0.41%)</title><rect x="464.1" y="4821" width="4.9" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text text-anchor="" x="467.09" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (3 samples, 0.04%)</title><rect x="887.9" y="3653" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="890.95" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="825.2" y="4069" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="828.17" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="979.8" y="2965" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="916.7" y="3557" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="919.74" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (15 samples, 0.18%)</title><rect x="810.9" y="3973" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="813.92" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="953.2" y="3461" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.16" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.StreamDecoder.&lt;init&gt; (4 samples, 0.05%)</title><rect x="80.0" y="4565" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="82.97" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (8 samples, 0.10%)</title><rect x="1011.5" y="2421" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (6 samples, 0.07%)</title><rect x="816.4" y="3973" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="819.39" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (15 samples, 0.18%)</title><rect x="983.0" y="3301" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="985.97" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="903.8" y="3381" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="906.78" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (7 samples, 0.09%)</title><rect x="984.0" y="3157" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (5 samples, 0.06%)</title><rect x="775.5" y="3909" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.50" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-result (4 samples, 0.05%)</title><rect x="49.0" y="5013" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="52.02" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (4 samples, 0.05%)</title><rect x="172.7" y="3669" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$7.isSatisfiedBy (11 samples, 0.13%)</title><rect x="730.3" y="4165" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="733.30" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (13 samples, 0.16%)</title><rect x="842.3" y="3941" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.31" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.BufferedStream.close (4 samples, 0.05%)</title><rect x="510.9" y="4533" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="513.88" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (10 samples, 0.12%)</title><rect x="749.2" y="2213" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.invoke (5 samples, 0.06%)</title><rect x="287.6" y="4533" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="290.58" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (5 samples, 0.06%)</title><rect x="822.0" y="4245" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (19 samples, 0.23%)</title><rect x="976.8" y="3381" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.78" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.DefaultChannelPipeline$HeadContext.readIfIsAutoRead (7 samples, 0.09%)</title><rect x="512.8" y="4805" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="515.75" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="749.3" y="1589" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.aleph.dirigiste.Executor.execute (35 samples, 0.43%)</title><rect x="500.2" y="4485" width="5.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="503.23" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (3 samples, 0.04%)</title><rect x="299.7" y="4421" width="0.4" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text text-anchor="" x="302.67" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="939.8" y="3525" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="880.5" y="3893" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (7 samples, 0.09%)</title><rect x="953.5" y="3381" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.45" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (14 samples, 0.17%)</title><rect x="749.2" y="2517" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand-int (2 samples, 0.02%)</title><rect x="1027.9" y="4373" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1030.89" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (12 samples, 0.15%)</title><rect x="756.8" y="3509" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.nio.NioEventLoop.select (991 samples, 12.09%)</title><rect x="528.6" y="4933" width="142.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="531.59" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io.netty.channel.n..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.NativeThread.current (3 samples, 0.04%)</title><rect x="691.6" y="4533" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="694.57" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="806.9" y="3909" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="809.89" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (2 samples, 0.02%)</title><rect x="901.8" y="3493" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="904.77" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="749.3" y="1013" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (5 samples, 0.06%)</title><rect x="898.6" y="3749" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="901.60" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/to-array (2 samples, 0.02%)</title><rect x="789.8" y="4581" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="792.76" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.text.DecimalFormatSymbols.initialize (4 samples, 0.05%)</title><rect x="738.2" y="4485" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="741.21" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.createNode (2 samples, 0.02%)</title><rect x="68.9" y="4949" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="71.88" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/zip'/fn--12038 (65 samples, 0.79%)</title><rect x="483.2" y="4005" width="9.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="486.24" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="869.9" y="3893" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.95" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="1015.5" y="2005" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.51" y="2015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="880.5" y="3845" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/conj--5407 (9 samples, 0.11%)</title><rect x="733.6" y="4357" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="736.61" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (2 samples, 0.02%)</title><rect x="209.1" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="212.11" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (33 samples, 0.40%)</title><rect x="749.2" y="3157" width="4.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOfRange (2 samples, 0.02%)</title><rect x="116.7" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="119.68" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (12 samples, 0.15%)</title><rect x="756.8" y="3525" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="991.5" y="2613" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.46" y="2623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="871.1" y="3877" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="874.10" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.invoke (2 samples, 0.02%)</title><rect x="207.7" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="210.67" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (6 samples, 0.07%)</title><rect x="856.4" y="4005" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="859.42" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="841.3" y="3765" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="844.30" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (10 samples, 0.12%)</title><rect x="981.2" y="3237" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="984.24" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="869.4" y="3845" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.37" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="847.2" y="3925" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="850.20" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (7 samples, 0.09%)</title><rect x="775.5" y="3989" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.50" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="905.4" y="3381" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="908.37" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (1,248 samples, 15.23%)</title><rect x="849.4" y="4437" width="179.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="852.36" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.core/reduce</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (3 samples, 0.04%)</title><rect x="208.3" y="4485" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.25" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="992.2" y="2757" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.18" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (17 samples, 0.21%)</title><rect x="996.8" y="3125" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.79" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="919.6" y="3253" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.gt (2 samples, 0.02%)</title><rect x="815.4" y="3637" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="818.38" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="915.2" y="3477" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="918.16" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (11 samples, 0.13%)</title><rect x="783.3" y="4197" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.28" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.nio.Buffer.&lt;init&gt; (2 samples, 0.02%)</title><rect x="507.3" y="4229" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="510.28" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream/map (6 samples, 0.07%)</title><rect x="478.9" y="4357" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="481.92" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="1009.5" y="2453" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.46" y="2463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (5 samples, 0.06%)</title><rect x="926.1" y="3701" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="929.10" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="997.8" y="2677" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="992.2" y="2837" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.18" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.cons (3 samples, 0.04%)</title><rect x="69.9" y="5013" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="72.89" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (9 samples, 0.11%)</title><rect x="932.6" y="3525" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="935.58" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (7 samples, 0.09%)</title><rect x="838.6" y="3765" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="841.56" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="764.3" y="3605" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.27" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (24 samples, 0.29%)</title><rect x="1016.4" y="2085" width="3.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.37" y="2095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream/map/fn--13145 (2 samples, 0.02%)</title><rect x="479.4" y="4197" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="482.35" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="806.9" y="3973" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="809.89" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="939.8" y="3445" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="856.4" y="4037" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="859.42" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="883.3" y="3637" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="886.34" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead (20 samples, 0.24%)</title><rect x="477.6" y="4629" width="2.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="480.62" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (7 samples, 0.09%)</title><rect x="824.9" y="4197" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="827.89" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (6 samples, 0.07%)</title><rect x="957.2" y="3285" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="960.20" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (10 samples, 0.12%)</title><rect x="749.2" y="2181" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll.Segment.charAt (85 samples, 1.04%)</title><rect x="242.4" y="4453" width="12.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="245.37" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="843.3" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.31" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (26 samples, 0.32%)</title><rect x="889.8" y="4101" width="3.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.82" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (75 samples, 0.92%)</title><rect x="482.7" y="4373" width="10.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="485.66" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="967.0" y="3317" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="969.99" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="1013.9" y="2005" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1016.92" y="2015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/assoc--5433 (31 samples, 0.38%)</title><rect x="316.9" y="4501" width="4.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="319.95" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (17 samples, 0.21%)</title><rect x="928.8" y="3573" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="931.83" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.UTF_8$Decoder.decodeLoop (8 samples, 0.10%)</title><rect x="81.4" y="4517" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="84.41" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (5 samples, 0.06%)</title><rect x="174.7" y="4165" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="177.70" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (4 samples, 0.05%)</title><rect x="767.7" y="3813" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.73" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.DelegatingMethodAccessorImpl (3 samples, 0.04%)</title><rect x="942.5" y="3397" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="945.51" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.swap (11 samples, 0.13%)</title><rect x="347.8" y="4549" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="350.76" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (16 samples, 0.20%)</title><rect x="911.7" y="3717" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="914.70" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (24 samples, 0.29%)</title><rect x="1016.4" y="2133" width="3.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.37" y="2143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (3 samples, 0.04%)</title><rect x="981.2" y="3029" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="984.24" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.pcequiv (2 samples, 0.02%)</title><rect x="298.5" y="4389" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="301.52" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.toString (2 samples, 0.02%)</title><rect x="308.3" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="311.31" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (3 samples, 0.04%)</title><rect x="289.0" y="4565" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="292.02" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="976.3" y="3189" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.34" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue$TransferStack.transfer (6 samples, 0.07%)</title><rect x="382.5" y="4693" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="385.46" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (494 samples, 6.03%)</title><rect x="1106.6" y="4933" width="71.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text text-anchor="" x="1109.64" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >CompileB..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="906.7" y="3733" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="909.66" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (3 samples, 0.04%)</title><rect x="852.0" y="3845" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="854.95" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="966.1" y="3205" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="969.12" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/swap! (2 samples, 0.02%)</title><rect x="209.5" y="4549" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="212.55" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (12 samples, 0.15%)</title><rect x="852.4" y="3765" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="855.38" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="1011.5" y="2021" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="964.7" y="3125" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (52 samples, 0.63%)</title><rect x="749.0" y="3493" width="7.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (12 samples, 0.15%)</title><rect x="765.0" y="3877" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.nio.NioEventLoop.run (1,587 samples, 19.36%)</title><rect x="471.6" y="4949" width="228.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="474.58" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io.netty.channel.nio.NioEventL..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="929.6" y="3365" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="932.55" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="848.1" y="3781" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.06" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (5 samples, 0.06%)</title><rect x="955.6" y="3317" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="958.61" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (6 samples, 0.07%)</title><rect x="988.9" y="3285" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="494.3" y="4581" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="497.32" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (9 samples, 0.11%)</title><rect x="872.0" y="4005" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.96" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util$4.equiv (2 samples, 0.02%)</title><rect x="69.9" y="4949" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="72.89" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="964.7" y="3077" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (93 samples, 1.13%)</title><rect x="749.0" y="3845" width="13.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.JsonReadContext.createChildObjectContext (2 samples, 0.02%)</title><rect x="121.6" y="4597" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="124.58" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (12 samples, 0.15%)</title><rect x="914.9" y="3653" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="917.87" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (2 samples, 0.02%)</title><rect x="183.8" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="186.78" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="965.4" y="3285" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="968.40" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="975.8" y="3125" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.77" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="1016.5" y="1685" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.51" y="1695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (16 samples, 0.20%)</title><rect x="938.5" y="3925" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="997.4" y="2901" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1000.36" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.ReflectionFactory.copyMethod (2 samples, 0.02%)</title><rect x="830.6" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="833.64" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="880.5" y="3925" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (26 samples, 0.32%)</title><rect x="770.3" y="4037" width="3.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.32" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="753.6" y="3061" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="756.62" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="839.3" y="3669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="842.28" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="936.0" y="3381" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="939.03" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (10 samples, 0.12%)</title><rect x="981.2" y="3125" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="984.24" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="832.8" y="3637" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="835.80" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="988.0" y="2885" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.01" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="995.6" y="2309" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PoolChunk.collapseRuns (2 samples, 0.02%)</title><rect x="509.9" y="4357" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="512.87" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (7 samples, 0.09%)</title><rect x="839.6" y="3749" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="842.57" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="993.0" y="2965" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.05" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (15 samples, 0.18%)</title><rect x="810.9" y="4005" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="813.92" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.auto_flatten_seq.AutoFlattenSeq.conj_flat (8 samples, 0.10%)</title><rect x="331.3" y="4549" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="334.35" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="892.6" y="3829" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="895.55" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (4 samples, 0.05%)</title><rect x="779.1" y="3989" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="956.5" y="3237" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="959.48" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred/fn--11768 (75 samples, 0.92%)</title><rect x="482.7" y="4421" width="10.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="485.66" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.equal (2 samples, 0.02%)</title><rect x="326.6" y="4389" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="329.60" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (16 samples, 0.20%)</title><rect x="899.8" y="3701" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="902.75" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1010.3" y="2261" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.32" y="2271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (79 samples, 0.96%)</title><rect x="857.3" y="4101" width="11.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="860.28" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (6 samples, 0.07%)</title><rect x="985.4" y="3301" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="988.41" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::enable_wx_from_write(WXMode) (2 samples, 0.02%)</title><rect x="491.9" y="3717" width="0.3" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text text-anchor="" x="494.88" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (15 samples, 0.18%)</title><rect x="834.8" y="3941" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="837.82" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.multiply (2 samples, 0.02%)</title><rect x="896.0" y="3669" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="899.01" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyRequest.assoc (5 samples, 0.06%)</title><rect x="74.5" y="4629" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="77.50" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (4 samples, 0.05%)</title><rect x="172.7" y="3701" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>byte_streams$eval15443$f__15332__auto____15444$this__12089__auto____15447.invoke (4 samples, 0.05%)</title><rect x="368.2" y="4853" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="371.20" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOfObject (3 samples, 0.04%)</title><rect x="208.3" y="4469" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.25" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.&lt;init&gt; (2 samples, 0.02%)</title><rect x="285.4" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="288.42" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (7 samples, 0.09%)</title><rect x="922.9" y="3685" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="1005.9" y="2965" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1008.86" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="1000.4" y="2853" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1003.39" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="903.8" y="3365" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="906.78" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="773.6" y="3957" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="776.63" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1003.0" y="2613" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1005.98" y="2623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="979.7" y="3493" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="982.66" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::enable_wx_from_exec(WXMode) (3 samples, 0.04%)</title><rect x="469.8" y="4837" width="0.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text text-anchor="" x="472.85" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/persistent! (2 samples, 0.02%)</title><rect x="111.1" y="4565" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="114.07" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1007.9" y="2421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1010.87" y="2431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers$LongOps.add (2 samples, 0.02%)</title><rect x="1029.6" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1032.61" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (10 samples, 0.12%)</title><rect x="797.2" y="4581" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="800.24" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (53 samples, 0.65%)</title><rect x="951.3" y="3653" width="7.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="954.29" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="847.2" y="3829" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="850.20" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.hasheq (2 samples, 0.02%)</title><rect x="320.8" y="4357" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="323.84" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (28 samples, 0.34%)</title><rect x="783.3" y="4357" width="4.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.28" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.grow (37 samples, 0.45%)</title><rect x="158.6" y="4581" width="5.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="161.58" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeMatchingMethod (2 samples, 0.02%)</title><rect x="878.0" y="3493" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="881.01" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="974.8" y="3413" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (2 samples, 0.02%)</title><rect x="287.6" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="290.58" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOfObject (4 samples, 0.05%)</title><rect x="322.1" y="4485" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="325.13" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="869.8" y="4037" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.80" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="755.1" y="3301" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.06" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="837.3" y="3877" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="840.27" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="846.3" y="3845" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="849.34" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="977.6" y="3237" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="980.64" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="848.5" y="3797" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="851.50" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1014.2" y="1909" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1017.21" y="1919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="757.4" y="3253" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.36" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/persistent! (2 samples, 0.02%)</title><rect x="107.6" y="4549" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="110.61" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::do_all_blocks() (2 samples, 0.02%)</title><rect x="1173.6" y="4533" width="0.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text text-anchor="" x="1176.59" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter.&lt;init&gt; (5 samples, 0.06%)</title><rect x="738.2" y="4581" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="741.21" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (11 samples, 0.13%)</title><rect x="917.7" y="3621" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="920.75" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureCapacityInternal (2 samples, 0.02%)</title><rect x="839.3" y="3477" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="842.28" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (8 samples, 0.10%)</title><rect x="1011.5" y="2373" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="1004.9" y="2453" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.85" y="2463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="290.9" y="4549" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="293.89" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="945.1" y="3285" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="948.10" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (1,616 samples, 19.72%)</title><rect x="800.4" y="4581" width="232.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="803.41" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.lang.LongRange.reduce</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="933.6" y="3397" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="936.58" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (5 samples, 0.06%)</title><rect x="835.3" y="3813" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="838.25" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="916.6" y="3733" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="919.60" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (5 samples, 0.06%)</title><rect x="878.6" y="3653" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="881.59" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="953.7" y="3189" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry.recycle (2 samples, 0.02%)</title><rect x="514.2" y="4693" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="517.19" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.locks.LockSupport.unpark (16 samples, 0.20%)</title><rect x="368.9" y="4821" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="371.92" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (12 samples, 0.15%)</title><rect x="914.9" y="3605" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="917.87" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (5 samples, 0.06%)</title><rect x="784.9" y="4149" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="787.86" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JVM_IHashCode (3 samples, 0.04%)</title><rect x="330.2" y="4421" width="0.4" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text text-anchor="" x="333.20" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyRequest.valAt (2 samples, 0.02%)</title><rect x="73.6" y="4757" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="76.64" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.auto_flatten_seq.AutoFlattenSeq.conj_flat (58 samples, 0.71%)</title><rect x="211.7" y="4533" width="8.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="214.71" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (5 samples, 0.06%)</title><rect x="172.7" y="3845" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/catch'/fn--12016 (4 samples, 0.05%)</title><rect x="371.2" y="4901" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="374.23" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PoolArena.tcacheAllocateSmall (3 samples, 0.04%)</title><rect x="694.6" y="4597" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="697.59" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (7 samples, 0.09%)</title><rect x="953.5" y="3509" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.45" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/safe-with-meta (3 samples, 0.04%)</title><rect x="304.7" y="4533" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="307.71" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="945.1" y="3205" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="948.10" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="872.7" y="3861" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="788.5" y="4533" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="791.46" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="896.9" y="3589" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="899.87" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1005.6" y="2517" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1008.57" y="2527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="903.8" y="3397" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="906.78" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (11 samples, 0.13%)</title><rect x="785.7" y="4277" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.72" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="1012.0" y="2213" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.05" y="2223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="886.5" y="3349" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="889.51" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="902.1" y="3653" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="905.05" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (3 samples, 0.04%)</title><rect x="505.6" y="4485" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="508.55" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (15 samples, 0.18%)</title><rect x="749.2" y="2581" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (3 samples, 0.04%)</title><rect x="772.3" y="3877" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="775.34" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (5 samples, 0.06%)</title><rect x="945.1" y="3237" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="948.10" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="986.9" y="2965" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.85" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (30 samples, 0.37%)</title><rect x="876.1" y="3861" width="4.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="879.14" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (7 samples, 0.09%)</title><rect x="172.7" y="3909" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (18 samples, 0.22%)</title><rect x="870.7" y="4069" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="873.67" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (5 samples, 0.06%)</title><rect x="859.2" y="3717" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="862.15" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (31 samples, 0.38%)</title><rect x="172.7" y="4341" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (67 samples, 0.82%)</title><rect x="749.0" y="3637" width="9.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="962.2" y="3093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="965.24" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (7 samples, 0.09%)</title><rect x="282.8" y="4453" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="285.83" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannel$AbstractUnsafe.flush (84 samples, 1.02%)</title><rect x="680.2" y="4613" width="12.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.19" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (54 samples, 0.66%)</title><rect x="899.3" y="3893" width="7.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="902.32" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="1015.5" y="2053" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.51" y="2063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="749.3" y="453" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (7 samples, 0.09%)</title><rect x="809.0" y="4069" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="812.05" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="880.5" y="3749" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (4 samples, 0.05%)</title><rect x="749.3" y="1365" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1016.7" y="1573" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.66" y="1583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (10 samples, 0.12%)</title><rect x="776.7" y="4069" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="779.65" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="997.8" y="2821" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (18 samples, 0.22%)</title><rect x="766.9" y="3957" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="769.86" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.KQueueSelectorImpl.updateSelectedKeys (3 samples, 0.04%)</title><rect x="670.8" y="4837" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="673.83" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.pcequiv (2 samples, 0.02%)</title><rect x="322.3" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="325.28" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="946.0" y="3365" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="948.97" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="841.3" y="3781" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="844.30" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="920.1" y="3461" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="923.05" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="832.2" y="3653" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="835.23" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="996.9" y="2917" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.93" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (11 samples, 0.13%)</title><rect x="922.9" y="3861" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$ArrayNode.find (2 samples, 0.02%)</title><rect x="296.4" y="4469" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="299.36" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="749.3" y="293" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="939.5" y="3621" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.49" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName (6 samples, 0.07%)</title><rect x="101.9" y="4485" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="104.85" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="1014.6" y="2293" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1017.64" y="2303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="916.6" y="3749" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="919.60" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="832.8" y="3685" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="835.80" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="833.5" y="4005" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="836.52" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (18 samples, 0.22%)</title><rect x="919.5" y="3717" width="2.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="922.48" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (19 samples, 0.23%)</title><rect x="976.8" y="3349" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.78" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (3 samples, 0.04%)</title><rect x="912.6" y="3333" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="915.56" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rest--5405 (3 samples, 0.04%)</title><rect x="494.6" y="4597" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="497.61" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="977.2" y="3269" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="980.21" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.DefaultChannelPipeline.fireChannelRead (263 samples, 3.21%)</title><rect x="474.5" y="4869" width="37.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.46" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="776.8" y="3845" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="779.80" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1008.2" y="2373" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.16" y="2383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="866.3" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="869.35" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyRequest.assoc_STAR_ (6 samples, 0.07%)</title><rect x="499.4" y="4421" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="502.36" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="125.3" y="4565" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="128.32" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.aleph.dirigiste.Executor.execute (4 samples, 0.05%)</title><rect x="371.2" y="4837" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="374.23" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Double.&lt;init&gt; (2 samples, 0.02%)</title><rect x="1021.4" y="3493" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1024.41" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="842.0" y="3861" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="845.02" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (10 samples, 0.12%)</title><rect x="779.1" y="4037" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (8 samples, 0.10%)</title><rect x="1018.5" y="1573" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.53" y="1583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Listener.onSuccess (65 samples, 0.79%)</title><rect x="483.2" y="4021" width="9.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="486.24" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="1007.9" y="2373" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.87" y="2383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue$TransferStack$SNode.tryMatch (4 samples, 0.05%)</title><rect x="371.2" y="4789" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="374.23" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (44 samples, 0.54%)</title><rect x="172.7" y="4437" width="6.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="976.9" y="3285" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.92" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (7 samples, 0.09%)</title><rect x="998.2" y="2869" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1001.23" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="865.2" y="3541" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="991.2" y="2949" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.17" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="990.7" y="2869" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="993.74" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (3 samples, 0.04%)</title><rect x="211.1" y="4469" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="214.13" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="984.3" y="2965" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="987.26" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (9 samples, 0.11%)</title><rect x="987.6" y="3237" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.57" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="959.9" y="3349" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.93" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="913.0" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="916.00" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (10 samples, 0.12%)</title><rect x="947.4" y="3509" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.41" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="959.1" y="3621" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.07" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.formatTo (2 samples, 0.02%)</title><rect x="969.9" y="3365" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (8 samples, 0.10%)</title><rect x="172.7" y="3941" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (6 samples, 0.07%)</title><rect x="959.9" y="3557" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.93" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="898.7" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="901.74" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (11 samples, 0.13%)</title><rect x="939.2" y="3781" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="942.20" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="1005.4" y="2565" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1008.43" y="2575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (16 samples, 0.20%)</title><rect x="907.7" y="4037" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="910.67" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (5 samples, 0.06%)</title><rect x="785.7" y="4149" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.72" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState) (4 samples, 0.05%)</title><rect x="1176.9" y="4853" width="0.6" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text text-anchor="" x="1179.90" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$7.isSatisfiedBy (10 samples, 0.12%)</title><rect x="730.4" y="4101" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="733.44" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="938.5" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (2 samples, 0.02%)</title><rect x="69.9" y="4997" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="72.89" y="5007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="779.7" y="3877" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.68" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (16 samples, 0.20%)</title><rect x="907.7" y="4069" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="910.67" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="1016.5" y="1733" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.51" y="1743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="905.4" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="908.37" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="962.1" y="3365" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="1015.2" y="2005" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.22" y="2015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="854.1" y="3685" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="857.11" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (8 samples, 0.10%)</title><rect x="749.2" y="1973" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="1983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="919.6" y="3237" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (6 samples, 0.07%)</title><rect x="968.4" y="3525" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.43" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.text.DecimalFormatSymbols.getInstance (2 samples, 0.02%)</title><rect x="790.0" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="793.04" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1015.2" y="1909" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.22" y="1919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="994.2" y="2805" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="997.20" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="861.6" y="3765" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="864.60" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$7.isSatisfiedBy (13 samples, 0.16%)</title><rect x="730.0" y="4181" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="733.01" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="946.3" y="3333" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="993.0" y="3093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.05" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter$FixedString.print (2 samples, 0.02%)</title><rect x="738.9" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="741.93" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (11 samples, 0.13%)</title><rect x="1007.3" y="2805" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.30" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.DelegatingMethodAccessorImpl (2 samples, 0.02%)</title><rect x="876.6" y="3717" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="879.57" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.append (2 samples, 0.02%)</title><rect x="84.1" y="4613" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="87.15" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (6 samples, 0.07%)</title><rect x="967.6" y="3541" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (10 samples, 0.12%)</title><rect x="749.2" y="2165" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="995.6" y="2453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$GroupHead.match (5 samples, 0.06%)</title><rect x="795.2" y="4293" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="798.23" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="977.6" y="3109" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="980.64" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (11 samples, 0.13%)</title><rect x="944.7" y="3445" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="947.67" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (9 samples, 0.11%)</title><rect x="932.6" y="3541" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="935.58" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::do_all_blocks() (6 samples, 0.07%)</title><rect x="1173.2" y="4613" width="0.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text text-anchor="" x="1176.16" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.DefaultChannelPipeline$HeadContext.handler (2 samples, 0.02%)</title><rect x="474.0" y="4837" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.02" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeMatchingMethod (9 samples, 0.11%)</title><rect x="798.7" y="4581" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="801.68" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (244 samples, 2.98%)</title><rect x="986.3" y="3541" width="35.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="989.28" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >cl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce1 (10 samples, 0.12%)</title><rect x="74.5" y="4741" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="77.50" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (17 samples, 0.21%)</title><rect x="928.8" y="3653" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="931.83" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (3 samples, 0.04%)</title><rect x="1022.7" y="3893" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1025.70" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_jit_write_protect_np (2 samples, 0.02%)</title><rect x="323.6" y="4389" width="0.3" height="15.0" fill="rgb(241,109,109)" rx="2" ry="2" />
<text text-anchor="" x="326.57" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="817.4" y="3701" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.40" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>nrepl.middleware.session/session-exec/main-loop--5243 (2,321 samples, 28.32%)</title><rect x="700.2" y="4997" width="334.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="703.20" y="5007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >nrepl.middleware.session/session-exec/main-lo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (27 samples, 0.33%)</title><rect x="1015.9" y="2213" width="3.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.94" y="2223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="749.3" y="1077" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.getMethods (2 samples, 0.02%)</title><rect x="797.5" y="4565" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="800.53" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="997.8" y="2613" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="905.8" y="3525" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="908.80" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (16 samples, 0.20%)</title><rect x="838.4" y="3909" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="841.42" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="920.8" y="3349" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.77" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="1015.6" y="1829" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.65" y="1839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="754.3" y="2853" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (16 samples, 0.20%)</title><rect x="993.6" y="3285" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.62" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/listener-exists? (4 samples, 0.05%)</title><rect x="277.9" y="4549" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="280.93" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>kevent (568 samples, 6.93%)</title><rect x="529.5" y="4821" width="81.7" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text text-anchor="" x="532.45" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >kevent</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1015.2" y="1973" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.22" y="1983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_jit_write_protect_np (2 samples, 0.02%)</title><rect x="1034.1" y="4613" width="0.3" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text text-anchor="" x="1037.08" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (54 samples, 0.66%)</title><rect x="941.6" y="3861" width="7.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="944.65" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="1015.9" y="1973" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.94" y="1983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (4 samples, 0.05%)</title><rect x="749.3" y="1461" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="979.8" y="3237" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.gt (2 samples, 0.02%)</title><rect x="857.6" y="4037" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="860.57" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.net.URLStreamHandler.parseURL (2 samples, 0.02%)</title><rect x="716.5" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="719.47" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOfObject (3 samples, 0.04%)</title><rect x="339.8" y="4437" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="342.84" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="754.3" y="2869" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.graph/async-connect/this--12426 (2 samples, 0.02%)</title><rect x="479.4" y="4261" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="482.35" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="963.8" y="2981" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="966.82" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (12 samples, 0.15%)</title><rect x="981.2" y="3301" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="984.24" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="959.1" y="3445" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.07" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken (2 samples, 0.02%)</title><rect x="88.5" y="4181" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="91.47" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (10 samples, 0.12%)</title><rect x="88.5" y="4293" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="91.47" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="749.3" y="517" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (2 samples, 0.02%)</title><rect x="967.0" y="3301" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="969.99" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="946.0" y="3333" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="948.97" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="885.8" y="3717" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="888.79" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatterBuilder$NumberPrinterParser.format (2 samples, 0.02%)</title><rect x="929.1" y="3141" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="932.12" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.assoc (2 samples, 0.02%)</title><rect x="961.1" y="3781" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="964.08" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="897.3" y="3413" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="900.30" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::WXWriteFromExecSetter::WXWriteFromExecSetter() (2 samples, 0.02%)</title><rect x="504.5" y="4357" width="0.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text text-anchor="" x="507.55" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="919.6" y="3621" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (12 samples, 0.15%)</title><rect x="770.5" y="3845" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (6 samples, 0.07%)</title><rect x="864.3" y="3845" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="867.33" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="983.7" y="3013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.69" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (149 samples, 1.82%)</title><rect x="748.7" y="4149" width="21.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.72" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/into (5 samples, 0.06%)</title><rect x="331.3" y="4533" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="334.35" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (3 samples, 0.04%)</title><rect x="1022.1" y="3829" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1025.13" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="884.1" y="3685" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="887.06" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="1001.1" y="2949" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="758.7" y="3301" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="976.3" y="3301" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="979.34" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (8 samples, 0.10%)</title><rect x="978.1" y="3205" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.copyMethods (2 samples, 0.02%)</title><rect x="810.3" y="4133" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="813.34" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="987.7" y="3029" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="916.7" y="3525" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="919.74" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="983.7" y="2965" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="986.69" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.assoc (12 samples, 0.15%)</title><rect x="298.5" y="4485" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="301.52" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Slice.match (2 samples, 0.02%)</title><rect x="732.2" y="4293" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="735.17" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="822.3" y="3845" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.29" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="955.8" y="3189" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="958.76" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (6 samples, 0.07%)</title><rect x="835.3" y="3861" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="838.25" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (11 samples, 0.13%)</title><rect x="953.5" y="3525" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.45" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="861.6" y="3685" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="864.60" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1016.7" y="1589" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.66" y="1599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (8 samples, 0.10%)</title><rect x="749.2" y="1989" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="1999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (5 samples, 0.06%)</title><rect x="814.2" y="3813" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="817.23" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="972.5" y="3237" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="975.46" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.add (2 samples, 0.02%)</title><rect x="806.2" y="3717" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="809.17" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (2 samples, 0.02%)</title><rect x="178.6" y="4389" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="181.59" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (3 samples, 0.04%)</title><rect x="850.9" y="4101" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="853.94" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.createHT (2 samples, 0.02%)</title><rect x="278.5" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="281.51" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.length (2 samples, 0.02%)</title><rect x="305.6" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="308.58" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (4 samples, 0.05%)</title><rect x="776.8" y="3941" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="779.80" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.netty/bufs-&gt;array/fn--15848 (4 samples, 0.05%)</title><rect x="506.4" y="4517" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="509.42" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="865.6" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="878.6" y="3509" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="881.59" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (6 samples, 0.07%)</title><rect x="816.4" y="3909" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="819.39" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="967.3" y="3477" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="970.27" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter$FormatSpecifier.&lt;init&gt; (5 samples, 0.06%)</title><rect x="792.2" y="4517" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="795.20" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="759.8" y="3541" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.81" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (132 samples, 1.61%)</title><rect x="802.4" y="4373" width="19.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="805.43" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>CompiledIC::CompiledIC(RelocIterator*) (2 samples, 0.02%)</title><rect x="1178.9" y="4853" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text text-anchor="" x="1181.91" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (40 samples, 0.49%)</title><rect x="961.8" y="3749" width="5.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="964.80" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred/fn--11768 (39 samples, 0.48%)</title><rect x="362.3" y="4805" width="5.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="365.30" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="946.3" y="3173" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseIFG::Compute_Effective_Degree() (2 samples, 0.02%)</title><rect x="1119.9" y="4853" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text text-anchor="" x="1122.89" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1006.4" y="2341" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.43" y="2351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (4 samples, 0.05%)</title><rect x="757.9" y="3413" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.94" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="918.6" y="3333" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="921.61" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="817.0" y="3733" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="819.97" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (20 samples, 0.24%)</title><rect x="356.7" y="4533" width="2.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="359.69" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="938.5" y="3669" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="752.2" y="2805" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.18" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (2 samples, 0.02%)</title><rect x="898.0" y="3573" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="901.02" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>read (6 samples, 0.07%)</title><rect x="612.1" y="4821" width="0.9" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text text-anchor="" x="615.09" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (9 samples, 0.11%)</title><rect x="932.6" y="3605" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="935.58" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="811.4" y="3845" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="814.35" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (4 samples, 0.05%)</title><rect x="281.7" y="4501" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="284.68" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="753.9" y="3157" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="756.91" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="1016.4" y="1957" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.37" y="1967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (5 samples, 0.06%)</title><rect x="1013.8" y="2293" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1016.78" y="2303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::do_call() (16 samples, 0.20%)</title><rect x="1172.3" y="4821" width="2.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text text-anchor="" x="1175.29" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="865.9" y="3477" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>StringTable::buckets_unlink_or_oops_do(BoolObjectClosure*, OopClosure*, int, int, BasicHashtable&lt;(MemoryType)9&gt;::BucketUnlinkContext*) (7 samples, 0.09%)</title><rect x="1182.7" y="4837" width="1.0" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text text-anchor="" x="1185.66" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (2 samples, 0.02%)</title><rect x="68.9" y="4917" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="71.88" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (8 samples, 0.10%)</title><rect x="282.7" y="4469" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="285.68" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="997.8" y="2565" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="750.0" y="1797" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="753.02" y="1807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (4 samples, 0.05%)</title><rect x="186.2" y="4549" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="189.22" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="1018.7" y="1365" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/assoc--5433 (25 samples, 0.31%)</title><rect x="284.0" y="4501" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="286.98" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="824.9" y="4149" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="827.89" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (13 samples, 0.16%)</title><rect x="842.3" y="3957" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.31" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (13 samples, 0.16%)</title><rect x="88.5" y="4309" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="91.47" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="1016.9" y="1701" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="1711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="892.0" y="3701" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="894.98" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.LinkedList.peek (2 samples, 0.02%)</title><rect x="83.0" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="85.99" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="1001.1" y="2869" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (36 samples, 0.44%)</title><rect x="1014.6" y="2309" width="5.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1017.64" y="2319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="902.1" y="3669" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="905.05" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="768.4" y="3749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="771.45" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (6 samples, 0.07%)</title><rect x="1012.8" y="2389" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1015.77" y="2399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="1002.5" y="2693" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1005.55" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.cons (4 samples, 0.05%)</title><rect x="742.2" y="4549" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="745.24" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="890.0" y="3637" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.doReleaseShared (16 samples, 0.20%)</title><rect x="368.9" y="4853" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="371.92" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="759.8" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.81" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (88 samples, 1.07%)</title><rect x="187.1" y="4581" width="12.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="190.09" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (83 samples, 1.01%)</title><rect x="911.0" y="4085" width="11.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="913.98" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (30 samples, 0.37%)</title><rect x="774.2" y="4245" width="4.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.21" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (10 samples, 0.12%)</title><rect x="877.0" y="3605" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="880.00" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (10 samples, 0.12%)</title><rect x="917.7" y="3493" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="920.75" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (7 samples, 0.09%)</title><rect x="966.0" y="3253" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="968.98" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (16 samples, 0.20%)</title><rect x="846.9" y="4213" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.91" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.default.Stream.put (33 samples, 0.40%)</title><rect x="719.5" y="4389" width="4.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="722.50" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (10 samples, 0.12%)</title><rect x="783.3" y="4133" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.28" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="786.7" y="4181" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="789.73" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PSScavengeKlassClosure::do_klass(Klass*) (5 samples, 0.06%)</title><rect x="1065.5" y="4917" width="0.7" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text text-anchor="" x="1068.46" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="988.3" y="3109" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.29" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="847.2" y="3893" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="850.20" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractByteBufAllocator.directBuffer (8 samples, 0.10%)</title><rect x="513.8" y="4837" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="516.76" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.createNode (2 samples, 0.02%)</title><rect x="340.4" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="343.42" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.ZonedDateTime.create (2 samples, 0.02%)</title><rect x="969.6" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.58" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (9 samples, 0.11%)</title><rect x="1018.4" y="1605" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.38" y="1615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="991.5" y="2629" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="994.46" y="2639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="878.6" y="3461" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="881.59" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.02%)</title><rect x="1175.5" y="4773" width="0.2" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text text-anchor="" x="1178.46" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="814.2" y="3797" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="817.23" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="873.0" y="3797" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.97" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1016.7" y="1621" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.66" y="1631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (11 samples, 0.13%)</title><rect x="1004.3" y="2773" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.28" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="345.2" y="4485" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="348.17" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="1011.5" y="2197" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="943.4" y="3397" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="946.37" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-result (2 samples, 0.02%)</title><rect x="72.6" y="5029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="75.63" y="5039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.&lt;init&gt; (2 samples, 0.02%)</title><rect x="100.3" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="103.27" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (28 samples, 0.34%)</title><rect x="779.0" y="4309" width="4.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="781.96" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (103 samples, 1.26%)</title><rect x="874.8" y="4229" width="14.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="877.84" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.formatTo (3 samples, 0.04%)</title><rect x="942.5" y="3349" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="945.51" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="843.3" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.31" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (7 samples, 0.09%)</title><rect x="847.9" y="4069" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="850.92" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (8 samples, 0.10%)</title><rect x="947.6" y="3493" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.55" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1007.9" y="2277" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.87" y="2287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.ch.IOUtil.write (73 samples, 0.89%)</title><rect x="681.1" y="4533" width="10.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="684.06" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="929.0" y="3493" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="931.98" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="864.8" y="3541" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="867.77" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="854.1" y="3733" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="857.11" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (27 samples, 0.33%)</title><rect x="774.4" y="4181" width="3.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.35" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (11 samples, 0.13%)</title><rect x="749.2" y="2405" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="993.9" y="2869" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.91" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (5 samples, 0.06%)</title><rect x="760.2" y="3333" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (9 samples, 0.11%)</title><rect x="963.4" y="3285" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="966.39" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="921.1" y="3397" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="924.06" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (2 samples, 0.02%)</title><rect x="176.3" y="4261" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="179.29" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (26 samples, 0.32%)</title><rect x="889.8" y="4133" width="3.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="892.82" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (10 samples, 0.12%)</title><rect x="862.8" y="3941" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="865.75" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="925.1" y="3733" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="928.09" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="842.4" y="3669" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.45" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1013.2" y="1797" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="1807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (4 samples, 0.05%)</title><rect x="348.3" y="4421" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="351.34" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (11 samples, 0.13%)</title><rect x="749.2" y="2341" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Character.isHighSurrogate (4 samples, 0.05%)</title><rect x="311.2" y="4453" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="314.19" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (4 samples, 0.05%)</title><rect x="749.3" y="1701" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="913.0" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="916.00" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseIterGVN::optimize() (2 samples, 0.02%)</title><rect x="1170.1" y="4837" width="0.3" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text text-anchor="" x="1173.13" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter.access$000 (2 samples, 0.02%)</title><rect x="739.5" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="742.51" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/success! (13 samples, 0.16%)</title><rect x="371.8" y="4869" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="374.80" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyResponse.without (4 samples, 0.05%)</title><rect x="376.1" y="4821" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="379.12" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.DefaultHttpHeaders.valueCharSequenceIterator (2 samples, 0.02%)</title><rect x="377.4" y="4709" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="380.42" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (5 samples, 0.06%)</title><rect x="752.8" y="2837" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.76" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (83 samples, 1.01%)</title><rect x="911.0" y="4069" width="11.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="913.98" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="968.1" y="3397" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="971.14" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatterBuilder$CompositePrinterParser.format (2 samples, 0.02%)</title><rect x="853.7" y="3477" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="856.68" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.equiv (2 samples, 0.02%)</title><rect x="298.5" y="4373" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="301.52" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (7 samples, 0.09%)</title><rect x="809.0" y="4101" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="812.05" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (8 samples, 0.10%)</title><rect x="884.6" y="3765" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="887.63" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (7 samples, 0.09%)</title><rect x="966.0" y="3269" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="968.98" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="984.0" y="2965" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="923.7" y="3637" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="926.65" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="1007.9" y="2485" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.87" y="2495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="109.9" y="4501" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="112.92" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (19 samples, 0.23%)</title><rect x="989.9" y="3189" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.88" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_new_array_Java (4 samples, 0.05%)</title><rect x="11.3" y="5013" width="0.6" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text text-anchor="" x="14.30" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (103 samples, 1.26%)</title><rect x="874.8" y="4213" width="14.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="877.84" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (75 samples, 0.92%)</title><rect x="927.7" y="3845" width="10.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="930.68" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="808.2" y="3877" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="811.18" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (29 samples, 0.35%)</title><rect x="975.5" y="3477" width="4.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="978.48" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (7 samples, 0.09%)</title><rect x="984.0" y="3141" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (47 samples, 0.57%)</title><rect x="838.0" y="4101" width="6.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="840.99" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="902.8" y="3573" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="905.77" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Character.codePointAt (3 samples, 0.04%)</title><rect x="728.9" y="4293" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="731.86" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/start-parser (6 samples, 0.07%)</title><rect x="360.7" y="4661" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="363.72" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/deref (2 samples, 0.02%)</title><rect x="290.6" y="4549" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="293.60" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::enable_wx_from_exec(WXMode) (2 samples, 0.02%)</title><rect x="491.6" y="3717" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text text-anchor="" x="494.59" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="822.0" y="3749" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="749.3" y="245" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand-int (2 samples, 0.02%)</title><rect x="893.7" y="4213" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="896.70" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (11 samples, 0.13%)</title><rect x="917.7" y="3637" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="920.75" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="873.0" y="3765" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.97" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (7 samples, 0.09%)</title><rect x="755.5" y="3445" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.49" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>nrepl.middleware.interruptible-eval/evaluate/fn--5140/fn--5141 (2,321 samples, 28.32%)</title><rect x="700.2" y="4741" width="334.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="703.20" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >nrepl.middleware.interruptible-eval/evaluate/..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannel$AbstractUnsafe.flush (24 samples, 0.29%)</title><rect x="673.0" y="4501" width="3.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (10 samples, 0.12%)</title><rect x="749.2" y="2149" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (126 samples, 1.54%)</title><rect x="827.6" y="4293" width="18.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="830.62" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="915.2" y="3429" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="918.16" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="988.9" y="3269" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="865.9" y="3573" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>writev (70 samples, 0.85%)</title><rect x="681.5" y="4485" width="10.1" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text text-anchor="" x="684.49" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="903.6" y="3509" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="906.64" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (5 samples, 0.06%)</title><rect x="1033.1" y="4613" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1036.07" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11874/deferred--11875 (2 samples, 0.02%)</title><rect x="735.2" y="4437" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="738.19" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="901.3" y="3541" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="904.33" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (2 samples, 0.02%)</title><rect x="867.2" y="3925" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="870.21" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (11 samples, 0.13%)</title><rect x="860.0" y="3765" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="863.01" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (53 samples, 0.65%)</title><rect x="749.0" y="3525" width="7.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="872.0" y="3909" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="874.96" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1001.3" y="2629" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.25" y="2639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.concurrent.SingleThreadEventExecutor.execute (31 samples, 0.38%)</title><rect x="363.0" y="4613" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="366.02" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="846.6" y="3941" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.63" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (15 samples, 0.18%)</title><rect x="838.6" y="3845" width="2.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="841.56" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (4 samples, 0.05%)</title><rect x="749.3" y="1733" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (2 samples, 0.02%)</title><rect x="180.6" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="183.61" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (16 samples, 0.20%)</title><rect x="813.5" y="4085" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (5 samples, 0.06%)</title><rect x="912.3" y="3477" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="915.28" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (17 samples, 0.21%)</title><rect x="907.5" y="4133" width="2.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="910.53" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (17 samples, 0.21%)</title><rect x="881.5" y="3893" width="2.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="884.47" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (9 samples, 0.11%)</title><rect x="890.0" y="3813" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="998.9" y="2645" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1001.95" y="2655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="908.8" y="3557" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.write (16 samples, 0.20%)</title><rect x="693.9" y="4805" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="696.87" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="807.0" y="3829" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="810.03" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="971.3" y="3061" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="974.31" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand (3 samples, 0.04%)</title><rect x="1023.3" y="3957" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1026.28" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (2 samples, 0.02%)</title><rect x="326.3" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="329.31" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="891.4" y="3845" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.40" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="979.7" y="3605" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="982.66" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="785.7" y="4085" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.72" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="838.7" y="3621" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="841.71" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpObjectDecoder$LineParser.process (2 samples, 0.02%)</title><rect x="474.9" y="4597" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.89" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (11 samples, 0.13%)</title><rect x="892.0" y="3973" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.98" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="977.2" y="3205" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="980.21" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="991.5" y="2661" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="994.46" y="2671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="914.9" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="917.87" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (81 samples, 0.99%)</title><rect x="911.3" y="3973" width="11.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="914.27" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextAfterName (3 samples, 0.04%)</title><rect x="124.7" y="4629" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="127.75" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (6 samples, 0.07%)</title><rect x="774.6" y="3957" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (5 samples, 0.06%)</title><rect x="902.8" y="3797" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="905.77" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (14 samples, 0.17%)</title><rect x="749.2" y="2485" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (16 samples, 0.20%)</title><rect x="896.0" y="3733" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="899.01" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (19 samples, 0.23%)</title><rect x="895.7" y="3861" width="2.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="898.72" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeWrite0 (16 samples, 0.20%)</title><rect x="693.9" y="4757" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="696.87" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-full-listener (5 samples, 0.06%)</title><rect x="208.8" y="4565" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="211.83" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (16 samples, 0.20%)</title><rect x="88.5" y="4325" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="91.47" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="770.5" y="3557" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="984.0" y="2917" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.conj (10 samples, 0.12%)</title><rect x="347.9" y="4517" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="350.90" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="1008.9" y="2533" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (7 samples, 0.09%)</title><rect x="994.9" y="2949" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (7 samples, 0.09%)</title><rect x="931.3" y="3717" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="934.28" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (8 samples, 0.10%)</title><rect x="1000.0" y="2933" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.96" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Character.codePointAt (117 samples, 1.43%)</title><rect x="237.8" y="4469" width="16.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="240.76" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (276 samples, 3.37%)</title><rect x="748.4" y="4533" width="39.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.44" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clo..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parker::unpark() (52 samples, 0.63%)</title><rect x="484.1" y="3749" width="7.5" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text text-anchor="" x="487.10" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="1015.5" y="2037" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.51" y="2047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="865.6" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="971.6" y="3157" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="974.59" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (6 samples, 0.07%)</title><rect x="749.2" y="1829" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="1839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="996.9" y="2869" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.93" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="968.1" y="3381" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.14" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (14 samples, 0.17%)</title><rect x="1007.3" y="2821" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.30" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="909.4" y="3717" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="912.40" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/trampoline (32 samples, 0.39%)</title><rect x="719.6" y="4261" width="4.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="722.64" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (5 samples, 0.06%)</title><rect x="760.2" y="3301" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (8 samples, 0.10%)</title><rect x="865.6" y="3765" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (57 samples, 0.70%)</title><rect x="899.3" y="3957" width="8.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="902.32" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="952.2" y="3365" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="955.16" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (4 samples, 0.05%)</title><rect x="889.1" y="3941" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="892.10" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="965.4" y="3237" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="968.40" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1001.5" y="2869" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.54" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="960.4" y="3461" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="963.36" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="995.6" y="2325" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (4 samples, 0.05%)</title><rect x="84.6" y="4581" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="87.58" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (4 samples, 0.05%)</title><rect x="752.8" y="2741" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.76" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (19 samples, 0.23%)</title><rect x="749.2" y="2741" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="1012.0" y="2261" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.05" y="2271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="821.1" y="4277" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="824.14" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="975.6" y="3205" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="978.62" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (8 samples, 0.10%)</title><rect x="905.4" y="3605" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="908.37" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="901.2" y="3557" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="904.19" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName (5 samples, 0.06%)</title><rect x="96.0" y="4421" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="98.95" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="978.1" y="2997" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client-middleware/handle-redirects (3 samples, 0.04%)</title><rect x="377.9" y="4853" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="380.85" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.gt (2 samples, 0.02%)</title><rect x="801.0" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="803.99" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="880.5" y="3637" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.System$2.blockedOn (2 samples, 0.02%)</title><rect x="515.2" y="4773" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="518.20" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (75 samples, 0.92%)</title><rect x="927.7" y="3829" width="10.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="930.68" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (581 samples, 7.09%)</title><rect x="940.8" y="4021" width="83.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="943.78" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.l..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="836.5" y="3637" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="839.55" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="972.5" y="3333" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="975.46" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="987.7" y="2645" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="2655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (2 samples, 0.02%)</title><rect x="940.4" y="3605" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="943.35" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1019.4" y="853" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.39" y="863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1009.6" y="2309" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.60" y="2319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (11 samples, 0.13%)</title><rect x="970.3" y="3333" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="973.30" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead (19 samples, 0.23%)</title><rect x="477.8" y="4565" width="2.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="480.77" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (3 samples, 0.04%)</title><rect x="820.7" y="4149" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="823.71" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (4 samples, 0.05%)</title><rect x="330.1" y="4501" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="333.05" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (15 samples, 0.18%)</title><rect x="941.8" y="3637" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="944.79" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (76 samples, 0.93%)</title><rect x="927.5" y="3941" width="11.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="930.54" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (322 samples, 3.93%)</title><rect x="975.3" y="3669" width="46.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.34" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >exam..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="955.8" y="3221" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="958.76" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="832.8" y="3765" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="835.80" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="904.2" y="3349" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.21" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="848.5" y="3925" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.50" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (7 samples, 0.09%)</title><rect x="994.9" y="2885" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="839.9" y="3653" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="842.86" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool) (478 samples, 5.83%)</title><rect x="1106.6" y="4901" width="68.9" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text text-anchor="" x="1109.64" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >Compile..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="968.4" y="3413" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="971.43" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (2 samples, 0.02%)</title><rect x="909.7" y="3765" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="912.69" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (498 samples, 6.08%)</title><rect x="950.9" y="3909" width="71.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="953.86" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="960.5" y="3365" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="963.51" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$GroupHead.match (6 samples, 0.07%)</title><rect x="741.1" y="4437" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="744.09" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Compilation::emit_lir() (2 samples, 0.02%)</title><rect x="1176.5" y="4853" width="0.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text text-anchor="" x="1179.47" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.MultiFn.getMethod (9 samples, 0.11%)</title><rect x="746.7" y="4533" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="749.71" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (10 samples, 0.12%)</title><rect x="981.2" y="3269" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="984.24" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (5 samples, 0.06%)</title><rect x="782.0" y="4197" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="784.98" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (7 samples, 0.09%)</title><rect x="1002.5" y="2757" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1005.55" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Listener.onSuccess (75 samples, 0.92%)</title><rect x="482.7" y="4309" width="10.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="485.66" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.05%)</title><rect x="11.3" y="4997" width="0.6" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text text-anchor="" x="14.30" y="5007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (6 samples, 0.07%)</title><rect x="492.6" y="3989" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="495.60" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/subscribe--11925 (2 samples, 0.02%)</title><rect x="735.2" y="4469" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="738.19" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="824.3" y="3957" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="827.31" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="972.5" y="3269" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="975.46" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::current_thread_enable_wx_impl(WXMode) (2 samples, 0.02%)</title><rect x="712.9" y="4421" width="0.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text text-anchor="" x="715.87" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="905.8" y="3557" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="908.80" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="981.8" y="2869" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="984.82" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (11 samples, 0.13%)</title><rect x="852.5" y="3653" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="855.53" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.asTransient (2 samples, 0.02%)</title><rect x="339.6" y="4405" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="342.55" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOfRange (2 samples, 0.02%)</title><rect x="119.0" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="121.99" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="204.9" y="4597" width="0.3" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text text-anchor="" x="207.94" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1017.4" y="1557" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (4 samples, 0.05%)</title><rect x="172.7" y="3717" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="815.0" y="4069" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="817.95" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (16 samples, 0.20%)</title><rect x="899.8" y="3797" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="902.75" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (6 samples, 0.07%)</title><rect x="328.2" y="4437" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="331.18" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1016.7" y="1637" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.66" y="1647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (8 samples, 0.10%)</title><rect x="767.2" y="3861" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.15" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (4 samples, 0.05%)</title><rect x="754.3" y="3173" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (3 samples, 0.04%)</title><rect x="875.7" y="4037" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="878.71" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureExplicitCapacity (3 samples, 0.04%)</title><rect x="199.3" y="4533" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="202.32" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.fireChannelRead (19 samples, 0.23%)</title><rect x="477.8" y="4581" width="2.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="480.77" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.DelegatingMethodAccessorImpl (2 samples, 0.02%)</title><rect x="969.9" y="3413" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (34 samples, 0.41%)</title><rect x="969.9" y="3685" width="4.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (6 samples, 0.07%)</title><rect x="492.6" y="4085" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="495.60" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/eval22182 (2,321 samples, 28.32%)</title><rect x="700.2" y="4677" width="334.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="703.20" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.client/eval22182</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (19 samples, 0.23%)</title><rect x="895.7" y="3877" width="2.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="898.72" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="925.1" y="3605" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="928.09" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1017.4" y="1461" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="984.6" y="3013" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="987.55" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOfObject (3 samples, 0.04%)</title><rect x="277.9" y="4469" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="280.93" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (24 samples, 0.29%)</title><rect x="840.9" y="4021" width="3.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="843.87" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="753.9" y="3029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="756.91" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="903.1" y="3525" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="906.06" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.mapUniqueKeys (2 samples, 0.02%)</title><rect x="78.4" y="4709" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="81.39" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Var.getRawRoot (2 samples, 0.02%)</title><rect x="359.6" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="362.57" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (12 samples, 0.15%)</title><rect x="967.6" y="3749" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="940.1" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="943.06" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>GCTaskThread::run() (336 samples, 4.10%)</title><rect x="1058.3" y="4981" width="48.3" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text text-anchor="" x="1061.27" y="4991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >GCTa..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__psynch_cvsignal (3 samples, 0.04%)</title><rect x="382.5" y="4597" width="0.4" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text text-anchor="" x="385.46" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="978.1" y="2965" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.ReflectionFactory.copyMethod (2 samples, 0.02%)</title><rect x="945.5" y="3045" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="948.53" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="949.4" y="3621" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="754.3" y="2741" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="914.0" y="3717" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="917.00" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (12 samples, 0.15%)</title><rect x="318.0" y="4357" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="320.96" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="1013.2" y="2069" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="2079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="937.2" y="3269" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="940.18" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyResponse.assoc (4 samples, 0.05%)</title><rect x="481.5" y="4373" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="484.51" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>byte-streams.graph/seq-conversion-fn/fn--14748/fn--14749 (7 samples, 0.09%)</title><rect x="477.9" y="4373" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="480.91" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="858.1" y="4021" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="861.14" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.KeywordLookupSite$1.get (2 samples, 0.02%)</title><rect x="482.1" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="485.09" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (133 samples, 1.62%)</title><rect x="1001.8" y="3173" width="19.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.83" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (6 samples, 0.07%)</title><rect x="939.8" y="3733" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.78" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (4 samples, 0.05%)</title><rect x="1057.4" y="5029" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1060.40" y="5039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="936.0" y="3317" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="939.03" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Dot.isSatisfiedBy (121 samples, 1.48%)</title><rect x="254.6" y="4469" width="17.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="257.61" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="956.0" y="3221" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="959.04" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1007.6" y="2357" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.59" y="2367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (4 samples, 0.05%)</title><rect x="758.7" y="3429" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="848.5" y="4037" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.50" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="755.9" y="3157" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.92" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.equal (2 samples, 0.02%)</title><rect x="830.2" y="3669" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="833.21" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.ByteToMessageDecoder.channelRead (261 samples, 3.18%)</title><rect x="474.5" y="4741" width="37.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.46" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (7 samples, 0.09%)</title><rect x="839.6" y="3765" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="842.57" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="783.9" y="3925" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.85" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="968.1" y="3429" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="971.14" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="967.7" y="3301" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="970.71" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="822.0" y="4197" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (8 samples, 0.10%)</title><rect x="951.9" y="3589" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="954.87" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.assoc (4 samples, 0.05%)</title><rect x="340.4" y="4453" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="343.42" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.equiv (3 samples, 0.04%)</title><rect x="208.3" y="4421" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.25" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (71 samples, 0.87%)</title><rect x="1010.0" y="2773" width="10.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.03" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.nio.NioEventLoop.wakeup (16 samples, 0.20%)</title><rect x="721.2" y="4133" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="724.22" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="952.2" y="3381" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="955.16" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (3 samples, 0.04%)</title><rect x="208.3" y="4501" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.25" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.02%)</title><rect x="1172.6" y="4709" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text text-anchor="" x="1175.58" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName (3 samples, 0.04%)</title><rect x="123.5" y="4613" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="126.45" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (15 samples, 0.18%)</title><rect x="958.9" y="3765" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="961.92" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::do_one_block() (2 samples, 0.02%)</title><rect x="1173.6" y="4437" width="0.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text text-anchor="" x="1176.59" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="966.6" y="3109" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="969.55" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="839.3" y="3541" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="842.28" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="1012.8" y="2357" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1015.77" y="2367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.assoc (2 samples, 0.02%)</title><rect x="321.6" y="4533" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="324.56" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="811.4" y="3701" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="814.35" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (2 samples, 0.02%)</title><rect x="176.6" y="4309" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="179.58" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="833.7" y="3941" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="836.67" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="856.4" y="3893" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="859.42" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="919.6" y="3397" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="843.6" y="3669" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.60" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/subscribe--11925 (2 samples, 0.02%)</title><rect x="483.0" y="4165" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="485.95" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (7 samples, 0.09%)</title><rect x="900.2" y="3605" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="903.18" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName (2 samples, 0.02%)</title><rect x="126.2" y="4645" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="129.19" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="986.7" y="3189" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.71" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="863.9" y="3765" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="866.90" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="758.2" y="3253" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.23" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (11 samples, 0.13%)</title><rect x="876.9" y="3781" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="879.86" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (6 samples, 0.07%)</title><rect x="774.6" y="3973" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (7 samples, 0.09%)</title><rect x="785.7" y="4181" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.72" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.10%)</title><rect x="1172.9" y="4725" width="1.1" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text text-anchor="" x="1175.87" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$ArrayNode.find (2 samples, 0.02%)</title><rect x="326.3" y="4485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="329.31" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (5 samples, 0.06%)</title><rect x="955.6" y="3349" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="958.61" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="909.4" y="3685" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="912.40" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (6 samples, 0.07%)</title><rect x="968.4" y="3557" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.43" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util$4.equiv (3 samples, 0.04%)</title><rect x="302.1" y="4469" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="305.12" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1017.4" y="1413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (40 samples, 0.49%)</title><rect x="803.3" y="4213" width="5.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="806.29" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.server/ring-handler/process-content--16644 (19 samples, 0.23%)</title><rect x="477.8" y="4517" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="480.77" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="964.7" y="3349" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="96.2" y="4373" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="99.24" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (5 samples, 0.06%)</title><rect x="878.6" y="3493" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="881.59" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WatcherThread::sleep() const (33 samples, 0.40%)</title><rect x="1185.1" y="4965" width="4.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text text-anchor="" x="1188.10" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="996.2" y="2997" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.21" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="833.5" y="4085" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="836.52" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (5 samples, 0.06%)</title><rect x="763.8" y="3637" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.84" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpClientCodec$Decoder.decode (11 samples, 0.13%)</title><rect x="474.6" y="4693" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.60" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (9 samples, 0.11%)</title><rect x="872.0" y="4053" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.96" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="924.1" y="3717" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="927.08" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (54 samples, 0.66%)</title><rect x="941.6" y="3797" width="7.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="944.65" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (17 samples, 0.21%)</title><rect x="941.8" y="3685" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="944.79" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (8 samples, 0.10%)</title><rect x="760.2" y="3573" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (5 samples, 0.06%)</title><rect x="955.6" y="3477" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="958.61" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseIdealLoop::idom_no_update(Node*) const (2 samples, 0.02%)</title><rect x="1168.7" y="4789" width="0.3" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text text-anchor="" x="1171.69" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1005.9" y="2917" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1008.86" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractByteBufAllocator.directBuffer (4 samples, 0.05%)</title><rect x="678.2" y="4773" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="681.18" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.num (2 samples, 0.02%)</title><rect x="288.7" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="291.73" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.add (3 samples, 0.04%)</title><rect x="1029.6" y="4437" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1032.61" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpObjectDecoder$HeaderParser.parse (2 samples, 0.02%)</title><rect x="474.9" y="4645" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.89" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (54 samples, 0.66%)</title><rect x="941.6" y="3845" width="7.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="944.65" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="749.3" y="533" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.KeywordLookupSite$1.get (5 samples, 0.06%)</title><rect x="295.1" y="4549" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="298.07" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (134 samples, 1.63%)</title><rect x="802.1" y="4453" width="19.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="805.14" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="968.4" y="3349" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.43" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseIterGVN::optimize() (9 samples, 0.11%)</title><rect x="1170.6" y="4869" width="1.3" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text text-anchor="" x="1173.56" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (34 samples, 0.41%)</title><rect x="969.9" y="3637" width="4.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (12 samples, 0.15%)</title><rect x="852.4" y="3733" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="855.38" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (6 samples, 0.07%)</title><rect x="962.1" y="3333" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="973.8" y="3221" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="976.75" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (7 samples, 0.09%)</title><rect x="775.5" y="4021" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.50" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentVector.nth (2 samples, 0.02%)</title><rect x="314.6" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="317.65" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (4 samples, 0.05%)</title><rect x="1024.6" y="4053" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1027.58" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="865.9" y="3429" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="779.7" y="3845" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.68" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="946.3" y="3285" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="991.2" y="3077" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.17" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead (21 samples, 0.26%)</title><rect x="477.6" y="4693" width="3.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="480.62" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (26 samples, 0.32%)</title><rect x="858.4" y="4005" width="3.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="861.43" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="890.7" y="3477" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="893.68" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (195 samples, 2.38%)</title><rect x="993.3" y="3413" width="28.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.33" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >e..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[GC_active] (2 samples, 0.02%)</title><rect x="10.0" y="5029" width="0.3" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="5039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (220 samples, 2.68%)</title><rect x="989.7" y="3477" width="31.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.73" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >cl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="1016.9" y="1925" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.94" y="1935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="939.5" y="3685" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.49" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="979.8" y="3221" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyRequest.containsKey (2 samples, 0.02%)</title><rect x="75.2" y="4661" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="78.22" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="904.9" y="3621" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.93" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (6 samples, 0.07%)</title><rect x="779.7" y="3941" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.68" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1006.9" y="2661" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1009.87" y="2671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="984.0" y="3061" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="862.8" y="3701" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="865.75" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.append (4 samples, 0.05%)</title><rect x="790.6" y="4437" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="793.62" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="898.7" y="3621" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="901.74" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="1021.8" y="3733" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1024.84" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="883.3" y="3685" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="886.34" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (11 samples, 0.13%)</title><rect x="997.7" y="2981" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.65" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>WatcherThread::run() (43 samples, 0.52%)</title><rect x="1183.7" y="4981" width="6.2" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text text-anchor="" x="1186.67" y="4991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="989.3" y="3173" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.30" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (133 samples, 1.62%)</title><rect x="1001.8" y="3157" width="19.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.83" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (3 samples, 0.04%)</title><rect x="174.7" y="4117" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="177.70" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="953.0" y="3477" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.02" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="950.1" y="3477" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="953.14" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (13 samples, 0.16%)</title><rect x="829.9" y="3845" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="832.92" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="1021.8" y="3749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1024.84" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.gt (2 samples, 0.02%)</title><rect x="810.1" y="4181" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="813.06" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (16 samples, 0.20%)</title><rect x="834.7" y="3989" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="837.68" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.DefaultChannelPipeline.writeAndFlush (31 samples, 0.38%)</title><rect x="673.0" y="4789" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (3 samples, 0.04%)</title><rect x="922.5" y="3765" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="925.50" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (9 samples, 0.11%)</title><rect x="987.6" y="3205" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="990.57" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="883.9" y="3765" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="886.91" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="962.7" y="3301" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="965.67" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (16 samples, 0.20%)</title><rect x="896.0" y="3797" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="899.01" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (38 samples, 0.46%)</title><rect x="828.1" y="4117" width="5.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="831.05" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="903.8" y="3445" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="906.78" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.conj (8 samples, 0.10%)</title><rect x="313.4" y="4501" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="316.35" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (10 samples, 0.12%)</title><rect x="877.0" y="3669" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="880.00" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="860.2" y="3605" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="863.16" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (12 samples, 0.15%)</title><rect x="967.6" y="3589" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/assoc--5433 (12 samples, 0.15%)</title><rect x="298.5" y="4501" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="301.52" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (3 samples, 0.04%)</title><rect x="211.1" y="4485" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="214.13" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (15 samples, 0.18%)</title><rect x="907.8" y="3957" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="910.81" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="749.3" y="741" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.add (3 samples, 0.04%)</title><rect x="1029.6" y="4421" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1032.61" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="971.3" y="3093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="974.31" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter.&lt;init&gt; (2 samples, 0.02%)</title><rect x="790.0" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="793.04" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="1002.3" y="2725" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1005.26" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (4 samples, 0.05%)</title><rect x="330.1" y="4485" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="333.05" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="1010.8" y="2501" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="872.7" y="3829" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="904.9" y="3445" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="907.93" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="892.0" y="3717" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="894.98" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (41 samples, 0.50%)</title><rect x="851.4" y="4117" width="5.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="854.38" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="953.7" y="2917" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="930.4" y="3429" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="933.42" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="840.0" y="3605" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="843.00" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="294.6" y="4501" width="0.3" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text text-anchor="" x="297.63" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="898.7" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="901.74" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$TransientHashMap.doAssoc (4 samples, 0.05%)</title><rect x="733.9" y="4229" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="736.89" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="909.4" y="3605" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="912.40" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText (7 samples, 0.09%)</title><rect x="120.3" y="4613" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="123.28" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (3 samples, 0.04%)</title><rect x="918.0" y="3205" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="921.04" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/-parse (328 samples, 4.00%)</title><rect x="277.4" y="4597" width="47.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="280.36" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >inst..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="988.3" y="3141" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.29" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (7 samples, 0.09%)</title><rect x="930.3" y="3477" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="933.27" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="1015.6" y="1685" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.65" y="1695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ParseGenerator::generate(JVMState*) (16 samples, 0.20%)</title><rect x="1172.3" y="4885" width="2.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text text-anchor="" x="1175.29" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.doEquiv (3 samples, 0.04%)</title><rect x="208.3" y="4405" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.25" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="885.8" y="3781" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="888.79" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="865.9" y="3557" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="345.2" y="4517" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="348.17" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="872.0" y="3957" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.96" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (40 samples, 0.49%)</title><rect x="803.3" y="4197" width="5.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="806.29" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="914.0" y="3829" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="917.00" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.server/ring-handler/handle-request--16628 (16 samples, 0.20%)</title><rect x="477.8" y="4501" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="480.77" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="280.8" y="4533" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="283.81" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (4 samples, 0.05%)</title><rect x="330.1" y="4453" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="333.05" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (13 samples, 0.16%)</title><rect x="292.0" y="4357" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="295.04" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (3 samples, 0.04%)</title><rect x="302.1" y="4517" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="305.12" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="919.6" y="3189" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText (2 samples, 0.02%)</title><rect x="103.6" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="106.58" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="979.8" y="3365" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="913.0" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="916.00" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (149 samples, 1.82%)</title><rect x="999.8" y="3205" width="21.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.81" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >e..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="950.1" y="3685" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="953.14" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (18 samples, 0.22%)</title><rect x="749.2" y="2629" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="822.0" y="3765" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized (382 samples, 4.66%)</title><rect x="473.6" y="4917" width="55.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="476.59" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io.ne..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="883.9" y="3909" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="886.91" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (91 samples, 1.11%)</title><rect x="1007.3" y="2869" width="13.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.30" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="902.8" y="3749" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="905.77" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (10 samples, 0.12%)</title><rect x="847.6" y="4085" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="850.63" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="919.6" y="3557" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="968.4" y="3509" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="971.43" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.invoke (2 samples, 0.02%)</title><rect x="210.6" y="4533" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="213.55" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="843.3" y="3621" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="846.31" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (5 samples, 0.06%)</title><rect x="326.6" y="4533" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="329.60" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="891.4" y="3941" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.40" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="840.0" y="3557" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="843.00" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="962.1" y="3269" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="762.8" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.83" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentVector$TransientVector.persistent (4 samples, 0.05%)</title><rect x="105.2" y="4501" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="108.17" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText (5 samples, 0.06%)</title><rect x="112.1" y="4565" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="115.08" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (4 samples, 0.05%)</title><rect x="767.2" y="3797" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.15" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="873.0" y="3829" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.97" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="944.0" y="3637" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="946.95" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="817.8" y="3877" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="820.83" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="1004.3" y="2581" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.28" y="2591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (4 samples, 0.05%)</title><rect x="767.2" y="3781" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.15" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (4 samples, 0.05%)</title><rect x="768.3" y="3813" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="771.30" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="749.3" y="1253" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (12 samples, 0.15%)</title><rect x="823.2" y="4181" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="826.16" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="839.3" y="3557" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="842.28" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (12 samples, 0.15%)</title><rect x="956.3" y="3429" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="959.33" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.AbstractCollection.&lt;init&gt; (4 samples, 0.05%)</title><rect x="155.0" y="4597" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="157.98" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.copyMethods (5 samples, 0.06%)</title><rect x="129.1" y="4645" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="132.07" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="1010.2" y="2341" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.18" y="2351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="1015.6" y="1765" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.65" y="1775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/swap! (3 samples, 0.04%)</title><rect x="210.0" y="4549" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="212.98" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="809.2" y="4005" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="812.19" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="902.1" y="3781" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="905.05" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (4 samples, 0.05%)</title><rect x="752.2" y="2853" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.18" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.atomic.AtomicLong.set (2 samples, 0.02%)</title><rect x="699.8" y="4933" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="702.77" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="909.4" y="3557" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="912.40" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (5 samples, 0.06%)</title><rect x="771.5" y="3829" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="774.47" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="754.3" y="3157" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (130 samples, 1.59%)</title><rect x="874.8" y="4293" width="18.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="877.84" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="920.1" y="3557" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.05" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="930.4" y="3317" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="933.42" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeMatchingMethod (2 samples, 0.02%)</title><rect x="973.0" y="3285" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="976.03" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (5 samples, 0.06%)</title><rect x="996.9" y="2981" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.93" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/re-match-at-front (31 samples, 0.38%)</title><rect x="307.6" y="4565" width="4.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="310.59" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred/fn--11776 (32 samples, 0.39%)</title><rect x="719.6" y="4309" width="4.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="722.64" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="764.3" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.27" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Scheduling::DoScheduling() (2 samples, 0.02%)</title><rect x="1107.2" y="4837" width="0.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text text-anchor="" x="1110.22" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="938.5" y="3445" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="749.3" y="965" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (2 samples, 0.02%)</title><rect x="209.1" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="212.11" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="1019.2" y="1141" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1022.25" y="1151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.internal.ThreadExecutorMap$2.run (1,588 samples, 19.38%)</title><rect x="471.6" y="4981" width="228.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="474.58" y="4991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io.netty.util.internal.ThreadE..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (109 samples, 1.33%)</title><rect x="749.0" y="3909" width="15.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (7 samples, 0.09%)</title><rect x="925.8" y="3749" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="928.81" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1006.4" y="2245" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1009.43" y="2255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1017.4" y="1701" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (9 samples, 0.11%)</title><rect x="999.8" y="3125" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.81" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="843.3" y="3701" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.31" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (12 samples, 0.15%)</title><rect x="852.4" y="3797" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="855.38" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="989.2" y="3237" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.16" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="757.4" y="3077" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.36" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName (3 samples, 0.04%)</title><rect x="119.4" y="4581" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="122.42" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (7 samples, 0.09%)</title><rect x="760.2" y="3461" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (12 samples, 0.15%)</title><rect x="1002.0" y="3013" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1004.97" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (42 samples, 0.51%)</title><rect x="828.1" y="4165" width="6.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="831.05" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (17 samples, 0.21%)</title><rect x="350.5" y="4533" width="2.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="353.50" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (178 samples, 2.17%)</title><rect x="748.6" y="4245" width="25.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.58" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (14 samples, 0.17%)</title><rect x="302.6" y="4485" width="2.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="305.55" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="974.8" y="3653" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (8 samples, 0.10%)</title><rect x="749.2" y="1877" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="1887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="1010.8" y="2389" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="983.0" y="3157" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="985.97" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (7 samples, 0.09%)</title><rect x="973.6" y="3301" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="976.61" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/list* (4 samples, 0.05%)</title><rect x="742.2" y="4581" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="745.24" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (11 samples, 0.13%)</title><rect x="953.5" y="3541" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.45" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hasheq (3 samples, 0.04%)</title><rect x="297.5" y="4437" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="300.51" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1006.4" y="2373" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.43" y="2383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="972.5" y="3253" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="975.46" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="954.6" y="3045" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="957.60" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="757.4" y="3157" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.36" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="966.3" y="3013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="969.27" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (13 samples, 0.16%)</title><rect x="1018.0" y="1765" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.95" y="1775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="864.8" y="3605" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="867.77" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="980.2" y="3397" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="983.23" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="983.0" y="3205" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="985.97" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (2 samples, 0.02%)</title><rect x="209.1" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="212.11" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="815.4" y="3749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="818.38" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (11 samples, 0.13%)</title><rect x="860.0" y="3781" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="863.01" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="833.2" y="3861" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="836.24" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="754.3" y="2933" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (4 samples, 0.05%)</title><rect x="760.2" y="3253" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="974.8" y="3573" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (12 samples, 0.15%)</title><rect x="1004.1" y="2933" width="1.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.13" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (92 samples, 1.12%)</title><rect x="1007.3" y="2917" width="13.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.30" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.main/repl/fn--9119 (2,321 samples, 28.32%)</title><rect x="700.2" y="4885" width="334.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="703.20" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.main/repl/fn--9119</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (57 samples, 0.70%)</title><rect x="899.3" y="3941" width="8.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="902.32" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.cons (8 samples, 0.10%)</title><rect x="343.0" y="4501" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="346.01" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="813.1" y="3973" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.08" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="892.0" y="3893" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.98" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="754.3" y="2949" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PooledByteBufAllocator.newDirectBuffer (3 samples, 0.04%)</title><rect x="694.6" y="4645" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="697.59" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.net.URI$Parser.scan (2 samples, 0.02%)</title><rect x="715.3" y="4485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="718.32" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (367 samples, 4.48%)</title><rect x="969.3" y="3781" width="52.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.29" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >cloju..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (5 samples, 0.06%)</title><rect x="996.1" y="3077" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.07" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (3 samples, 0.04%)</title><rect x="941.1" y="3941" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="944.07" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[not_walkable_Java] (5 samples, 0.06%)</title><rect x="10.3" y="5029" width="0.7" height="15.0" fill="rgb(243,113,113)" rx="2" ry="2" />
<text text-anchor="" x="13.29" y="5039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="822.7" y="4037" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="905.4" y="3317" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="908.37" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (10 samples, 0.12%)</title><rect x="917.7" y="3509" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="920.75" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (33 samples, 0.40%)</title><rect x="876.1" y="4037" width="4.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="879.14" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="848.1" y="3765" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="851.06" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (15 samples, 0.18%)</title><rect x="907.8" y="3941" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="910.81" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (5 samples, 0.06%)</title><rect x="949.4" y="3605" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="841.4" y="3605" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="844.44" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1019.4" y="1013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.39" y="1023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (36 samples, 0.44%)</title><rect x="749.2" y="3253" width="5.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.addAll (2 samples, 0.02%)</title><rect x="827.6" y="4149" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="830.62" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="780.5" y="3957" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="783.54" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="995.5" y="2741" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.49" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (7 samples, 0.09%)</title><rect x="953.5" y="3445" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.45" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="861.6" y="3909" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="864.60" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="749.3" y="917" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (8 samples, 0.10%)</title><rect x="749.2" y="2021" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/deref (2 samples, 0.02%)</title><rect x="203.8" y="4629" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="206.79" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="984.6" y="3077" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="987.55" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.success (65 samples, 0.79%)</title><rect x="483.2" y="4053" width="9.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="486.24" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="959.2" y="3349" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="962.21" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.flush (85 samples, 1.04%)</title><rect x="680.2" y="4693" width="12.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.19" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="879.5" y="3701" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="882.45" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Number.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1029.0" y="4357" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1032.04" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="1016.7" y="1413" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.66" y="1423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyRequest.assoc (6 samples, 0.07%)</title><rect x="499.4" y="4453" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="502.36" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (2 samples, 0.02%)</title><rect x="747.7" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="750.72" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="984.0" y="2789" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.java.io/copy (32 samples, 0.39%)</title><rect x="80.5" y="4693" width="4.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="83.55" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1018.7" y="1109" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (6 samples, 0.07%)</title><rect x="959.9" y="3541" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="962.93" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue.offer (35 samples, 0.43%)</title><rect x="500.2" y="4469" width="5.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="503.23" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.DelegatingMethodAccessorImpl (3 samples, 0.04%)</title><rect x="200.0" y="4549" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="203.04" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (40 samples, 0.49%)</title><rect x="961.8" y="3733" width="5.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="964.80" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.util.locale.provider.DecimalFormatSymbolsProviderImpl.getInstance (4 samples, 0.05%)</title><rect x="738.2" y="4517" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="741.21" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="786.0" y="4021" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="789.01" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="812.8" y="3877" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="815.79" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (16 samples, 0.20%)</title><rect x="938.5" y="3877" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (12 samples, 0.15%)</title><rect x="817.7" y="3989" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.69" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="753.9" y="3077" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="756.91" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="908.8" y="3621" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="978.1" y="3029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.DefaultHeaders.setObject (2 samples, 0.02%)</title><rect x="720.9" y="4149" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="723.94" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpServerExpectContinueHandler.channelRead (91 samples, 1.11%)</title><rect x="498.8" y="4645" width="13.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="501.79" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JVM_CurrentTimeMillis (2 samples, 0.02%)</title><rect x="1038.5" y="4949" width="0.3" height="15.0" fill="rgb(215,71,71)" rx="2" ry="2" />
<text text-anchor="" x="1041.54" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$CharProperty.match (275 samples, 3.36%)</title><rect x="234.5" y="4485" width="39.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="237.45" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >jav..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="1002.5" y="2661" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1005.55" y="2671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/trampoline (2 samples, 0.02%)</title><rect x="479.4" y="4277" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="482.35" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.assoc (31 samples, 0.38%)</title><rect x="316.9" y="4485" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="319.95" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.access$400 (2 samples, 0.02%)</title><rect x="340.4" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="343.42" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1014.6" y="2197" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1017.64" y="2207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="939.5" y="3669" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="942.49" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.ReflectionFactory.copyMethod (2 samples, 0.02%)</title><rect x="821.7" y="4213" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="824.72" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="988.3" y="3061" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="991.29" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (32 samples, 0.39%)</title><rect x="980.7" y="3413" width="4.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="983.66" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (3 samples, 0.04%)</title><rect x="299.7" y="4437" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="302.67" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="872.0" y="3893" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="874.96" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureExplicitCapacity (13 samples, 0.16%)</title><rect x="195.3" y="4533" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="198.29" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="917.9" y="3429" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="920.89" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (6 samples, 0.07%)</title><rect x="779.7" y="3989" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.68" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (4 samples, 0.05%)</title><rect x="351.4" y="4405" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="354.36" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1012.2" y="2149" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.19" y="2159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Matcher.search (3 samples, 0.04%)</title><rect x="732.0" y="4325" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="735.02" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="846.3" y="3749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.34" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="1001.1" y="2725" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.multiply (2 samples, 0.02%)</title><rect x="826.3" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="829.33" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (4 samples, 0.05%)</title><rect x="810.3" y="4181" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="813.34" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (5 samples, 0.06%)</title><rect x="992.6" y="3349" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="995.61" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="993.0" y="3045" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.05" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.multiply (3 samples, 0.04%)</title><rect x="1029.0" y="4421" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1032.04" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1019.4" y="837" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.39" y="847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.getMethods (3 samples, 0.04%)</title><rect x="803.9" y="3973" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="806.87" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.copyMethods (3 samples, 0.04%)</title><rect x="803.9" y="3957" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="806.87" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.equal (2 samples, 0.02%)</title><rect x="945.2" y="3109" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="948.25" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/conj--5407 (4 samples, 0.05%)</title><rect x="300.2" y="4501" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="303.25" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (11 samples, 0.13%)</title><rect x="953.5" y="3557" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.45" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (14 samples, 0.17%)</title><rect x="302.6" y="4517" width="2.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="305.55" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (22 samples, 0.27%)</title><rect x="993.6" y="3301" width="3.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.62" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString (3 samples, 0.04%)</title><rect x="769.7" y="4069" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="772.74" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="814.2" y="3653" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="817.23" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="935.2" y="3573" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="938.17" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOfObject (2 samples, 0.02%)</title><rect x="208.0" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="210.96" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (15 samples, 0.18%)</title><rect x="749.2" y="2533" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (132 samples, 1.61%)</title><rect x="802.4" y="4341" width="19.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="805.43" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="946.8" y="3381" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="949.83" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (12 samples, 0.15%)</title><rect x="1004.1" y="2917" width="1.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.13" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.getBytes (5 samples, 0.06%)</title><rect x="672.3" y="4789" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.27" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (3 samples, 0.04%)</title><rect x="875.7" y="4021" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="878.71" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.more (2 samples, 0.02%)</title><rect x="786.0" y="3973" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="789.01" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (19 samples, 0.23%)</title><rect x="989.9" y="3333" width="2.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="992.88" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="863.0" y="3509" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="866.04" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="813.5" y="3749" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="872.3" y="3669" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.25" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="808.0" y="3893" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="811.04" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="833.7" y="3861" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="836.67" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (31 samples, 0.38%)</title><rect x="821.4" y="4453" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="824.43" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Compilation::compile_java_method() (10 samples, 0.12%)</title><rect x="1175.5" y="4869" width="1.4" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text text-anchor="" x="1178.46" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="837.6" y="3877" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="840.55" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="984.0" y="2981" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$7.isSatisfiedBy (10 samples, 0.12%)</title><rect x="730.4" y="4085" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="733.44" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (3 samples, 0.04%)</title><rect x="827.2" y="4437" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="830.19" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="974.8" y="3285" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (5 samples, 0.06%)</title><rect x="181.8" y="4485" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="184.76" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (8 samples, 0.10%)</title><rect x="776.7" y="4005" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="779.65" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="1010.2" y="2501" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1013.18" y="2511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="483.2" y="3989" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="486.24" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="846.0" y="3941" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="849.05" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="952.2" y="3189" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="955.16" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http/eval18308/request--18312/fn--18314/fn--18317/fn--18322/fn--18327 (16 samples, 0.20%)</title><rect x="375.4" y="4869" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="378.40" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (24 samples, 0.29%)</title><rect x="903.5" y="3797" width="3.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="906.49" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="925.1" y="3653" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="928.09" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand (4 samples, 0.05%)</title><rect x="826.2" y="4437" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="829.18" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="995.2" y="2789" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.20" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (241 samples, 2.94%)</title><rect x="748.4" y="4421" width="34.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.44" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >cl..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="872.0" y="3797" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="874.96" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor (16 samples, 0.20%)</title><rect x="368.9" y="4837" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="371.92" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="945.1" y="3189" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="948.10" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="944.8" y="3365" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="947.81" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="987.7" y="3013" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="1019.2" y="1157" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.25" y="1167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="755.1" y="3381" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.06" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="863.9" y="3829" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="866.90" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="931.3" y="3653" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="934.28" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="887.2" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="890.23" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (7 samples, 0.09%)</title><rect x="765.6" y="3765" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="768.57" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="1017.4" y="1813" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="754.3" y="2693" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.createNode (3 samples, 0.04%)</title><rect x="320.7" y="4405" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="323.69" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (32 samples, 0.39%)</title><rect x="1015.2" y="2245" width="4.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.22" y="2255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (21 samples, 0.26%)</title><rect x="881.5" y="3941" width="3.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="884.47" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding.encode (5 samples, 0.06%)</title><rect x="672.3" y="4773" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.27" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="749.3" y="549" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="858.1" y="4005" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="861.14" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="759.2" y="3445" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.23" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="833.8" y="3669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="836.81" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (5 samples, 0.06%)</title><rect x="329.9" y="4533" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="332.91" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (15 samples, 0.18%)</title><rect x="911.7" y="3653" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="914.70" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="919.6" y="3141" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (11 samples, 0.13%)</title><rect x="860.0" y="3733" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="863.01" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureExplicitCapacity (2 samples, 0.02%)</title><rect x="853.4" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="856.39" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="818.0" y="3813" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.97" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="767.9" y="3701" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.87" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (115 samples, 1.40%)</title><rect x="1004.1" y="3045" width="16.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.13" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.reduction/apply-reduction (59 samples, 0.72%)</title><rect x="211.6" y="4549" width="8.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="214.56" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="908.5" y="3781" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="911.53" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (44 samples, 0.54%)</title><rect x="749.0" y="3429" width="6.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (7 samples, 0.09%)</title><rect x="953.5" y="3461" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="956.45" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce1 (4 samples, 0.05%)</title><rect x="77.8" y="4693" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="80.81" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="997.8" y="2741" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="822.0" y="3861" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="966.1" y="3109" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="969.12" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="208.4" y="4341" width="0.3" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text text-anchor="" x="211.39" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="945.1" y="3269" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="948.10" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="846.3" y="3781" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="849.34" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (17 samples, 0.21%)</title><rect x="838.4" y="4021" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="841.42" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="863.0" y="3461" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="866.04" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="872.7" y="3733" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (6 samples, 0.07%)</title><rect x="931.3" y="3685" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="934.28" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand-int (2 samples, 0.02%)</title><rect x="821.1" y="4245" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="824.14" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="865.6" y="3557" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="865.6" y="3701" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="822.7" y="4117" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (60 samples, 0.73%)</title><rect x="914.3" y="3845" width="8.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="917.29" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="884.9" y="3621" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="887.92" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOfObject (4 samples, 0.05%)</title><rect x="336.4" y="4485" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="339.39" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.add (2 samples, 0.02%)</title><rect x="804.3" y="3973" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="807.30" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpResponseEncoder.encodeInitialLine (5 samples, 0.06%)</title><rect x="695.3" y="4677" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="698.31" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="1015.9" y="1909" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.94" y="1919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="981.8" y="3013" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="984.82" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="1006.9" y="2757" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1009.87" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="939.5" y="3541" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.49" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.write (95 samples, 1.16%)</title><rect x="680.2" y="4773" width="13.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.19" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.StreamDecoder.implRead (18 samples, 0.22%)</title><rect x="81.3" y="4549" width="2.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="84.27" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="807.6" y="3781" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="810.61" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="833.8" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="836.81" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Thread::WXWriteFromExecSetter::WXWriteFromExecSetter() (2 samples, 0.02%)</title><rect x="373.2" y="4709" width="0.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text text-anchor="" x="376.24" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/non-terminal-parse (62 samples, 0.76%)</title><rect x="279.5" y="4581" width="8.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="282.52" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="772.3" y="3829" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="775.34" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (16 samples, 0.20%)</title><rect x="899.8" y="3781" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="902.75" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (5 samples, 0.06%)</title><rect x="813.5" y="3861" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1015.6" y="1797" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.65" y="1807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (22 samples, 0.27%)</title><rect x="986.6" y="3477" width="3.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.57" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="807.6" y="3765" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="810.61" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="813.1" y="4021" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.08" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (2 samples, 0.02%)</title><rect x="359.1" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="362.13" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (10 samples, 0.12%)</title><rect x="983.5" y="3205" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="986.54" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="999.5" y="2933" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.52" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.02%)</title><rect x="10.0" y="4965" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (15 samples, 0.18%)</title><rect x="838.6" y="3797" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="841.56" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::do_all_blocks() (8 samples, 0.10%)</title><rect x="1172.9" y="4693" width="1.1" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text text-anchor="" x="1175.87" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="822.0" y="3925" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="973.9" y="3029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="976.90" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.02%)</title><rect x="1110.8" y="4821" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text text-anchor="" x="1113.82" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="930.4" y="3445" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="933.42" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="862.8" y="3685" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="865.75" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="760.4" y="3109" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.39" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="1009.5" y="2501" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.46" y="2511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="848.1" y="4005" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.06" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="995.6" y="2405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="998.64" y="2415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client/http-connection/fn--16976/fn--16995/fn--16999/fn--17000 (7 samples, 0.09%)</title><rect x="481.4" y="4437" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="484.37" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.hash (3 samples, 0.04%)</title><rect x="341.0" y="4453" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="343.99" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::do_one_block() (16 samples, 0.20%)</title><rect x="1172.3" y="4837" width="2.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text text-anchor="" x="1175.29" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="832.2" y="3717" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="835.23" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.&lt;init&gt; (2 samples, 0.02%)</title><rect x="739.9" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="742.94" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="779.1" y="3957" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (16 samples, 0.20%)</title><rect x="834.7" y="3973" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="837.68" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.nio.SelectedSelectionKeySetSelector.select (988 samples, 12.05%)</title><rect x="529.0" y="4917" width="142.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="532.02" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io.netty.channel.n..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="753.9" y="3189" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="756.91" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (3 samples, 0.04%)</title><rect x="306.9" y="4437" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="309.87" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (34 samples, 0.41%)</title><rect x="851.5" y="3877" width="4.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="854.52" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (12 samples, 0.15%)</title><rect x="942.1" y="3573" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="945.08" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="1015.6" y="1733" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.65" y="1743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="950.1" y="3445" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="953.14" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="817.8" y="3893" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="820.83" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PoolArena.free (4 samples, 0.05%)</title><rect x="509.9" y="4421" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="512.87" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>nmethod::nmethod(Method*, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (3 samples, 0.04%)</title><rect x="1177.0" y="4821" width="0.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text text-anchor="" x="1180.04" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="987.7" y="3157" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (11 samples, 0.13%)</title><rect x="876.9" y="3765" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="879.86" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (3 samples, 0.04%)</title><rect x="777.4" y="3957" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="780.37" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="869.2" y="4053" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.23" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter$FormatSpecifier.print (4 samples, 0.05%)</title><rect x="739.2" y="4517" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="742.22" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>_pthread_start (915 samples, 11.16%)</title><rect x="1058.3" y="5013" width="131.7" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text text-anchor="" x="1061.27" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_pthread_start</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.without (3 samples, 0.04%)</title><rect x="376.3" y="4725" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="379.27" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (149 samples, 1.82%)</title><rect x="999.8" y="3253" width="21.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.81" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >e..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="842.0" y="3749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.02" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="964.7" y="3109" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="990.7" y="2821" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="993.74" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (7 samples, 0.09%)</title><rect x="922.9" y="3845" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="880.5" y="3685" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="763.6" y="3557" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.55" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="983.7" y="2869" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.69" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (3 samples, 0.04%)</title><rect x="755.9" y="3221" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.92" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.cons (7 samples, 0.09%)</title><rect x="328.0" y="4501" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="331.04" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="939.2" y="3637" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="942.20" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (7 samples, 0.09%)</title><rect x="755.5" y="3477" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.49" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers$LongOps.combine (2 samples, 0.02%)</title><rect x="805.7" y="3733" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="808.74" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.createNode (2 samples, 0.02%)</title><rect x="68.9" y="4997" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="71.88" y="5007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (21 samples, 0.26%)</title><rect x="881.5" y="3925" width="3.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="884.47" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOf (2 samples, 0.02%)</title><rect x="298.5" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="301.52" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (18 samples, 0.22%)</title><rect x="834.4" y="4037" width="2.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="837.39" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.equiv (3 samples, 0.04%)</title><rect x="326.6" y="4437" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="329.60" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (5 samples, 0.06%)</title><rect x="843.3" y="3797" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.31" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="974.8" y="3461" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="885.1" y="3445" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="888.07" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="1010.8" y="2565" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (42 samples, 0.51%)</title><rect x="932.3" y="3749" width="6.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="935.29" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="1014.6" y="2245" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1017.64" y="2255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (2 samples, 0.02%)</title><rect x="757.4" y="3189" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.36" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.auto-flatten-seq/auto-flatten-seq (5 samples, 0.06%)</title><rect x="306.2" y="4533" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="309.15" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (16 samples, 0.20%)</title><rect x="774.4" y="4117" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.35" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (4 samples, 0.05%)</title><rect x="889.1" y="3909" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="892.10" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-listener (3 samples, 0.04%)</title><rect x="48.2" y="5013" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="51.15" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Object.&lt;init&gt; (2 samples, 0.02%)</title><rect x="78.4" y="4645" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="81.39" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.SimpleLeakAwareByteBuf.touch (2 samples, 0.02%)</title><rect x="693.4" y="4693" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="696.44" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="1014.6" y="2277" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1017.64" y="2287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (32 samples, 0.39%)</title><rect x="1015.2" y="2229" width="4.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.22" y="2239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (5 samples, 0.06%)</title><rect x="183.8" y="4533" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="186.78" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.flush (84 samples, 1.02%)</title><rect x="680.2" y="4677" width="12.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.19" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="839.3" y="3621" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="842.28" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="1008.2" y="2469" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.16" y="2479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="988.9" y="3429" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="905.9" y="3413" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="908.94" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="1007.6" y="2517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1010.59" y="2527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="824.6" y="4085" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="827.60" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="1016.7" y="1397" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1019.66" y="1407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="1010.8" y="2485" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="938.5" y="3429" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="765.3" y="3605" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="768.28" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (9 samples, 0.11%)</title><rect x="1011.5" y="2517" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="773.1" y="3813" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="776.06" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="843.6" y="3637" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.60" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.DelegatingMethodAccessorImpl (9 samples, 0.11%)</title><rect x="798.7" y="4549" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="801.68" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="946.3" y="3573" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method (2 samples, 0.02%)</title><rect x="878.9" y="3397" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="881.88" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue$TransferStack.transfer (2 samples, 0.02%)</title><rect x="509.6" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="512.59" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="817.0" y="3717" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="819.97" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$BitmapIndexedNode.assoc (2 samples, 0.02%)</title><rect x="68.9" y="4981" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="71.88" y="4991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="930.4" y="3461" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="933.42" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureCapacityInternal (2 samples, 0.02%)</title><rect x="798.1" y="4549" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="801.11" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="977.2" y="3237" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="980.21" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="892.1" y="3573" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="895.12" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (15 samples, 0.18%)</title><rect x="834.8" y="3925" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="837.82" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (7 samples, 0.09%)</title><rect x="1018.7" y="1445" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Thread.sleep (47 samples, 0.57%)</title><rect x="1049.5" y="4965" width="6.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1052.48" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (6 samples, 0.07%)</title><rect x="756.8" y="3269" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (16 samples, 0.20%)</title><rect x="938.5" y="3941" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="956.5" y="3365" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="959.48" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.main/repl/read-eval-print--9110/fn--9113 (2,321 samples, 28.32%)</title><rect x="700.2" y="4853" width="334.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="703.20" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.main/repl/read-eval-print--9110/fn--9..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (6 samples, 0.07%)</title><rect x="783.9" y="4085" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.85" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (25 samples, 0.31%)</title><rect x="749.2" y="2933" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (60 samples, 0.73%)</title><rect x="1011.5" y="2597" width="8.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="812.4" y="3845" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="815.36" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (3 samples, 0.04%)</title><rect x="172.7" y="3477" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="965.5" y="3125" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="968.55" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="977.6" y="3013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="980.64" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$TransientHashMap.doAssoc (18 samples, 0.22%)</title><rect x="317.1" y="4373" width="2.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="320.09" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="919.6" y="3157" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="950.1" y="3589" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="953.14" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="786.0" y="4085" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="789.01" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (39 samples, 0.48%)</title><rect x="803.3" y="4037" width="5.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="806.29" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="815.4" y="3829" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="818.38" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (5 samples, 0.06%)</title><rect x="779.7" y="3909" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.68" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Object.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1029.0" y="4341" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1032.04" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (6 samples, 0.07%)</title><rect x="313.6" y="4405" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="316.64" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="997.4" y="2917" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1000.36" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (6 samples, 0.07%)</title><rect x="758.7" y="3477" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="1019.2" y="1205" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.25" y="1215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client-middleware/wrap-url (50 samples, 0.61%)</title><rect x="728.0" y="4437" width="7.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="730.99" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="760.4" y="2997" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.39" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (15 samples, 0.18%)</title><rect x="891.4" y="3989" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.40" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="1007.9" y="2453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1010.87" y="2463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeWrite (16 samples, 0.20%)</title><rect x="693.9" y="4773" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="696.87" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="906.7" y="3717" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="909.66" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (10 samples, 0.12%)</title><rect x="823.2" y="4133" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="826.16" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (5 samples, 0.06%)</title><rect x="838.6" y="3701" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="841.56" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.util.TextBuffer.contentsAsString (5 samples, 0.06%)</title><rect x="120.6" y="4597" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="123.57" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="898.7" y="3477" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="901.74" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (23 samples, 0.28%)</title><rect x="955.0" y="3509" width="3.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="958.04" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.java.io/copy (22 samples, 0.27%)</title><rect x="744.8" y="4581" width="3.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="747.84" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseIdealLoop::build_loop_tree() (2 samples, 0.02%)</title><rect x="1169.4" y="4837" width="0.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text text-anchor="" x="1172.41" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="840.0" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="843.00" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (102 samples, 1.24%)</title><rect x="875.0" y="4101" width="14.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="877.99" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="842.0" y="3893" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="845.02" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="920.1" y="3413" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="923.05" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="964.7" y="3285" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="974.8" y="3525" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (6 samples, 0.07%)</title><rect x="978.1" y="3109" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (16 samples, 0.20%)</title><rect x="762.4" y="3829" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.40" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="890.7" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="893.68" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="898.7" y="3669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="901.74" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="898.7" y="3701" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="901.74" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="809.2" y="4021" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="812.19" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Unique_Node_List::push(Node*) (2 samples, 0.02%)</title><rect x="1171.0" y="4821" width="0.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text text-anchor="" x="1174.00" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.&lt;init&gt; (3 samples, 0.04%)</title><rect x="304.7" y="4485" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="307.71" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeWrite0 (6 samples, 0.07%)</title><rect x="692.4" y="4741" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="695.43" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="968.1" y="3413" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="971.14" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>RelocIterator::next() (10 samples, 0.12%)</title><rect x="1179.8" y="4853" width="1.4" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text text-anchor="" x="1182.78" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="842.4" y="3733" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.45" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.server/handle-request/fn--16614/fn--16615 (37 samples, 0.45%)</title><rect x="362.4" y="4661" width="5.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="365.45" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureCapacityInternal (2 samples, 0.02%)</title><rect x="806.2" y="3701" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="809.17" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (31 samples, 0.38%)</title><rect x="821.4" y="4437" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="824.43" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (7 samples, 0.09%)</title><rect x="765.6" y="3813" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="768.57" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/success! (59 samples, 0.72%)</title><rect x="483.8" y="3909" width="8.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="486.81" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="896.9" y="3605" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="899.87" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.text.DecimalFormatSymbols.&lt;init&gt; (2 samples, 0.02%)</title><rect x="790.0" y="4485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="793.04" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="902.1" y="3733" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="905.05" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ConnectionGraph::add_edge(PointsToNode*, PointsToNode*) (8 samples, 0.10%)</title><rect x="1123.5" y="4805" width="1.1" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text text-anchor="" x="1126.48" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (7 samples, 0.09%)</title><rect x="922.9" y="3797" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="1010.2" y="2325" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1013.18" y="2335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method.copy (13 samples, 0.16%)</title><rect x="189.8" y="4501" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="192.82" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="885.1" y="3365" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="888.07" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="931.6" y="3509" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="934.57" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="923.9" y="3765" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="926.94" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="987.1" y="3061" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="990.14" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOfRange (2 samples, 0.02%)</title><rect x="739.9" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="742.94" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead (91 samples, 1.11%)</title><rect x="498.8" y="4581" width="13.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="501.79" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="985.4" y="3237" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="988.41" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="839.3" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="842.28" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (16 samples, 0.20%)</title><rect x="911.7" y="3797" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="914.70" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="757.7" y="3189" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.65" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="747.3" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="750.28" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PooledByteBuf.deallocate (4 samples, 0.05%)</title><rect x="509.9" y="4437" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="512.87" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (3 samples, 0.04%)</title><rect x="768.4" y="3765" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="771.45" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="930.4" y="3221" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="933.42" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/connect/fn--11887 (60 samples, 0.73%)</title><rect x="483.7" y="3925" width="8.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="486.67" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1012.2" y="2181" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.19" y="2191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.writeAndFlush (95 samples, 1.16%)</title><rect x="680.2" y="4789" width="13.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.19" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="869.2" y="4005" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="872.23" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (2 samples, 0.02%)</title><rect x="967.0" y="3269" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="969.99" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (11 samples, 0.13%)</title><rect x="495.0" y="4549" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="498.04" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (6 samples, 0.07%)</title><rect x="1012.8" y="2325" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.77" y="2335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (34 samples, 0.41%)</title><rect x="969.9" y="3541" width="4.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Atom.swap (2 samples, 0.02%)</title><rect x="208.0" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="210.96" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (5 samples, 0.06%)</title><rect x="783.9" y="4053" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.85" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (4 samples, 0.05%)</title><rect x="757.9" y="3333" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.94" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="773.1" y="3893" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="776.06" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (32 samples, 0.39%)</title><rect x="868.9" y="4213" width="4.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="871.94" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="1015.2" y="2181" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.22" y="2191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="839.3" y="3701" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="842.28" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (4 samples, 0.05%)</title><rect x="1009.3" y="2725" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.31" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.assoc (2 samples, 0.02%)</title><rect x="298.5" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="301.52" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="958.1" y="3493" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="961.06" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand (2 samples, 0.02%)</title><rect x="893.7" y="4197" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="896.70" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown_Java] (375 samples, 4.58%)</title><rect x="11.0" y="5029" width="54.0" height="15.0" fill="rgb(228,90,90)" rx="2" ry="2" />
<text text-anchor="" x="14.01" y="5039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[unkn..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="763.8" y="3557" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.84" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="929.0" y="3445" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="931.98" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1017.4" y="1397" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ConnectionGraph::add_fields_to_worklist(FieldNode*, PointsToNode*) (149 samples, 1.82%)</title><rect x="1143.4" y="4789" width="21.4" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text text-anchor="" x="1146.35" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >C..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="285.7" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="288.71" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (7 samples, 0.09%)</title><rect x="957.1" y="3333" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="960.05" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="930.4" y="3333" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="933.42" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.util.TextBuffer.contentsAsString (7 samples, 0.09%)</title><rect x="118.3" y="4581" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="121.27" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="924.2" y="3653" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="927.23" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="992.0" y="2933" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.04" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="967.6" y="3429" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hasheq (5 samples, 0.06%)</title><rect x="328.2" y="4341" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="331.18" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (805 samples, 9.82%)</title><rect x="910.1" y="4165" width="115.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="913.12" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.client..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="751.9" y="2709" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="754.89" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="759.8" y="3525" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.81" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (5 samples, 0.06%)</title><rect x="1019.0" y="1333" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.96" y="1343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="818.6" y="3893" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="821.55" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.more (2 samples, 0.02%)</title><rect x="761.8" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="764.83" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="937.2" y="3141" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="940.18" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (25 samples, 0.31%)</title><rect x="845.8" y="4245" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="848.76" y="4255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="822.7" y="4165" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractByteBufAllocator.directBuffer (4 samples, 0.05%)</title><rect x="678.2" y="4757" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="681.18" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (5 samples, 0.06%)</title><rect x="784.9" y="4181" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="787.86" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="962.1" y="3397" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="965.09" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="993.0" y="3013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.05" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="838.7" y="3637" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="841.71" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="776.8" y="3909" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="779.80" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_jit_write_protect_np (2 samples, 0.02%)</title><rect x="491.6" y="3669" width="0.3" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text text-anchor="" x="494.59" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$7.isSatisfiedBy (10 samples, 0.12%)</title><rect x="730.4" y="4069" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="733.44" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="863.9" y="3749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="866.90" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="835.4" y="3701" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="838.40" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (4 samples, 0.05%)</title><rect x="1025.4" y="4085" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1028.44" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (6 samples, 0.07%)</title><rect x="871.1" y="3925" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.10" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="974.8" y="3509" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (10 samples, 0.12%)</title><rect x="981.2" y="3109" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="984.24" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="978.6" y="3045" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="981.65" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1013.2" y="1925" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="1935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (3 samples, 0.04%)</title><rect x="777.4" y="3973" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="780.37" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="859.3" y="3493" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="862.29" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (16 samples, 0.20%)</title><rect x="993.6" y="3141" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="996.62" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (5 samples, 0.06%)</title><rect x="186.2" y="4565" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="189.22" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (4 samples, 0.05%)</title><rect x="915.2" y="3301" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="918.16" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.fireChannelRead (91 samples, 1.11%)</title><rect x="498.8" y="4613" width="13.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="501.79" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (13 samples, 0.16%)</title><rect x="977.6" y="3285" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="980.64" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken (9 samples, 0.11%)</title><rect x="95.8" y="4437" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="98.81" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ciMethod::get_flow_analysis() (2 samples, 0.02%)</title><rect x="1106.6" y="4853" width="0.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text text-anchor="" x="1109.64" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (5 samples, 0.06%)</title><rect x="1019.0" y="1285" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.96" y="1295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>frame::is_interpreted_frame() const (2 samples, 0.02%)</title><rect x="137.8" y="4565" width="0.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text text-anchor="" x="140.85" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="979.8" y="2981" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="982.80" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (16 samples, 0.20%)</title><rect x="834.7" y="3957" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="837.68" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="988.3" y="3125" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="991.29" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="946.8" y="3445" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="949.83" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="754.3" y="2837" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (6 samples, 0.07%)</title><rect x="846.0" y="4213" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.05" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (53 samples, 0.65%)</title><rect x="951.3" y="3669" width="7.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="954.29" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (4 samples, 0.05%)</title><rect x="917.9" y="3461" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="920.89" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Curly.match (2 samples, 0.02%)</title><rect x="310.5" y="4373" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="313.47" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="987.1" y="3173" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="990.14" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (35 samples, 0.43%)</title><rect x="975.5" y="3621" width="5.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="978.48" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.client$client_handler$reify__16897.channelRead (123 samples, 1.50%)</title><rect x="481.1" y="4645" width="17.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="484.08" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="837.3" y="3749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="840.27" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (23 samples, 0.28%)</title><rect x="955.0" y="3525" width="3.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="958.04" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="892.0" y="3877" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.98" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (14 samples, 0.17%)</title><rect x="829.8" y="3925" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="832.78" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="1012.0" y="2245" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1015.05" y="2255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand (2 samples, 0.02%)</title><rect x="951.3" y="3621" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="954.29" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="957.3" y="3173" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="960.34" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (33 samples, 0.40%)</title><rect x="902.3" y="3877" width="4.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="905.34" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.misc.Unsafe.unpark (12 samples, 0.15%)</title><rect x="369.5" y="4805" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="372.50" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (6 samples, 0.07%)</title><rect x="995.9" y="3141" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.92" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (54 samples, 0.66%)</title><rect x="951.1" y="3701" width="7.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="954.15" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (20 samples, 0.24%)</title><rect x="823.0" y="4261" width="2.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="826.01" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1001.5" y="2917" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.54" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="1008.9" y="2597" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="1008.9" y="2453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (10 samples, 0.12%)</title><rect x="813.5" y="3957" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (6 samples, 0.07%)</title><rect x="908.8" y="3813" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (7 samples, 0.09%)</title><rect x="768.3" y="3909" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="771.30" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="968.7" y="3317" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="971.71" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="933.3" y="3461" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="936.30" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="984.0" y="2773" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seqFrom (3 samples, 0.04%)</title><rect x="291.0" y="4517" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="294.03" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (10 samples, 0.12%)</title><rect x="785.7" y="4229" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.72" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseChaitin::gather_lrg_masks(bool) (3 samples, 0.04%)</title><rect x="1118.6" y="4853" width="0.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text text-anchor="" x="1121.59" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Number.&lt;init&gt; (3 samples, 0.04%)</title><rect x="1023.3" y="3877" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1026.28" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.conj (5 samples, 0.06%)</title><rect x="499.5" y="4389" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="502.51" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.conj (9 samples, 0.11%)</title><rect x="733.6" y="4341" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="736.61" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (16 samples, 0.20%)</title><rect x="899.8" y="3669" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="902.75" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (76 samples, 0.93%)</title><rect x="927.5" y="4005" width="11.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="930.54" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.category (2 samples, 0.02%)</title><rect x="803.6" y="3989" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="806.58" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers$LongOps.combine (3 samples, 0.04%)</title><rect x="828.6" y="3909" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="831.63" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="1016.4" y="1829" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.37" y="1839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (41 samples, 0.50%)</title><rect x="88.0" y="4421" width="5.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="91.03" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="1013.2" y="2037" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="2047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="909.4" y="3701" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="912.40" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="983.0" y="3125" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="985.97" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="973.9" y="3125" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="976.90" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (4 samples, 0.05%)</title><rect x="765.0" y="3733" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="952.6" y="3365" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="955.59" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.MethodImplCache.fnFor (2 samples, 0.02%)</title><rect x="787.6" y="4389" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="790.60" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractByteBufAllocator.directBuffer (3 samples, 0.04%)</title><rect x="694.6" y="4677" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="697.59" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (8 samples, 0.10%)</title><rect x="865.6" y="3781" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.auto_flatten_seq.AutoFlattenSeq.conj_flat (2 samples, 0.02%)</title><rect x="333.7" y="4581" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="336.65" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="1018.0" y="1701" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.95" y="1711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="898.7" y="3557" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="901.74" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="865.2" y="3621" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="977.6" y="3077" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="980.64" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="861.6" y="3957" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="864.60" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="755.1" y="3269" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.06" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="846.0" y="4021" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="849.05" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Object.hashCode (2 samples, 0.02%)</title><rect x="211.3" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="214.27" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (92 samples, 1.12%)</title><rect x="749.0" y="3829" width="13.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.01" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="962.2" y="3125" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="965.24" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (17 samples, 0.21%)</title><rect x="783.3" y="4261" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.28" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="749.3" y="165" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="755.1" y="3333" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.06" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="903.1" y="3541" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="906.06" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.equiv (2 samples, 0.02%)</title><rect x="302.1" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="305.12" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="909.4" y="3525" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="912.40" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (2 samples, 0.02%)</title><rect x="332.1" y="4517" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="335.07" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1008.9" y="2341" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/swap! (5 samples, 0.06%)</title><rect x="205.4" y="4613" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="208.37" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="967.6" y="3461" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="842.0" y="3813" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="845.02" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="955.8" y="3141" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="958.76" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="932.7" y="3429" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="935.72" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="971.6" y="3141" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="974.59" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="822.0" y="3989" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="931.0" y="3445" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="933.99" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="863.0" y="3541" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="866.04" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.ByteToMessageDecoder.channelReadComplete (2 samples, 0.02%)</title><rect x="512.5" y="4741" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="515.46" y="4751.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="865.6" y="3461" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.util.TextBuffer.contentsAsString (3 samples, 0.04%)</title><rect x="108.8" y="4533" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="111.77" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.GeneratedMethodAccessor49 (2 samples, 0.02%)</title><rect x="900.8" y="3285" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="903.76" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1004.6" y="2389" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.56" y="2399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="940.1" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="943.06" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.cons (5 samples, 0.06%)</title><rect x="499.5" y="4373" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="502.51" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (9 samples, 0.11%)</title><rect x="949.4" y="3893" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pthread_jit_write_protect_np (2 samples, 0.02%)</title><rect x="712.9" y="4405" width="0.3" height="15.0" fill="rgb(215,71,71)" rx="2" ry="2" />
<text text-anchor="" x="715.87" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (9 samples, 0.11%)</title><rect x="872.0" y="3989" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.96" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (126 samples, 1.54%)</title><rect x="827.6" y="4229" width="18.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="830.62" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (28 samples, 0.34%)</title><rect x="779.0" y="4293" width="4.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="781.96" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1015.6" y="1717" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.65" y="1727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (3 samples, 0.04%)</title><rect x="172.7" y="3541" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1017.4" y="1477" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="1015.9" y="2037" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.94" y="2047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentVector.arrayFor (3 samples, 0.04%)</title><rect x="128.3" y="4693" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="131.35" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.GeneratedMethodAccessor49 (3 samples, 0.04%)</title><rect x="929.1" y="3205" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="932.12" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11874/deferred--11875 (2 samples, 0.02%)</title><rect x="367.5" y="4629" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="370.48" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="817.3" y="3957" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="820.25" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (21 samples, 0.26%)</title><rect x="996.8" y="3237" width="3.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.79" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method (3 samples, 0.04%)</title><rect x="929.1" y="3237" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="932.12" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="926.1" y="3477" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="929.10" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$7.isSatisfiedBy (13 samples, 0.16%)</title><rect x="730.0" y="4197" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="733.01" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ParallelScavengeHeap::failed_mem_allocate(unsigned long) (10 samples, 0.12%)</title><rect x="1182.2" y="4901" width="1.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text text-anchor="" x="1185.23" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (14 samples, 0.17%)</title><rect x="1004.1" y="2981" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.13" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (7 samples, 0.09%)</title><rect x="768.3" y="3925" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="771.30" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.gt (2 samples, 0.02%)</title><rect x="857.6" y="4021" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="860.57" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (13 samples, 0.16%)</title><rect x="760.2" y="3685" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.success (6 samples, 0.07%)</title><rect x="382.5" y="4757" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="385.46" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>LIR_Assembler::emit_lir_list(LIR_List*) (3 samples, 0.04%)</title><rect x="1175.9" y="4821" width="0.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text text-anchor="" x="1178.89" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="972.5" y="3365" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="975.46" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (6 samples, 0.07%)</title><rect x="837.0" y="3925" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="839.98" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (26 samples, 0.32%)</title><rect x="858.4" y="4037" width="3.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="861.43" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (6 samples, 0.07%)</title><rect x="947.7" y="3349" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="950.69" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.equiv (2 samples, 0.02%)</title><rect x="208.8" y="4357" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.83" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.nio.charset.Charset.lookup (2 samples, 0.02%)</title><rect x="743.8" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="746.83" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="920.8" y="3301" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="923.77" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.formatTo (2 samples, 0.02%)</title><rect x="896.6" y="3589" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="899.58" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (8 samples, 0.10%)</title><rect x="1011.5" y="2485" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (12 samples, 0.15%)</title><rect x="917.7" y="3685" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="920.75" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (3 samples, 0.04%)</title><rect x="277.9" y="4501" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="280.93" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (17 samples, 0.21%)</title><rect x="886.2" y="3813" width="2.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="889.22" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="859.3" y="3573" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="862.29" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="956.5" y="3317" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="959.48" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="775.5" y="3765" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.50" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (3 samples, 0.04%)</title><rect x="178.0" y="4357" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="181.02" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="770.5" y="3573" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="754.3" y="2917" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (9 samples, 0.11%)</title><rect x="949.4" y="3845" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (3 samples, 0.04%)</title><rect x="844.3" y="4053" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="847.32" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.prepRet (3 samples, 0.04%)</title><rect x="172.1" y="4629" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.11" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="963.8" y="3013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="966.82" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (16 samples, 0.20%)</title><rect x="986.6" y="3269" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.57" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="817.3" y="3829" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.25" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (8 samples, 0.10%)</title><rect x="343.0" y="4421" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="346.01" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (11 samples, 0.13%)</title><rect x="944.7" y="3589" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="947.67" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.GeneratedMethodAccessor50 (3 samples, 0.04%)</title><rect x="200.0" y="4533" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="203.04" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>vframeStreamCommon::fill_from_compiled_frame(int) (2 samples, 0.02%)</title><rect x="139.7" y="4549" width="0.3" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text text-anchor="" x="142.72" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (21 samples, 0.26%)</title><rect x="858.6" y="3845" width="3.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="861.57" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (9 samples, 0.11%)</title><rect x="877.0" y="3541" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="880.00" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (89 samples, 1.09%)</title><rect x="894.7" y="4101" width="12.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="897.71" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="964.7" y="3317" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="967.68" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (11 samples, 0.13%)</title><rect x="758.7" y="3605" width="1.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (32 samples, 0.39%)</title><rect x="868.9" y="4229" width="4.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="871.94" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (282 samples, 3.44%)</title><rect x="748.1" y="4581" width="40.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.15" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >che..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="1010.0" y="2597" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1013.03" y="2607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util$4.equiv (2 samples, 0.02%)</title><rect x="339.8" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="342.84" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (2 samples, 0.02%)</title><rect x="1020.7" y="3077" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1023.69" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="1015.6" y="1749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.65" y="1759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (7 samples, 0.09%)</title><rect x="286.4" y="4421" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="289.43" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.read (3 samples, 0.04%)</title><rect x="513.0" y="4677" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="516.04" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="946.8" y="3365" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="949.83" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="871.4" y="3765" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.39" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (16 samples, 0.20%)</title><rect x="986.6" y="3349" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.57" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (5 samples, 0.06%)</title><rect x="922.2" y="3813" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="925.21" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="940.1" y="3525" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="943.06" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="882.2" y="3525" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="885.19" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (3 samples, 0.04%)</title><rect x="784.1" y="3925" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="787.14" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (169 samples, 2.06%)</title><rect x="86.2" y="4565" width="24.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="89.16" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="914.6" y="3797" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="917.58" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="929.0" y="3477" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="931.98" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="987.7" y="2965" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (11 samples, 0.13%)</title><rect x="939.2" y="3749" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="942.20" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1016.1" y="1877" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.08" y="1887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1000.8" y="2629" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1003.82" y="2639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (8 samples, 0.10%)</title><rect x="862.8" y="3877" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="865.75" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeMatchingMethod (2 samples, 0.02%)</title><rect x="833.8" y="3589" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="836.81" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$7.isSatisfiedBy (7 samples, 0.09%)</title><rect x="730.9" y="4037" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="733.87" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1017.4" y="1541" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="780.7" y="3813" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="783.69" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="779.1" y="3925" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>frame::oops_interpreted_do(OopClosure*, CLDClosure*, RegisterMap const*, bool) (3 samples, 0.04%)</title><rect x="1105.9" y="4933" width="0.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text text-anchor="" x="1108.92" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/listener-exists? (2 samples, 0.02%)</title><rect x="207.7" y="4549" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="210.67" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="987.7" y="2933" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="2943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (8 samples, 0.10%)</title><rect x="1011.5" y="2437" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Monitor::lock_without_safepoint_check() (4 samples, 0.05%)</title><rect x="1058.3" y="4949" width="0.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text text-anchor="" x="1061.27" y="4959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="957.3" y="3093" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="960.34" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="757.4" y="3141" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.36" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (4 samples, 0.05%)</title><rect x="1113.4" y="4853" width="0.6" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text text-anchor="" x="1116.41" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (12 samples, 0.15%)</title><rect x="829.9" y="3701" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="832.92" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (3 samples, 0.04%)</title><rect x="887.9" y="3637" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="890.95" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (19 samples, 0.23%)</title><rect x="766.9" y="3973" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="769.86" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap$ArrayNode.find (2 samples, 0.02%)</title><rect x="337.1" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="340.11" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (7 samples, 0.09%)</title><rect x="973.6" y="3285" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="976.61" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (5 samples, 0.06%)</title><rect x="990.3" y="3109" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="993.31" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="842.6" y="3589" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="845.59" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (7 samples, 0.09%)</title><rect x="973.6" y="3317" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="976.61" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="817.4" y="3781" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.40" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (11 samples, 0.13%)</title><rect x="944.7" y="3397" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="947.67" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="869.8" y="3989" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.80" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (11 samples, 0.13%)</title><rect x="908.4" y="3861" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="911.39" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOfRange (3 samples, 0.04%)</title><rect x="109.9" y="4485" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="112.92" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="908.8" y="3525" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="935.2" y="3413" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="938.17" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="871.4" y="3733" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="874.39" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="869.4" y="3685" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.37" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (4 samples, 0.05%)</title><rect x="328.3" y="4309" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="331.32" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="879.5" y="3653" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="882.45" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="1014.6" y="2213" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1017.64" y="2223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.DefaultHttpMessage.&lt;init&gt; (2 samples, 0.02%)</title><rect x="720.4" y="4117" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="723.36" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead (263 samples, 3.21%)</title><rect x="474.5" y="4853" width="37.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.46" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="848.5" y="3973" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.50" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="984.0" y="3045" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="1007.9" y="2309" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.87" y="2319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="757.4" y="3205" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.36" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="1004.3" y="2693" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.28" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="822.7" y="4085" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="780.7" y="3845" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="783.69" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="908.8" y="3477" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken (11 samples, 0.13%)</title><rect x="115.5" y="4581" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="118.53" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="1016.5" y="1781" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.51" y="1791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (15 samples, 0.18%)</title><rect x="810.9" y="4053" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="813.92" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (106 samples, 1.29%)</title><rect x="894.7" y="4213" width="15.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="897.71" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>CompileQueue::get() (27 samples, 0.33%)</title><rect x="1177.8" y="4933" width="3.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text text-anchor="" x="1180.76" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (22 samples, 0.27%)</title><rect x="870.4" y="4133" width="3.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="873.38" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="974.2" y="3205" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="977.18" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="923.2" y="3541" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="926.22" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="996.5" y="2965" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.50" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="817.3" y="3861" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="820.25" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue.offer (15 samples, 0.18%)</title><rect x="696.9" y="4805" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="699.89" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seqFrom (2 samples, 0.02%)</title><rect x="312.5" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="315.49" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="892.8" y="3685" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="895.84" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (6 samples, 0.07%)</title><rect x="890.4" y="3749" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="893.39" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (11 samples, 0.13%)</title><rect x="892.0" y="3925" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.98" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="902.8" y="3685" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="905.77" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (5 samples, 0.06%)</title><rect x="768.3" y="3877" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="771.30" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="848.5" y="3749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.50" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/success! (71 samples, 0.87%)</title><rect x="483.2" y="4165" width="10.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="486.24" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="919.6" y="3333" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="922.62" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>NMethodSweeper::sweep_code_cache() (26 samples, 0.32%)</title><rect x="1177.9" y="4901" width="3.7" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text text-anchor="" x="1180.91" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/catch' (3 samples, 0.04%)</title><rect x="716.9" y="4565" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="719.91" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method (2 samples, 0.02%)</title><rect x="876.6" y="3733" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="879.57" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="936.8" y="3461" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="939.75" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="917.9" y="3269" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="920.89" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>OldToYoungRootsTask::do_it(GCTaskManager*, unsigned int) (6 samples, 0.07%)</title><rect x="1059.7" y="4965" width="0.9" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text text-anchor="" x="1062.70" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (12 samples, 0.15%)</title><rect x="865.2" y="3877" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="972.5" y="3173" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="975.46" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.02%)</title><rect x="1110.8" y="4805" width="0.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text text-anchor="" x="1113.82" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="825.2" y="4133" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="828.17" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (16 samples, 0.20%)</title><rect x="986.6" y="3253" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.57" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="768.3" y="3829" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="771.30" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (12 samples, 0.15%)</title><rect x="994.2" y="3061" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.20" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="983.7" y="2997" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="986.69" y="3007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="908.0" y="3829" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="910.96" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="809.2" y="3973" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="812.19" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/merge (4 samples, 0.05%)</title><rect x="77.8" y="4709" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="80.81" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (2 samples, 0.02%)</title><rect x="938.0" y="3685" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="941.05" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="887.2" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="890.23" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Node.match (14 samples, 0.17%)</title><rect x="272.0" y="4469" width="2.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="275.03" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (8 samples, 0.10%)</title><rect x="756.8" y="3397" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (5 samples, 0.06%)</title><rect x="835.3" y="3781" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="838.25" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred.success (2 samples, 0.02%)</title><rect x="493.2" y="3957" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="496.17" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="1001.1" y="3077" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (4 samples, 0.05%)</title><rect x="915.2" y="3333" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="918.16" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="858.9" y="3781" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="861.86" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Matcher.match (359 samples, 4.38%)</title><rect x="225.2" y="4533" width="51.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="228.24" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.System.nanoTime (2 samples, 0.02%)</title><rect x="1038.8" y="4965" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1041.83" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (7 samples, 0.09%)</title><rect x="925.8" y="3781" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="928.81" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (4 samples, 0.05%)</title><rect x="749.3" y="1621" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="958.1" y="3477" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="961.06" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (7 samples, 0.09%)</title><rect x="1004.9" y="2757" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.85" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (4 samples, 0.05%)</title><rect x="767.2" y="3813" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.15" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="839.9" y="3669" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="842.86" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>compojure.core/routing/fn--20627 (2,000 samples, 24.40%)</title><rect x="73.6" y="4837" width="288.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="76.64" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >compojure.core/routing/fn--20627</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="957.3" y="3189" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="960.34" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="861.6" y="3941" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="864.60" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.subSequence (2 samples, 0.02%)</title><rect x="792.6" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="795.64" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>compojure.core/route-request (2 samples, 0.02%)</title><rect x="74.2" y="4757" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="77.21" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (2 samples, 0.02%)</title><rect x="909.7" y="3797" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="912.69" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/conj--5407 (24 samples, 0.29%)</title><rect x="291.5" y="4517" width="3.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="294.47" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="818.0" y="3749" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.97" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Formatter.format (23 samples, 0.28%)</title><rect x="738.9" y="4581" width="3.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="741.93" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (33 samples, 0.40%)</title><rect x="749.2" y="3125" width="4.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="913.3" y="3605" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="916.28" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Method (2 samples, 0.02%)</title><rect x="963.8" y="2917" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="966.82" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="907.2" y="3877" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="910.24" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (6 samples, 0.07%)</title><rect x="768.3" y="3893" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="771.30" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1016.1" y="1829" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.08" y="1839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="996.2" y="2869" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="999.21" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="767.3" y="3621" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.30" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::javaTimeNanos() (8 samples, 0.10%)</title><rect x="60.0" y="5013" width="1.1" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text text-anchor="" x="62.96" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (2 samples, 0.02%)</title><rect x="819.1" y="3925" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="822.13" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (2 samples, 0.02%)</title><rect x="210.1" y="4357" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="213.12" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="835.4" y="3717" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="838.40" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="755.1" y="3349" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.06" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="1014.6" y="2229" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1017.64" y="2239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="1015.2" y="2117" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.22" y="2127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="997.4" y="2853" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1000.36" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.util.locale.provider.JRELocaleProviderAdapter.getLocaleResources (2 samples, 0.02%)</title><rect x="738.4" y="4469" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="741.36" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.write (2 samples, 0.02%)</title><rect x="676.4" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="679.45" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="908.8" y="3573" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="1008.9" y="2789" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="892.1" y="3621" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="895.12" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="1016.7" y="1349" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.66" y="1359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="1013.8" y="2133" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.78" y="2143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="924.7" y="3781" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="927.66" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="763.6" y="3605" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.55" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="779.4" y="3909" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.39" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="901.3" y="3333" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="904.33" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="993.8" y="2965" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="996.77" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (5 samples, 0.06%)</title><rect x="782.0" y="4165" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="784.98" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (82 samples, 1.00%)</title><rect x="911.1" y="4037" width="11.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="914.12" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/success! (6 samples, 0.07%)</title><rect x="382.5" y="4773" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="385.46" y="4783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (15 samples, 0.18%)</title><rect x="838.6" y="3893" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="841.56" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="946.8" y="3429" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.83" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="920.1" y="3445" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="923.05" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.cons (9 samples, 0.11%)</title><rect x="733.6" y="4325" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="736.61" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util$4.equiv (2 samples, 0.02%)</title><rect x="278.8" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="281.80" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>compojure.core/routing (2,000 samples, 24.40%)</title><rect x="73.6" y="4869" width="288.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="76.64" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >compojure.core/routing</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="973.9" y="3109" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="976.90" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="863.9" y="3861" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="866.90" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="880.5" y="3765" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="923.2" y="3621" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="926.22" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (15 samples, 0.18%)</title><rect x="810.9" y="4069" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="813.92" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (2 samples, 0.02%)</title><rect x="785.0" y="4069" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.00" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (5 samples, 0.06%)</title><rect x="1006.1" y="2709" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (34 samples, 0.41%)</title><rect x="851.5" y="3957" width="4.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="854.52" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.ATransientMap.assoc (3 samples, 0.04%)</title><rect x="117.1" y="4565" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="120.12" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="871.1" y="3909" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.10" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand (3 samples, 0.04%)</title><rect x="1029.0" y="4437" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1032.04" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="892.1" y="3557" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="895.12" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (20 samples, 0.24%)</title><rect x="934.9" y="3717" width="2.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="937.88" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.multiply (2 samples, 0.02%)</title><rect x="877.1" y="3493" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="880.15" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.reflect.Executable.&lt;init&gt; (9 samples, 0.11%)</title><rect x="190.4" y="4469" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="193.40" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="969.6" y="3733" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="972.58" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (54 samples, 0.66%)</title><rect x="914.4" y="3813" width="7.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="917.44" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="1004.3" y="2453" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.28" y="2463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (28 samples, 0.34%)</title><rect x="922.9" y="3957" width="4.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.aleph.dirigiste.Pool.release (2 samples, 0.02%)</title><rect x="376.8" y="4805" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="379.84" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName (2 samples, 0.02%)</title><rect x="764.7" y="3909" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="767.70" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureCapacityInternal (9 samples, 0.11%)</title><rect x="170.5" y="4613" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="173.53" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.conj (5 samples, 0.06%)</title><rect x="375.4" y="4757" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="378.40" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="817.4" y="3685" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.40" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (15 samples, 0.18%)</title><rect x="838.6" y="3861" width="2.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="841.56" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="982.7" y="3125" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="985.68" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (6 samples, 0.07%)</title><rect x="942.2" y="3445" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="945.22" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (25 samples, 0.31%)</title><rect x="845.8" y="4341" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="848.76" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (7 samples, 0.09%)</title><rect x="770.5" y="3813" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (12 samples, 0.15%)</title><rect x="756.8" y="3493" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName (3 samples, 0.04%)</title><rect x="92.6" y="4373" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="95.64" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (4 samples, 0.05%)</title><rect x="991.2" y="3013" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="994.17" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ProtectionDomainCacheTable::oops_do(OopClosure*) (4 samples, 0.05%)</title><rect x="1066.3" y="4933" width="0.6" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text text-anchor="" x="1069.33" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (5 samples, 0.06%)</title><rect x="872.0" y="3973" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="874.96" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (3 samples, 0.04%)</title><rect x="761.7" y="3605" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="764.68" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="1013.2" y="2133" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="2143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-negative-listener (3 samples, 0.04%)</title><rect x="209.5" y="4565" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="212.55" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hasheq (4 samples, 0.05%)</title><rect x="330.1" y="4469" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="333.05" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="817.0" y="3749" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="819.97" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (8 samples, 0.10%)</title><rect x="830.5" y="3669" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="833.50" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/subscribe--11925 (3 samples, 0.04%)</title><rect x="724.7" y="4437" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="727.68" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (3 samples, 0.04%)</title><rect x="876.1" y="3749" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="879.14" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Start.match (19 samples, 0.23%)</title><rect x="793.8" y="4485" width="2.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="796.79" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureCapacityInternal (2 samples, 0.02%)</title><rect x="853.4" y="3541" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="856.39" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="1015.2" y="2069" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.22" y="2079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.aleph.dirigiste.Pool.access$500 (56 samples, 0.68%)</title><rect x="1048.5" y="4997" width="8.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1051.47" y="5007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (3 samples, 0.04%)</title><rect x="172.7" y="3589" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureExplicitCapacity (2 samples, 0.02%)</title><rect x="804.3" y="3941" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="807.30" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (4 samples, 0.05%)</title><rect x="760.2" y="3221" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.24" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete (10 samples, 0.12%)</title><rect x="512.3" y="4853" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="515.32" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="818.8" y="3797" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="821.84" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="994.9" y="2805" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.92" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="860.7" y="3637" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="863.73" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue$TransferStack.transfer (58 samples, 0.71%)</title><rect x="484.0" y="3829" width="8.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="486.96" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (9 samples, 0.11%)</title><rect x="860.0" y="3717" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="863.01" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (2 samples, 0.02%)</title><rect x="750.0" y="1781" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="753.02" y="1791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (19 samples, 0.23%)</title><rect x="766.9" y="3989" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="769.86" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (926 samples, 11.30%)</title><rect x="893.6" y="4293" width="133.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="896.56" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >example.client/r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="962.7" y="3269" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="965.67" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (6 samples, 0.07%)</title><rect x="979.7" y="3541" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="982.66" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (10 samples, 0.12%)</title><rect x="823.2" y="4053" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="826.16" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="952.2" y="3157" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="955.16" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (65 samples, 0.79%)</title><rect x="483.2" y="4085" width="9.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="486.24" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (3 samples, 0.04%)</title><rect x="772.3" y="3861" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="775.34" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.assoc (4 samples, 0.05%)</title><rect x="278.5" y="4469" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="281.51" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (8 samples, 0.10%)</title><rect x="862.8" y="3797" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="865.75" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1015.2" y="1925" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.22" y="1935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (19 samples, 0.23%)</title><rect x="989.9" y="3317" width="2.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="992.88" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="1011.5" y="2245" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="917.9" y="3285" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="920.89" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (13 samples, 0.16%)</title><rect x="904.6" y="3653" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.65" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="959.1" y="3461" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="962.07" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (16 samples, 0.20%)</title><rect x="924.5" y="3829" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="927.51" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.add (3 samples, 0.04%)</title><rect x="288.6" y="4565" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="291.59" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="925.1" y="3717" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="928.09" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/swap! (25 samples, 0.31%)</title><rect x="284.0" y="4533" width="3.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="286.98" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="879.5" y="3589" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="882.45" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="815.0" y="4037" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="817.95" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.createNode (3 samples, 0.04%)</title><rect x="354.1" y="4421" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="357.09" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (48 samples, 0.59%)</title><rect x="813.4" y="4181" width="6.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.37" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="938.5" y="3557" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RestFn.invoke (10 samples, 0.12%)</title><rect x="79.1" y="4661" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="82.11" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RestFn.invoke (69 samples, 0.84%)</title><rect x="738.1" y="4629" width="9.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="741.07" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.BufferedReader.read (22 samples, 0.27%)</title><rect x="81.0" y="4629" width="3.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="83.98" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="917.9" y="3445" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="920.89" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (16 samples, 0.20%)</title><rect x="813.5" y="4101" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="816.51" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (3 samples, 0.04%)</title><rect x="210.0" y="4453" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="212.98" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (11 samples, 0.13%)</title><rect x="1002.1" y="2789" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1005.12" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (5 samples, 0.06%)</title><rect x="841.3" y="3893" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="844.30" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="1015.6" y="1845" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.65" y="1855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (11 samples, 0.13%)</title><rect x="805.3" y="3893" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="808.31" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="904.2" y="3237" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.21" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractByteBuf.setCharSequence0 (2 samples, 0.02%)</title><rect x="677.0" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="680.03" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (2 samples, 0.02%)</title><rect x="758.7" y="3317" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.66" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (14 samples, 0.17%)</title><rect x="1004.1" y="3013" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1007.13" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (3 samples, 0.04%)</title><rect x="178.0" y="4373" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="181.02" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (10 samples, 0.12%)</title><rect x="779.1" y="4101" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="1007.6" y="2453" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.59" y="2463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="207.2" y="4549" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="210.24" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="1008.9" y="2517" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="914.0" y="3701" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="917.00" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="782.0" y="4117" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="784.98" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (4 samples, 0.05%)</title><rect x="749.3" y="1637" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks (195 samples, 2.38%)</title><rect x="671.7" y="4933" width="28.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="674.70" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >i..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="1008.9" y="2773" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (19 samples, 0.23%)</title><rect x="749.2" y="2757" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="987.7" y="2981" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="2991.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (17 samples, 0.21%)</title><rect x="1017.4" y="1941" width="2.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (6 samples, 0.07%)</title><rect x="763.8" y="3733" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.84" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (130 samples, 1.59%)</title><rect x="874.8" y="4261" width="18.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="877.84" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/rand-int (3 samples, 0.04%)</title><rect x="1029.0" y="4453" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1032.04" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (125 samples, 1.53%)</title><rect x="850.7" y="4181" width="18.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="853.66" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="814.2" y="3781" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="817.23" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (5 samples, 0.06%)</title><rect x="822.0" y="4069" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (7 samples, 0.09%)</title><rect x="809.0" y="4181" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="812.05" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.DefaultHttpHeaders.set (2 samples, 0.02%)</title><rect x="720.9" y="4165" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="723.94" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (806 samples, 9.83%)</title><rect x="910.0" y="4197" width="116.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="912.97" y="4207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >clojure.core/r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (2 samples, 0.02%)</title><rect x="1002.5" y="2613" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1005.55" y="2623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (19 samples, 0.23%)</title><rect x="749.2" y="2725" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (6 samples, 0.07%)</title><rect x="756.8" y="3349" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="759.79" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="943.1" y="3461" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="946.09" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (4 samples, 0.05%)</title><rect x="770.5" y="3733" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (11 samples, 0.13%)</title><rect x="1002.1" y="2805" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1005.12" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (16 samples, 0.20%)</title><rect x="899.8" y="3813" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="902.75" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (5 samples, 0.06%)</title><rect x="783.9" y="4037" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.85" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (12 samples, 0.15%)</title><rect x="1004.1" y="2853" width="1.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.13" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (3 samples, 0.04%)</title><rect x="852.0" y="3861" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="854.95" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="912.3" y="3525" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="915.28" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="841.3" y="3717" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="844.30" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (125 samples, 1.53%)</title><rect x="748.9" y="4021" width="18.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.87" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (17 samples, 0.21%)</title><rect x="881.5" y="3877" width="2.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="884.47" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (5 samples, 0.06%)</title><rect x="771.5" y="3797" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="774.47" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (5 samples, 0.06%)</title><rect x="817.8" y="3925" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.83" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="936.0" y="3333" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="939.03" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (12 samples, 0.15%)</title><rect x="765.0" y="3957" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (79 samples, 0.96%)</title><rect x="857.3" y="4085" width="11.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="860.28" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.assoc (5 samples, 0.06%)</title><rect x="375.4" y="4837" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="378.40" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Matcher::match_tree(Node const*) (2 samples, 0.02%)</title><rect x="1110.8" y="4837" width="0.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text text-anchor="" x="1113.82" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/type (2 samples, 0.02%)</title><rect x="80.5" y="4645" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="83.55" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="986.7" y="3109" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="989.71" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (5 samples, 0.06%)</title><rect x="507.1" y="4469" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="510.14" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="774.6" y="3845" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="846.0" y="3973" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="849.05" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="996.9" y="2901" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.93" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (67 samples, 0.82%)</title><rect x="373.7" y="4885" width="9.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="376.67" y="4895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (4 samples, 0.05%)</title><rect x="934.0" y="3477" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="937.02" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="890.0" y="3749" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.CombinedChannelDuplexHandler.flush (85 samples, 1.04%)</title><rect x="680.2" y="4725" width="12.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="683.19" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (3 samples, 0.04%)</title><rect x="315.9" y="4501" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="318.94" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="1006.9" y="2869" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1009.87" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::current_thread_enable_wx_impl(WXMode) (2 samples, 0.02%)</title><rect x="381.6" y="4645" width="0.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text text-anchor="" x="384.59" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="839.9" y="3637" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="842.86" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (2 samples, 0.02%)</title><rect x="306.4" y="4485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="309.44" y="4495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="937.0" y="3429" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="940.04" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JVM_IHashCode (11 samples, 0.13%)</title><rect x="357.4" y="4421" width="1.6" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text text-anchor="" x="360.41" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="815.2" y="3845" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="818.24" y="3855.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="872.7" y="3653" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="875.68" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="763.6" y="3637" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.55" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead (21 samples, 0.26%)</title><rect x="477.6" y="4709" width="3.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="480.62" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (5 samples, 0.06%)</title><rect x="1000.4" y="2901" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1003.39" y="2911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (2 samples, 0.02%)</title><rect x="182.2" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="185.19" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.format (2 samples, 0.02%)</title><rect x="822.7" y="3701" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (31 samples, 0.38%)</title><rect x="749.2" y="3093" width="4.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (2 samples, 0.02%)</title><rect x="902.8" y="3541" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="905.77" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="976.1" y="3013" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.06" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (3 samples, 0.04%)</title><rect x="320.1" y="4437" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="323.12" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (61 samples, 0.74%)</title><rect x="880.9" y="4005" width="8.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="883.89" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken (9 samples, 0.11%)</title><rect x="101.6" y="4501" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="104.57" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOfRange (5 samples, 0.06%)</title><rect x="1056.7" y="4965" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1059.68" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (8 samples, 0.10%)</title><rect x="343.0" y="4469" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="346.01" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util$4.equiv (2 samples, 0.02%)</title><rect x="208.8" y="4453" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.83" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="751.9" y="2693" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="754.89" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="835.4" y="3685" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="838.40" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.DefaultChannelPipeline$HeadContext.flush (24 samples, 0.29%)</title><rect x="673.0" y="4517" width="3.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (19 samples, 0.23%)</title><rect x="895.7" y="3893" width="2.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="898.72" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (6 samples, 0.07%)</title><rect x="900.2" y="3525" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="903.18" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="1015.6" y="1701" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1018.65" y="1711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>IR::IR(Compilation*, ciMethod*, int) (2 samples, 0.02%)</title><rect x="1175.5" y="4837" width="0.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text text-anchor="" x="1178.46" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="946.8" y="3461" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="949.83" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (5 samples, 0.06%)</title><rect x="1001.1" y="2965" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.02%)</title><rect x="738.9" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="741.93" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (19 samples, 0.23%)</title><rect x="989.9" y="3349" width="2.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="992.88" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (3 samples, 0.04%)</title><rect x="754.3" y="2821" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="2831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (11 samples, 0.13%)</title><rect x="1018.2" y="1701" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1021.24" y="1711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (2 samples, 0.02%)</title><rect x="174.7" y="4085" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="177.70" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.format (2 samples, 0.02%)</title><rect x="896.6" y="3605" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="899.58" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="904.1" y="3621" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="907.07" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (5 samples, 0.06%)</title><rect x="183.8" y="4517" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="186.78" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (14 samples, 0.17%)</title><rect x="805.3" y="4005" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="808.31" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (7 samples, 0.09%)</title><rect x="780.5" y="4053" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="783.54" y="4063.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (36 samples, 0.44%)</title><rect x="1014.6" y="2325" width="5.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1017.64" y="2335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.AFn.applyToHelper (4 samples, 0.05%)</title><rect x="508.0" y="4453" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="511.00" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="855.3" y="3733" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="858.26" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="841.4" y="3589" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="844.44" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="763.6" y="3509" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.55" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (2 samples, 0.02%)</title><rect x="1169.8" y="4821" width="0.3" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text text-anchor="" x="1172.84" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/partial/fn--5857 (169 samples, 2.06%)</title><rect x="713.6" y="4629" width="24.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="716.59" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="987.7" y="3077" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="990.72" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="833.8" y="3653" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="836.81" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (3 samples, 0.04%)</title><rect x="993.8" y="3061" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="996.77" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (7 samples, 0.09%)</title><rect x="809.0" y="4165" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="812.05" y="4175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="807.0" y="3893" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="810.03" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (2 samples, 0.02%)</title><rect x="359.1" y="4469" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="362.13" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="855.3" y="3749" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="858.26" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="1011.5" y="2165" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="984.0" y="2805" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (28 samples, 0.34%)</title><rect x="922.9" y="4021" width="4.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyRequest.valAt (2 samples, 0.02%)</title><rect x="78.7" y="4709" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="81.67" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (81 samples, 0.99%)</title><rect x="911.3" y="4021" width="11.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="914.27" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="972.5" y="3317" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="975.46" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/swap! (11 samples, 0.13%)</title><rect x="353.5" y="4549" width="1.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="356.52" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (6 samples, 0.07%)</title><rect x="865.9" y="3701" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (5 samples, 0.06%)</title><rect x="882.2" y="3557" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="885.19" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.BufferedStream.put (3 samples, 0.04%)</title><rect x="511.5" y="4533" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="514.46" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="971.3" y="3013" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="974.31" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (5 samples, 0.06%)</title><rect x="926.1" y="3685" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="929.10" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="953.7" y="3141" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.74" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (5 samples, 0.06%)</title><rect x="842.4" y="3877" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="845.45" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (5 samples, 0.06%)</title><rect x="1025.3" y="4133" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1028.30" y="4143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers$LongOps.multiply (2 samples, 0.02%)</title><rect x="951.3" y="3589" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="954.29" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (5 samples, 0.06%)</title><rect x="955.6" y="3413" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="958.61" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="860.2" y="3685" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="863.16" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Curly.match0 (8 samples, 0.10%)</title><rect x="794.9" y="4389" width="1.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="797.94" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="858.9" y="3765" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="861.86" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (50 samples, 0.61%)</title><rect x="1012.8" y="2485" width="7.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.77" y="2495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/run (1,094 samples, 13.35%)</title><rect x="203.2" y="4645" width="157.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="206.21" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >instaparse.gll/run</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (10 samples, 0.12%)</title><rect x="779.1" y="4069" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="782.10" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (4 samples, 0.05%)</title><rect x="737.1" y="4517" width="0.5" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text text-anchor="" x="740.06" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.format.DateTimeFormatter.format (3 samples, 0.04%)</title><rect x="801.7" y="4437" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="804.71" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.meta (2 samples, 0.02%)</title><rect x="338.5" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="341.55" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (33 samples, 0.40%)</title><rect x="1015.1" y="2293" width="4.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.07" y="2303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (4 samples, 0.05%)</title><rect x="749.3" y="1605" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (8 samples, 0.10%)</title><rect x="280.2" y="4549" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="283.24" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="865.2" y="3701" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/chain'---11945 (39 samples, 0.48%)</title><rect x="719.5" y="4453" width="5.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="722.50" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="1004.3" y="2661" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.28" y="2671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="846.0" y="3925" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="849.05" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (3 samples, 0.04%)</title><rect x="802.9" y="4277" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="805.86" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="984.0" y="3093" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="943.1" y="3445" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="946.09" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyResponse.valAt (3 samples, 0.04%)</title><rect x="492.6" y="3941" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="495.60" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (10 samples, 0.12%)</title><rect x="749.2" y="2197" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="986.7" y="3061" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="989.71" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.PoolArena.allocate (2 samples, 0.02%)</title><rect x="678.5" y="4725" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="681.47" y="4735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.getMethods (33 samples, 0.40%)</title><rect x="135.4" y="4629" width="4.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="138.40" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="1006.9" y="2709" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.87" y="2719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (10 samples, 0.12%)</title><rect x="991.2" y="3093" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.17" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="331.3" y="4501" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="334.35" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="749.3" y="1173" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="832.8" y="3669" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="835.80" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="864.3" y="3717" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="867.33" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (13 samples, 0.16%)</title><rect x="965.4" y="3381" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="968.40" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-full-listener/fn--19510 (492 samples, 6.00%)</title><rect x="206.5" y="4613" width="70.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="209.52" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >instapar..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (7 samples, 0.09%)</title><rect x="998.2" y="2853" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1001.23" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (37 samples, 0.45%)</title><rect x="862.2" y="4005" width="5.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="865.17" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (3 samples, 0.04%)</title><rect x="315.9" y="4517" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="318.94" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.util.AsciiString$1.hashCode (2 samples, 0.02%)</title><rect x="377.4" y="4661" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="380.42" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (8 samples, 0.10%)</title><rect x="1018.5" y="1509" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.53" y="1519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (10 samples, 0.12%)</title><rect x="749.2" y="2309" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.16" y="2319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (3 samples, 0.04%)</title><rect x="751.3" y="2437" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="754.32" y="2447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (11 samples, 0.13%)</title><rect x="805.3" y="3941" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="808.31" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (32 samples, 0.39%)</title><rect x="980.7" y="3429" width="4.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="983.66" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (2 samples, 0.02%)</title><rect x="181.9" y="4373" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="184.90" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (365 samples, 4.45%)</title><rect x="969.3" y="3749" width="52.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="972.29" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >examp..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="206.8" y="4565" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="209.81" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="818.0" y="3717" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="820.97" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (6 samples, 0.07%)</title><rect x="871.1" y="3941" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="874.10" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="954.5" y="3397" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="957.46" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="863.5" y="3621" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="866.47" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RestFn.applyTo (13 samples, 0.16%)</title><rect x="742.8" y="4581" width="1.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="745.82" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (151 samples, 1.84%)</title><rect x="827.6" y="4437" width="21.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="830.62" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="1001.1" y="2837" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1004.11" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="997.8" y="2917" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1000.80" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.equalKey (2 samples, 0.02%)</title><rect x="125.3" y="4581" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="128.32" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="989.2" y="3221" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="992.16" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="971.3" y="3029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="974.31" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.assoc (2 samples, 0.02%)</title><rect x="961.1" y="3813" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="964.08" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureExplicitCapacity (9 samples, 0.11%)</title><rect x="170.5" y="4597" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="173.53" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/persistent! (3 samples, 0.04%)</title><rect x="117.7" y="4597" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="120.69" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="989.3" y="3125" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="992.30" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="749.3" y="805" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.GeneratedMethodAccessor49 (2 samples, 0.02%)</title><rect x="973.0" y="3237" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="976.03" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="969.0" y="3397" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="972.00" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.get (15 samples, 0.18%)</title><rect x="321.8" y="4533" width="2.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="324.84" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="935.2" y="3557" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="938.17" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (7 samples, 0.09%)</title><rect x="812.1" y="3925" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="815.07" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hasheq (6 samples, 0.07%)</title><rect x="328.2" y="4405" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="331.18" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="992.0" y="2869" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="995.04" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="1008.2" y="2405" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1011.16" y="2415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Compile::ScheduleAndBundle() (2 samples, 0.02%)</title><rect x="1107.2" y="4853" width="0.3" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text text-anchor="" x="1110.22" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (10 samples, 0.12%)</title><rect x="823.2" y="4069" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="826.16" y="4079.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="924.2" y="3621" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="927.23" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName (5 samples, 0.06%)</title><rect x="122.3" y="4597" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="125.30" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="1008.9" y="2293" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1011.88" y="2303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.DelegatingMethodAccessorImpl (3 samples, 0.04%)</title><rect x="929.1" y="3221" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="932.12" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (3 samples, 0.04%)</title><rect x="923.2" y="3605" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="926.22" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="860.2" y="3621" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="863.16" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (367 samples, 4.48%)</title><rect x="969.3" y="3765" width="52.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="972.29" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >examp..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="926.1" y="3461" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="929.10" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (6 samples, 0.07%)</title><rect x="908.8" y="3797" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="911.82" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (5 samples, 0.06%)</title><rect x="1005.1" y="2661" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1008.14" y="2671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.SynchronousQueue.offer (4 samples, 0.05%)</title><rect x="371.2" y="4821" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="374.23" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="861.6" y="3701" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="864.60" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentVector.cons (4 samples, 0.05%)</title><rect x="65.9" y="4965" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="68.86" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (2 samples, 0.02%)</title><rect x="758.9" y="3317" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="761.95" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (2 samples, 0.02%)</title><rect x="327.3" y="4533" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="330.32" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.DefaultHttpHeaders.&lt;init&gt; (2 samples, 0.02%)</title><rect x="720.4" y="4085" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="723.36" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.assoc (7 samples, 0.09%)</title><rect x="328.0" y="4469" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="331.04" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="938.5" y="3589" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="848.5" y="3989" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.50" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.ConcurrentHashMap.get (2 samples, 0.02%)</title><rect x="714.0" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="717.03" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (76 samples, 0.93%)</title><rect x="1009.3" y="2789" width="11.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.31" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="982.4" y="3029" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="985.39" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="865.2" y="3525" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (28 samples, 0.34%)</title><rect x="922.9" y="3973" width="4.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.parse/parse* (50 samples, 0.61%)</title><rect x="87.9" y="4437" width="7.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="90.89" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (3 samples, 0.04%)</title><rect x="767.3" y="3701" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.30" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="976.3" y="3253" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="979.34" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.doEquiv (2 samples, 0.02%)</title><rect x="297.1" y="4421" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="300.08" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.getMethods (2 samples, 0.02%)</title><rect x="942.2" y="3413" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="945.22" y="3423.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (6 samples, 0.07%)</title><rect x="995.9" y="3221" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.92" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.stream.ChunkedWriteHandler.flush (31 samples, 0.38%)</title><rect x="673.0" y="4693" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (5 samples, 0.06%)</title><rect x="819.6" y="4101" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="822.56" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (3 samples, 0.04%)</title><rect x="1009.5" y="2517" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.46" y="2527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="967.6" y="3477" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="892.8" y="3749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="895.84" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="757.4" y="3173" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.36" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.valAt (9 samples, 0.11%)</title><rect x="322.7" y="4517" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="325.71" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="886.4" y="3685" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="889.36" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (7 samples, 0.09%)</title><rect x="822.0" y="4277" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="978.1" y="2949" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (7 samples, 0.09%)</title><rect x="1018.7" y="1477" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.67" y="1487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="920.1" y="3381" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="923.05" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="985.4" y="3077" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="988.41" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="865.6" y="3445" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="815.0" y="3989" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="817.95" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="749.3" y="1397" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (5 samples, 0.06%)</title><rect x="915.2" y="3541" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="918.16" y="3551.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (6 samples, 0.07%)</title><rect x="887.5" y="3717" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="890.51" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hasheq (4 samples, 0.05%)</title><rect x="348.3" y="4405" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="351.34" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="988.9" y="3173" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="991.87" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (6 samples, 0.07%)</title><rect x="816.4" y="3829" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="819.39" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="751.9" y="2725" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="754.89" y="2735.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="1011.5" y="2117" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1014.47" y="2127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (3 samples, 0.04%)</title><rect x="783.3" y="4101" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="786.28" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (13 samples, 0.16%)</title><rect x="935.7" y="3637" width="1.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="938.74" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (3 samples, 0.04%)</title><rect x="813.8" y="3589" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.80" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (17 samples, 0.21%)</title><rect x="1017.4" y="1893" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (8 samples, 0.10%)</title><rect x="1018.5" y="1525" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1021.53" y="1535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (77 samples, 0.94%)</title><rect x="810.1" y="4277" width="11.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="813.06" y="4287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (9 samples, 0.11%)</title><rect x="949.4" y="3877" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.ThreadLocal$ThreadLocalMap.access$100 (2 samples, 0.02%)</title><rect x="736.5" y="4565" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="739.49" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (4 samples, 0.05%)</title><rect x="770.5" y="3717" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (4 samples, 0.05%)</title><rect x="757.9" y="3445" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="760.94" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="974.3" y="3157" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="977.33" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (10 samples, 0.12%)</title><rect x="1030.0" y="4437" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1033.05" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (9 samples, 0.11%)</title><rect x="1018.4" y="1621" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1021.38" y="1631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="865.2" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.20" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (2 samples, 0.02%)</title><rect x="963.8" y="2949" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="966.82" y="2959.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.ASeq.seq (2 samples, 0.02%)</title><rect x="497.3" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="500.35" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="1018.0" y="1717" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.95" y="1727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="1003.0" y="2661" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1005.98" y="2671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (4 samples, 0.05%)</title><rect x="884.9" y="3605" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="887.92" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="824.6" y="4101" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="827.60" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="995.9" y="3189" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="998.92" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (19 samples, 0.23%)</title><rect x="864.3" y="3909" width="2.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="867.33" y="3919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.net.URI$Parser.parseAuthority (6 samples, 0.07%)</title><rect x="714.9" y="4501" width="0.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="717.89" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (3 samples, 0.04%)</title><rect x="869.9" y="3813" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.95" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="971.6" y="3205" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="974.59" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-result (96 samples, 1.17%)</title><rect x="346.6" y="4581" width="13.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="349.61" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (6 samples, 0.07%)</title><rect x="762.7" y="3637" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.69" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (15 samples, 0.18%)</title><rect x="774.5" y="4085" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.49" y="4095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (5 samples, 0.06%)</title><rect x="752.8" y="2885" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.76" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (10 samples, 0.12%)</title><rect x="172.7" y="4037" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (3 samples, 0.04%)</title><rect x="912.6" y="3365" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="915.56" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (3 samples, 0.04%)</title><rect x="965.4" y="3253" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="968.40" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.char_array (3 samples, 0.04%)</title><rect x="844.3" y="4021" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="847.32" y="4031.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/iter-reduce (16 samples, 0.20%)</title><rect x="774.4" y="4101" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.35" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="954.6" y="3285" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="957.60" y="3295.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.grow (5 samples, 0.06%)</title><rect x="133.2" y="4597" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="136.24" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (165 samples, 2.01%)</title><rect x="802.1" y="4501" width="23.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="805.14" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (9 samples, 0.11%)</title><rect x="805.6" y="3829" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="808.59" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureExplicitCapacity (2 samples, 0.02%)</title><rect x="874.3" y="4213" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="877.27" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Object.&lt;init&gt; (2 samples, 0.02%)</title><rect x="507.3" y="4213" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="510.28" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1019.4" y="933" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1022.39" y="943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (5 samples, 0.06%)</title><rect x="328.2" y="4373" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="331.18" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (2 samples, 0.02%)</title><rect x="898.0" y="3637" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="901.02" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="1010.8" y="2453" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (5 samples, 0.06%)</title><rect x="949.4" y="3669" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="952.42" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/swap! (8 samples, 0.10%)</title><rect x="343.0" y="4565" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="346.01" y="4575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.net.URL.&lt;init&gt; (2 samples, 0.02%)</title><rect x="733.0" y="4389" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="736.03" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.pcequiv (3 samples, 0.04%)</title><rect x="208.3" y="4437" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.25" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Long.toString (2 samples, 0.02%)</title><rect x="929.1" y="3125" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="932.12" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (12 samples, 0.15%)</title><rect x="1002.0" y="2917" width="1.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1004.97" y="2927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (13 samples, 0.16%)</title><rect x="970.2" y="3445" width="1.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="973.15" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="902.8" y="3493" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="905.77" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (2 samples, 0.02%)</title><rect x="179.0" y="4389" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="182.02" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.nio.DirectByteBuffer.slice (2 samples, 0.02%)</title><rect x="507.3" y="4309" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="510.28" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (4 samples, 0.05%)</title><rect x="915.2" y="3397" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="918.16" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (2 samples, 0.02%)</title><rect x="767.3" y="3605" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.30" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseChaitin::bias_color(LRG&amp;, int) (2 samples, 0.02%)</title><rect x="1114.1" y="4837" width="0.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text text-anchor="" x="1117.13" y="4847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.regex.Pattern$Branch.match (2 samples, 0.02%)</title><rect x="741.7" y="4325" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="744.67" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="884.9" y="3525" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="887.92" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="879.5" y="3493" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="882.45" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="865.9" y="3605" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.92" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="971.6" y="3125" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="974.59" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="903.6" y="3621" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="906.64" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="866.3" y="3429" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="869.35" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.copyMethods (2 samples, 0.02%)</title><rect x="840.9" y="3893" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="843.87" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.writeAndFlush (31 samples, 0.38%)</title><rect x="673.0" y="4757" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="923.4" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="926.36" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (2 samples, 0.02%)</title><rect x="774.6" y="3717" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="777.64" y="3727.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="1013.2" y="2181" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="2191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (3 samples, 0.04%)</title><rect x="827.6" y="4181" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="830.62" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (10 samples, 0.12%)</title><rect x="991.2" y="3157" width="1.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="994.17" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="1013.2" y="2085" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.20" y="2095.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="954.5" y="3477" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="957.46" y="3487.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList.ensureCapacityInternal (3 samples, 0.04%)</title><rect x="199.3" y="4549" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="202.32" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.countFrom (3 samples, 0.04%)</title><rect x="922.5" y="3749" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="925.50" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="963.8" y="2965" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="966.82" y="2975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.02%)</title><rect x="385.5" y="4869" width="0.3" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text text-anchor="" x="388.48" y="4879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (5 samples, 0.06%)</title><rect x="771.5" y="3813" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="774.47" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (50 samples, 0.61%)</title><rect x="1012.8" y="2533" width="7.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1015.77" y="2543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashSet.cons (4 samples, 0.05%)</title><rect x="74.6" y="4549" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="77.64" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (2 samples, 0.02%)</title><rect x="972.5" y="3109" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="975.46" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="999.5" y="2885" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1002.52" y="2895.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (17 samples, 0.21%)</title><rect x="1017.4" y="1909" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1020.38" y="1919.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.stream.ChunkedWriteHandler.doFlush (31 samples, 0.38%)</title><rect x="673.0" y="4677" width="4.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="946.3" y="3237" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (4 samples, 0.05%)</title><rect x="978.1" y="3045" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.07" y="3055.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="835.4" y="3749" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="838.40" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (5 samples, 0.06%)</title><rect x="1015.2" y="2213" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.22" y="2223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.indexOfObject (3 samples, 0.04%)</title><rect x="279.1" y="4469" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="282.08" y="4479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>VMThread::loop() (10 samples, 0.12%)</title><rect x="1182.2" y="4965" width="1.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text text-anchor="" x="1185.23" y="4975.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (6 samples, 0.07%)</title><rect x="995.9" y="3205" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.92" y="3215.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (3 samples, 0.04%)</title><rect x="863.0" y="3493" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="866.04" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (7 samples, 0.09%)</title><rect x="985.3" y="3381" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="988.27" y="3391.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1012.2" y="2165" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1015.19" y="2175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="990.7" y="2853" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="993.74" y="2863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.netty/allocate (8 samples, 0.10%)</title><rect x="678.2" y="4805" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="681.18" y="4815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.meta (2 samples, 0.02%)</title><rect x="77.5" y="4789" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="80.52" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (3 samples, 0.04%)</title><rect x="339.0" y="4309" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="341.98" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (126 samples, 1.54%)</title><rect x="827.6" y="4309" width="18.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="830.62" y="4319.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="813.7" y="3701" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="816.66" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="913.3" y="3589" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="916.28" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/dorun (7 samples, 0.09%)</title><rect x="822.0" y="4261" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="825.01" y="4271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.hasheq (15 samples, 0.18%)</title><rect x="357.0" y="4453" width="2.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="359.97" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (5 samples, 0.06%)</title><rect x="926.1" y="3733" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="929.10" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="749.3" y="213" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (16 samples, 0.20%)</title><rect x="762.4" y="3861" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.40" y="3871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1005.6" y="2485" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1008.57" y="2495.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="880.5" y="3557" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="883.46" y="3567.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.stream.default.Stream/fn--12571 (33 samples, 0.40%)</title><rect x="719.5" y="4357" width="4.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="722.50" y="4367.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (12 samples, 0.15%)</title><rect x="914.9" y="3749" width="1.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="917.87" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="926.1" y="3669" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="929.10" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8136/G--8131--8145 (6 samples, 0.07%)</title><rect x="763.8" y="3701" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.84" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="984.0" y="2869" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="986.98" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (274 samples, 3.34%)</title><rect x="748.4" y="4501" width="39.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.44" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >che..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="749.3" y="405" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (8 samples, 0.10%)</title><rect x="865.6" y="3749" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="868.63" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentArrayMap.valAt (2 samples, 0.02%)</title><rect x="208.8" y="4501" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="211.83" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-string (8 samples, 0.10%)</title><rect x="1023.3" y="3989" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1026.28" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (5 samples, 0.06%)</title><rect x="749.3" y="1813" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="987.1" y="3141" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="990.14" y="3151.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="1016.5" y="1749" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.51" y="1759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (2 samples, 0.02%)</title><rect x="930.4" y="3237" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="933.42" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (5 samples, 0.06%)</title><rect x="1006.1" y="2533" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1009.15" y="2543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.createNode (2 samples, 0.02%)</title><rect x="733.9" y="4181" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="736.89" y="4191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (4 samples, 0.05%)</title><rect x="1010.8" y="2325" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1013.75" y="2335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="1009.3" y="2693" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1012.31" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="920.8" y="3237" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="923.77" y="3247.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (8 samples, 0.10%)</title><rect x="762.7" y="3669" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.69" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.dohasheq (4 samples, 0.05%)</title><rect x="339.0" y="4341" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="341.98" y="4351.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (133 samples, 1.62%)</title><rect x="802.3" y="4421" width="19.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="805.28" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (14 samples, 0.17%)</title><rect x="1007.3" y="2837" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.30" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (4 samples, 0.05%)</title><rect x="770.5" y="3701" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3711.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (16 samples, 0.20%)</title><rect x="838.4" y="3973" width="2.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="841.42" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (4 samples, 0.05%)</title><rect x="76.2" y="4709" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="79.23" y="4719.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.pcequiv (3 samples, 0.04%)</title><rect x="277.9" y="4437" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="280.93" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>frame::oops_code_blob_do(OopClosure*, CodeBlobClosure*, RegisterMap const*) (5 samples, 0.06%)</title><rect x="1105.2" y="4933" width="0.7" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text text-anchor="" x="1108.20" y="4943.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="818.0" y="3765" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="820.97" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Thread.isInterrupted (3 samples, 0.04%)</title><rect x="384.2" y="4917" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="387.18" y="4927.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os::sleep(Thread*, long, bool) (2 samples, 0.02%)</title><rect x="10.0" y="4997" width="0.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="5007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="883.5" y="3621" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="886.48" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (38 samples, 0.46%)</title><rect x="953.5" y="3621" width="5.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="956.45" y="3631.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="966.6" y="3189" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="969.55" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Parse::do_one_block() (6 samples, 0.07%)</title><rect x="1173.2" y="4597" width="0.8" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text text-anchor="" x="1176.16" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8162 (3 samples, 0.04%)</title><rect x="760.4" y="3061" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="763.39" y="3071.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="957.3" y="3029" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="960.34" y="3039.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Object.&lt;init&gt; (2 samples, 0.02%)</title><rect x="354.1" y="4389" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="357.09" y="4399.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (8 samples, 0.10%)</title><rect x="823.4" y="4005" width="1.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="826.45" y="4015.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="916.6" y="3669" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="919.60" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/eval11924/subscribe--11925/fn--11930 (67 samples, 0.82%)</title><rect x="373.7" y="4901" width="9.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="376.67" y="4911.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (34 samples, 0.41%)</title><rect x="969.9" y="3573" width="4.9" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="972.87" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="821.7" y="4293" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="824.72" y="4303.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="1009.3" y="2549" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1012.31" y="2559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (10 samples, 0.12%)</title><rect x="1007.4" y="2693" width="1.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1010.44" y="2703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (3 samples, 0.04%)</title><rect x="767.3" y="3685" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.30" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="749.3" y="821" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="891.7" y="3669" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="894.69" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="838.6" y="3685" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="841.56" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (5 samples, 0.06%)</title><rect x="814.2" y="3829" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="817.23" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="884.9" y="3493" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="887.92" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-date-str (2 samples, 0.02%)</title><rect x="961.5" y="3813" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="964.52" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Numbers.equal (2 samples, 0.02%)</title><rect x="286.4" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="289.43" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8168 (2 samples, 0.02%)</title><rect x="752.5" y="2773" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="755.47" y="2783.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (6 samples, 0.07%)</title><rect x="970.7" y="3221" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="973.73" y="3231.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/partial/fn--5857 (2 samples, 0.02%)</title><rect x="209.5" y="4501" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="212.55" y="4511.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (7 samples, 0.09%)</title><rect x="951.9" y="3397" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="954.87" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.getBytes (2 samples, 0.02%)</title><rect x="679.8" y="4789" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="682.76" y="4799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="926.1" y="3445" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="929.10" y="3455.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (3 samples, 0.04%)</title><rect x="864.8" y="3589" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="867.77" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.invokeInstanceMethod (3 samples, 0.04%)</title><rect x="896.4" y="3685" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="899.44" y="3695.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred/connect/fn--11887 (2 samples, 0.02%)</title><rect x="492.3" y="3957" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="495.31" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/conj! (2 samples, 0.02%)</title><rect x="97.1" y="4453" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="100.10" y="4463.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (2 samples, 0.02%)</title><rect x="950.1" y="3509" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="953.14" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (7 samples, 0.09%)</title><rect x="922.9" y="3749" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="925.93" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="869.8" y="3973" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.80" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (7 samples, 0.09%)</title><rect x="881.9" y="3653" width="1.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="884.90" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="904.9" y="3637" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.93" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="904.9" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="907.93" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="937.2" y="3125" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="940.18" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (367 samples, 4.48%)</title><rect x="969.3" y="3813" width="52.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="972.29" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >examp..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="775.5" y="3829" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.50" y="3839.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.AbstractChannelHandlerContext.invokeFlush (24 samples, 0.29%)</title><rect x="673.0" y="4645" width="3.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (15 samples, 0.18%)</title><rect x="946.7" y="3573" width="2.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.69" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (21 samples, 0.26%)</title><rect x="172.7" y="4229" width="3.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="4239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>PhaseChaitin::Select() (3 samples, 0.04%)</title><rect x="1114.0" y="4853" width="0.4" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text text-anchor="" x="1116.98" y="4863.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Class.getMethods (71 samples, 0.87%)</title><rect x="143.0" y="4629" width="10.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="146.03" y="4639.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.PersistentHashMap.access$400 (2 samples, 0.02%)</title><rect x="284.7" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="287.70" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (3 samples, 0.04%)</title><rect x="882.9" y="3605" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="885.91" y="3615.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (8 samples, 0.10%)</title><rect x="1000.0" y="3013" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1002.96" y="3023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (8 samples, 0.10%)</title><rect x="767.2" y="3893" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="770.15" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (2 samples, 0.02%)</title><rect x="765.0" y="3589" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="767.99" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/seq--5419 (3 samples, 0.04%)</title><rect x="987.1" y="3109" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="990.14" y="3119.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (3 samples, 0.04%)</title><rect x="754.3" y="2805" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="757.34" y="2815.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="886.6" y="3253" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="889.65" y="3263.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="999.2" y="3173" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1002.24" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (4 samples, 0.05%)</title><rect x="994.2" y="2869" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="997.20" y="2879.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (3 samples, 0.04%)</title><rect x="749.3" y="997" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1007.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (17 samples, 0.21%)</title><rect x="770.5" y="3989" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="773.46" y="3999.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (11 samples, 0.13%)</title><rect x="495.0" y="4533" width="1.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="498.04" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (2 samples, 0.02%)</title><rect x="985.4" y="3093" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="988.41" y="3103.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="1014.2" y="1925" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1017.21" y="1935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (3 samples, 0.04%)</title><rect x="1005.4" y="2549" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1008.43" y="2559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="918.6" y="3365" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="921.61" y="3375.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (15 samples, 0.18%)</title><rect x="762.5" y="3797" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.55" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (149 samples, 1.82%)</title><rect x="748.7" y="4117" width="21.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.72" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (56 samples, 0.68%)</title><rect x="880.9" y="3973" width="8.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="883.89" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="869.4" y="3765" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="872.37" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (5 samples, 0.06%)</title><rect x="1013.8" y="2165" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1016.78" y="2175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (17 samples, 0.21%)</title><rect x="928.8" y="3637" width="2.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="931.83" y="3647.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util$4.equiv (3 samples, 0.04%)</title><rect x="316.5" y="4421" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="319.52" y="4431.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>manifold.deferred.Deferred/fn--11768 (75 samples, 0.92%)</title><rect x="482.7" y="4325" width="10.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="485.66" y="4335.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="1000.8" y="2597" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1003.82" y="2607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.conj (7 samples, 0.09%)</title><rect x="328.0" y="4517" width="1.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="331.04" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (2 samples, 0.02%)</title><rect x="837.3" y="3797" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="840.27" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="918.0" y="3173" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="921.04" y="3183.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.time.chrono.IsoChronology.zonedDateTime (2 samples, 0.02%)</title><rect x="799.5" y="4437" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="802.55" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (8 samples, 0.10%)</title><rect x="862.8" y="3733" width="1.1" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="865.75" y="3743.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (4 samples, 0.05%)</title><rect x="929.0" y="3317" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="931.98" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.channel.CombinedChannelDuplexHandler.channelRead (261 samples, 3.18%)</title><rect x="474.5" y="4757" width="37.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="477.46" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >io...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="762.7" y="3509" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="765.69" y="3519.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="840.0" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="843.00" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.buffer.AbstractByteBufAllocator.directBuffer (3 samples, 0.04%)</title><rect x="694.6" y="4661" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="697.59" y="4671.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.substring (3 samples, 0.04%)</title><rect x="739.8" y="4533" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="742.80" y="4543.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="848.1" y="3749" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="851.06" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (2 samples, 0.02%)</title><rect x="785.3" y="4037" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.29" y="4047.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/doall (2 samples, 0.02%)</title><rect x="836.5" y="3765" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="839.55" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (3 samples, 0.04%)</title><rect x="882.9" y="3589" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="885.91" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.http.core.NettyResponse.get_STAR_ (2 samples, 0.02%)</title><rect x="482.1" y="4373" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="485.09" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.format (28 samples, 0.34%)</title><rect x="738.2" y="4597" width="4.0" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="741.21" y="4607.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (5 samples, 0.06%)</title><rect x="775.5" y="3941" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="778.50" y="3951.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>io.netty.handler.codec.http.HttpObjectDecoder$HeaderParser.parse (2 samples, 0.02%)</title><rect x="477.2" y="4645" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="480.19" y="4655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (15 samples, 0.18%)</title><rect x="907.8" y="3925" width="2.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="910.81" y="3935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/string-parse (87 samples, 1.06%)</title><rect x="312.1" y="4581" width="12.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="315.05" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (4 samples, 0.05%)</title><rect x="833.5" y="4117" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="836.52" y="4127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.count (3 samples, 0.04%)</title><rect x="1022.1" y="3781" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1025.13" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Cons.next (4 samples, 0.05%)</title><rect x="967.6" y="3493" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="970.56" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (2 samples, 0.02%)</title><rect x="974.8" y="3397" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="977.76" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (8 samples, 0.10%)</title><rect x="862.8" y="3765" width="1.1" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="865.75" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.hashCode (2 samples, 0.02%)</title><rect x="179.0" y="4405" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="182.02" y="4415.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (16 samples, 0.20%)</title><rect x="899.8" y="3653" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="902.75" y="3663.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/node-get (17 samples, 0.21%)</title><rect x="296.1" y="4549" width="2.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="299.07" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (2 samples, 0.02%)</title><rect x="946.3" y="3189" width="0.2" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3199.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="818.1" y="3669" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="821.12" y="3679.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (4 samples, 0.05%)</title><rect x="749.3" y="1493" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="752.30" y="1503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Reflector.getMethods (2 samples, 0.02%)</title><rect x="935.7" y="3525" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="938.74" y="3535.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.hashCode (3 samples, 0.04%)</title><rect x="186.4" y="4517" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="189.37" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (5 samples, 0.06%)</title><rect x="912.3" y="3429" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="915.28" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array/fn--22158 (3 samples, 0.04%)</title><rect x="946.3" y="3429" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="949.25" y="3439.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="811.6" y="3877" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="814.64" y="3887.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8110/G--8105--8123 (6 samples, 0.07%)</title><rect x="755.5" y="3269" width="0.9" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="758.49" y="3279.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (3 samples, 0.04%)</title><rect x="886.5" y="3493" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="889.51" y="3503.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (3 samples, 0.04%)</title><rect x="976.3" y="3317" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="979.34" y="3327.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.string/upper-case (3 samples, 0.04%)</title><rect x="719.9" y="4149" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="722.93" y="4159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (2 samples, 0.02%)</title><rect x="980.2" y="3349" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="983.23" y="3359.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (4 samples, 0.05%)</title><rect x="866.2" y="3589" width="0.6" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="869.21" y="3599.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (5 samples, 0.06%)</title><rect x="992.6" y="3333" width="0.7" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="995.61" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (2 samples, 0.02%)</title><rect x="1007.9" y="2469" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1010.87" y="2479.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (2 samples, 0.02%)</title><rect x="978.6" y="3077" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="981.65" y="3087.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>itable stub (2 samples, 0.02%)</title><rect x="347.5" y="4517" width="0.3" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text text-anchor="" x="350.47" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.next (22 samples, 0.27%)</title><rect x="858.4" y="3973" width="3.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="861.43" y="3983.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate (146 samples, 1.78%)</title><rect x="748.7" y="4101" width="21.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="751.72" y="4111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/take/fn--5927 (16 samples, 0.20%)</title><rect x="899.8" y="3749" width="2.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="902.75" y="3759.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/merge/fn--5976 (9 samples, 0.11%)</title><rect x="733.6" y="4373" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="736.61" y="4383.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (6 samples, 0.07%)</title><rect x="900.2" y="3461" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="903.18" y="3471.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (2 samples, 0.02%)</title><rect x="975.0" y="3301" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="978.05" y="3311.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/seq-reduce (2 samples, 0.02%)</title><rect x="759.8" y="3397" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="762.81" y="3407.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hashCode (9 samples, 0.11%)</title><rect x="183.8" y="4549" width="1.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="186.78" y="4559.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.sval (4 samples, 0.05%)</title><rect x="1004.3" y="2565" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1007.28" y="2575.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (3 samples, 0.04%)</title><rect x="925.1" y="3573" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="928.09" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (2 samples, 0.02%)</title><rect x="1016.1" y="1861" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1019.08" y="1871.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clout.core/re-match-groups (3 samples, 0.04%)</title><rect x="77.1" y="4757" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="80.09" y="4767.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17267 (4 samples, 0.05%)</title><rect x="773.1" y="3957" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="776.06" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/reduce (9 samples, 0.11%)</title><rect x="785.7" y="4213" width="1.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="788.72" y="4223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.reflect.Reflection.getCallerClass (25 samples, 0.31%)</title><rect x="136.6" y="4613" width="3.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="139.55" y="4623.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.hasheq (2 samples, 0.02%)</title><rect x="31.9" y="5013" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="34.88" y="5023.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="977.2" y="3157" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="980.21" y="3167.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object/fn--22162 (2 samples, 0.02%)</title><rect x="1015.6" y="1925" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1018.65" y="1935.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentVector.doEquiv (2 samples, 0.02%)</title><rect x="356.3" y="4437" width="0.2" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="359.25" y="4447.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LongRange.reduce (24 samples, 0.29%)</title><rect x="903.5" y="3765" width="3.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="906.49" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (4 samples, 0.05%)</title><rect x="861.6" y="3893" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="864.60" y="3903.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (19 samples, 0.23%)</title><rect x="976.8" y="3333" width="2.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="979.78" y="3343.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>instaparse.gll/push-listener (14 samples, 0.17%)</title><rect x="325.9" y="4581" width="2.0" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="328.88" y="4591.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="1006.9" y="2789" width="0.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="1009.87" y="2799.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RestFn.applyTo (10 samples, 0.12%)</title><rect x="79.1" y="4693" width="1.4" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="82.11" y="4703.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.LazySeq.seq (2 samples, 0.02%)</title><rect x="822.7" y="3957" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="825.73" y="3967.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/next--5403 (5 samples, 0.06%)</title><rect x="938.5" y="3765" width="0.7" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="941.48" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>cheshire.generate/generate/fn--17251 (3 samples, 0.04%)</title><rect x="763.8" y="3573" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="766.84" y="3583.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.02%)</title><rect x="513.9" y="4677" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="516.90" y="4687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.get (5 samples, 0.06%)</title><rect x="744.8" y="4517" width="0.8" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="747.84" y="4527.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-array (3 samples, 0.04%)</title><rect x="890.0" y="3797" width="0.4" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="892.96" y="3807.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.Util.equiv (2 samples, 0.02%)</title><rect x="945.2" y="3125" width="0.3" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="948.25" y="3135.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.RT.seq (3 samples, 0.04%)</title><rect x="996.9" y="2837" width="0.5" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="999.93" y="2847.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json (6 samples, 0.07%)</title><rect x="843.2" y="3813" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="846.17" y="3823.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.lang.APersistentMap.mapHash (4 samples, 0.05%)</title><rect x="172.7" y="3765" width="0.6" height="15.0" fill="rgb(145,220,81)" rx="2" ry="2" />
<text text-anchor="" x="175.69" y="3775.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core/repeatedly/fn--6479 (2 samples, 0.02%)</title><rect x="995.2" y="2645" width="0.3" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="998.20" y="2655.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>clojure.core.protocols/fn--8181 (4 samples, 0.05%)</title><rect x="771.5" y="3781" width="0.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="774.47" y="3791.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>aleph.netty/write-and-flush (31 samples, 0.38%)</title><rect x="673.0" y="4821" width="4.5" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="675.99" y="4831.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>example.client/rand-json-object (5 samples, 0.06%)</title><rect x="1005.1" y="2677" width="0.8" height="15.0" fill="rgb(143,181,254)" rx="2" ry="2" />
<text text-anchor="" x="1008.14" y="2687.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
